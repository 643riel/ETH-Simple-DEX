{"id":"896718457800a3ce28b2bebbe9d4cac8","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/SimpleDEX.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/// @title Simple Decentralized Exchange (DEX)\r\n/// @notice Contrato para intercambiar tokens y gestionar liquidez\r\n/// @dev Implementa la fórmula de producto constante para intercambios\r\n/// @author [Gabriel Iakantas]\r\ncontract SimpleDEX is Ownable {\r\n    /// @notice Token A en el pool de liquidez\r\n    IERC20 public tokenA;\r\n\r\n    /// @notice Token B en el pool de liquidez\r\n    IERC20 public tokenB;\r\n\r\n    /// @notice Evento emitido al agregar liquidez\r\n    /// @param amountA Cantidad de token A agregada\r\n    /// @param amountB Cantidad de token B agregada\r\n    event LiquidityAdded(uint256 amountA, uint256 amountB);\r\n\r\n    /// @notice Evento emitido al remover liquidez\r\n    /// @param amountA Cantidad de token A removida\r\n    /// @param amountB Cantidad de token B removida\r\n    event LiquidityRemoved(uint256 amountA, uint256 amountB);\r\n\r\n    /// @notice Evento emitido al realizar un intercambio\r\n    /// @param user Dirección del usuario que realizó el intercambio\r\n    /// @param amountIn Cantidad del token de entrada\r\n    /// @param amountOut Cantidad del token de salida\r\n    event TokenSwapped(address indexed user, uint256 amountIn, uint256 amountOut);\r\n\r\n    /// @notice Constructor para inicializar el contrato con los tokens\r\n    /// @param _tokenA Dirección del token A\r\n    /// @param _tokenB Dirección del token B\r\n    constructor(address _tokenA, address _tokenB) Ownable(msg.sender) {\r\n        require(_tokenA != address(0) && _tokenB != address(0), \"Token address cannot be 0\");\r\n        require(_tokenA != _tokenB, \"Tokens must be different\");\r\n        \r\n        tokenA = IERC20(_tokenA);\r\n        tokenB = IERC20(_tokenB);\r\n    }\r\n\r\n    /// @notice Agrega liquidez al pool\r\n    /// @dev Solo puede ser llamado por el propietario\r\n    /// @param amountA Cantidad de token A a agregar\r\n    /// @param amountB Cantidad de token B a agregar\r\n    function addLiquidity(uint256 amountA, uint256 amountB) external onlyOwner {\r\n        require(amountA > 0 && amountB > 0, \"Amounts must be > 0\");\r\n        \r\n        tokenA.transferFrom(msg.sender, address(this), amountA);\r\n        tokenB.transferFrom(msg.sender, address(this), amountB);\r\n\r\n        emit LiquidityAdded(amountA, amountB);\r\n    }\r\n\r\n    /// @notice Remueve liquidez del pool\r\n    /// @dev Solo puede ser llamado por el propietario\r\n    /// @param amountA Cantidad de token A a remover\r\n    /// @param amountB Cantidad de token B a remover\r\n    function removeLiquidity(uint256 amountA, uint256 amountB) external onlyOwner {\r\n        uint256 balanceA = tokenA.balanceOf(address(this));\r\n        uint256 balanceB = tokenB.balanceOf(address(this));\r\n        require(amountA <= balanceA && amountB <= balanceB, \"Not enough liquidity available\");\r\n\r\n        tokenA.transfer(msg.sender, amountA);\r\n        tokenB.transfer(msg.sender, amountB);\r\n\r\n        emit LiquidityRemoved(amountA, amountB);\r\n    }\r\n\r\n    /// @notice Intercambia token A por token B\r\n    /// @param amountAIn Cantidad de token A para intercambiar\r\n    function swapAforB(uint256 amountAIn) external {\r\n        require(amountAIn > 0, \"Input amount must be > 0\");\r\n\r\n        uint256 balanceA = tokenA.balanceOf(address(this));\r\n        uint256 balanceB = tokenB.balanceOf(address(this));\r\n        require(balanceA > 0 && balanceB > 0, \"Insufficient liquidity\");\r\n\r\n        uint256 amountBOut = getAmountOut(amountAIn, balanceA, balanceB);\r\n\r\n        tokenA.transferFrom(msg.sender, address(this), amountAIn);\r\n        tokenB.transfer(msg.sender, amountBOut);\r\n\r\n        emit TokenSwapped(msg.sender, amountAIn, amountBOut);\r\n    }\r\n\r\n    /// @notice Intercambia token B por token A\r\n    /// @param amountBIn Cantidad de token B para intercambiar\r\n    function swapBforA(uint256 amountBIn) external {\r\n        require(amountBIn > 0, \"Input amount must be > 0\");\r\n\r\n        uint256 balanceA = tokenA.balanceOf(address(this));\r\n        uint256 balanceB = tokenB.balanceOf(address(this));\r\n        require(balanceA > 0 && balanceB > 0, \"Insufficient liquidity\");\r\n\r\n        uint256 amountAOut = getAmountOut(amountBIn, balanceB, balanceA);\r\n\r\n        tokenB.transferFrom(msg.sender, address(this), amountBIn);\r\n        tokenA.transfer(msg.sender, amountAOut);\r\n\r\n        emit TokenSwapped(msg.sender, amountBIn, amountAOut);\r\n    }\r\n\r\n    /// @notice Calcula el precio relativo de un token\r\n    /// @param _token Dirección del token a evaluar\r\n    /// @return Precio relativo en términos del otro token\r\n    function getPrice(address _token) external view returns (uint256) {\r\n        require(_token == address(tokenA) || _token == address(tokenB), \"Invalid token address\");\r\n\r\n        uint256 balanceA = tokenA.balanceOf(address(this));\r\n        uint256 balanceB = tokenB.balanceOf(address(this));\r\n        return _token == address(tokenA)\r\n            ? (balanceB * 1e18) / balanceA\r\n            : (balanceA * 1e18) / balanceB;\r\n    }\r\n\r\n    /// @notice Calcula la cantidad de tokens de salida basándose en la fórmula de producto constante\r\n    /// @param amountIn Cantidad de tokens de entrada\r\n    /// @param reserveIn Reserva del token de entrada\r\n    /// @param reserveOut Reserva del token de salida\r\n    /// @return Cantidad de tokens de salida\r\n    function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) private pure returns (uint256) {\r\n        require(reserveIn > 0 && reserveOut > 0, \"Insufficient reserves\");\r\n        return (amountIn * reserveOut) / (reserveIn + amountIn);\r\n    }\r\n}\r\n"},"contracts/TokenA.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract TokenA is ERC20 {\r\n    constructor(uint256 initialSupply) ERC20(\"TokenA\", \"TKA\") {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n}"},"contracts/TokenB.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract TokenB is ERC20 {\r\n    constructor(uint256 initialSupply) ERC20(\"TokenB\", \"TKB\") {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[933],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":934,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,933],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":934,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1133:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"1133:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1133:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1142:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1142:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1142:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1150:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1150:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1150:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1166:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1166:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1166:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:757:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,933],"name":"ERC20","nameLocation":"1124:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1185:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1201:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1245:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1261:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1288:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1335:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1385:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1370:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1396:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1657:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1667:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1675:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1667:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1690:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1700:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1690:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1425:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1627:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1613:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1634:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1657:0:2"},"scope":799,"src":"1601:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"1839:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1856:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"1849:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1720:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1792:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1824:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:2"},"scope":799,"src":"1779:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2043:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2060:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2053:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1874:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"1996:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2028:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:2"},"scope":799,"src":"1981:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"2763:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"2773:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2080:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"2724:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"2756:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:2"},"scope":799,"src":"2707:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"2910:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2927:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"2920:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"2795:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"2869:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"2901:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:2"},"scope":799,"src":"2849:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3078:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3095:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3105:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3088:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2952:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3031:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3023:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3069:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:2"},"scope":799,"src":"3004:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3390:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3408:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3400:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3416:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3448:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3455:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3459:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3438:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3438:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3475:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3126:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3341:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3333:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3353:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3345:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3384:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:2"},"scope":799,"src":"3315:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3640:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3657:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3669:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3676:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3650:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3499:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3578:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3570:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3593:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3585:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3631:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:2"},"scope":799,"src":"3551:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4077:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4095:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4087:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4103:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4134:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4141:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4150:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4125:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4125:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4166:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3697:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4023:7:2","nodeType":"VariableDeclaration","scope":450,"src":"4015:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4040:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4032:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4071:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:2"},"scope":799,"src":"3998:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"4869:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"4887:7:2","nodeType":"VariableDeclaration","scope":481,"src":"4879:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4897:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4935:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4941:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4950:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4919:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"4919:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4976:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4982:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4986:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4966:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"4966:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"5002:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4190:581:2","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"4806:4:2","nodeType":"VariableDeclaration","scope":482,"src":"4798:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"4820:2:2","nodeType":"VariableDeclaration","scope":482,"src":"4812:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"4832:5:2","nodeType":"VariableDeclaration","scope":482,"src":"4824:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"4863:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:2"},"scope":799,"src":"4776:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5462:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5476:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5472:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5496:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5517:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"5510:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5571:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5567:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5589:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5610:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"RevertStatement","src":"5603:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5670:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5676:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5680:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5662:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5662:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5026:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5420:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5412:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5434:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5426:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5446:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5438:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5462:0:2"},"scope":799,"src":"5393:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6083:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6097:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6271:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6285:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6307:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6317:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6340:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6354:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6336:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6361:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6411:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6417:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6430:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6386:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"RevertStatement","src":"6379:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6464:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6571:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6581:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6589:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6603:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6571:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6093:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6117:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6249:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6233:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6647:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"6862:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"6876:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7021:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7031:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7038:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7021:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6643:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6665:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6679:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6810:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6826:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"6810:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7092:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7098:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7102:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7083:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7078:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5699:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6033:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6025:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6047:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6039:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6059:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6051:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6083:0:2"},"scope":799,"src":"6008:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7514:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7528:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7524:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7551:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7572:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"RevertStatement","src":"7565:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7644:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7653:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7624:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7624:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7121:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7481:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7473:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7498:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7490:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7514:0:2"},"scope":799,"src":"7458:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8040:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8054:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8050:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8077:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8098:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"8091:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8156:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8177:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8148:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8148:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7672:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"8007:7:2","nodeType":"VariableDeclaration","scope":672,"src":"7999:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8024:5:2","nodeType":"VariableDeclaration","scope":672,"src":"8016:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8040:0:2"},"scope":799,"src":"7984:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"8800:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"8819:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8826:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"8835:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"8810:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"8810:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8196:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"8752:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8744:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"8767:7:2","nodeType":"VariableDeclaration","scope":690,"src":"8759:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"8784:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8776:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"8800:0:2"},"scope":799,"src":"8726:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"9799:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9813:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"9809:89:2","trueBody":{"id":715,"nodeType":"Block","src":"9834:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9855:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"9848:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"9911:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"9907:90:2","trueBody":{"id":730,"nodeType":"Block","src":"9934:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9955:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"RevertStatement","src":"9948:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10006:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10018:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10025:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10036:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"10006:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10055:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10051:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10066:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10094:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10101:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10110:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10085:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10080:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"8860:836:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9727:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9719:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9742:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9734:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"9759:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9751:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:2","nodeType":"VariableDeclaration","scope":750,"src":"9766:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"9799:0:2"},"scope":799,"src":"9701:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10504:388:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10514:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10551:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10558:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10541:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10580:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:2","memberName":"max","nodeType":"MemberAccess","src":"10600:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10576:310:2","trueBody":{"id":795,"nodeType":"Block","src":"10619:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10637:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10656:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10633:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10663:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10715:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10724:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10742:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10688:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"RevertStatement","src":"10681:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"10776:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10813:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10820:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10829:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10848:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"10804:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"10804:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10139:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10448:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10440:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10463:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10455:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10480:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10472:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10504:0:2"},"scope":799,"src":"10415:477:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1106:9788:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:10790:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:71:3","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"214:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"227:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"396:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:3","nodeType":"VariableDeclaration","scope":811,"src":"405:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:3","nodeType":"VariableDeclaration","scope":811,"src":"427:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:3","nodeType":"VariableDeclaration","scope":811,"src":"447:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:3"},"src":"390:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"468:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"627:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:3","nodeType":"VariableDeclaration","scope":820,"src":"636:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:3","nodeType":"VariableDeclaration","scope":820,"src":"659:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:3","nodeType":"VariableDeclaration","scope":820,"src":"684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:3"},"src":"621:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"705:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"795:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"821:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:3"},"scope":877,"src":"775:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"836:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":834,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":877,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"986:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1230:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1222:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1242:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1234:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1267:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:3"},"scope":877,"src":"1204:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1279:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1575:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1567:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1590:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1622:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:3"},"scope":877,"src":"1548:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1637:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2334:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2326:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2351:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2376:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:3"},"scope":877,"src":"2309:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2388:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2720:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2712:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2734:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2726:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2746:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2738:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2771:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:3"},"scope":877,"src":"2690:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"204:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2674:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["306:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"306:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"306:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:87:4","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"288:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"319:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"391:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"417:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:4"},"scope":903,"src":"378:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"438:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"514:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"540:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:4"},"scope":903,"src":"499:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"561:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"648:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"674:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:4"},"scope":903,"src":"631:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"278:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:559:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[933]},"id":934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":933,"linearizedBaseContracts":[933],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":914,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":910,"id":913,"nodeType":"Return","src":"728:17:5"}]},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":933,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":919,"id":922,"nodeType":"Return","src":"835:15:5"}]},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":917,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":933,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":928,"id":930,"nodeType":"Return","src":"945:8:5"}]},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":933,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":934,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"contracts/SimpleDEX.sol":{"ast":{"absolutePath":"contracts/SimpleDEX.sol","exportedSymbols":{"Context":[933],"IERC20":[877],"Ownable":[147],"SimpleDEX":[1395]},"id":1396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":935,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1396,"sourceUnit":878,"src":"61:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1396,"sourceUnit":148,"src":"119:52:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":939,"name":"Ownable","nameLocations":["418:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"418:7:6"},"id":940,"nodeType":"InheritanceSpecifier","src":"418:7:6"}],"canonicalName":"SimpleDEX","contractDependencies":[],"contractKind":"contract","documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"175:221:6","text":"@title Simple Decentralized Exchange (DEX)\n @notice Contrato para intercambiar tokens y gestionar liquidez\n @dev Implementa la fórmula de producto constante para intercambios\n @author [Gabriel Iakantas]"},"fullyImplemented":true,"id":1395,"linearizedBaseContracts":[1395,147,933],"name":"SimpleDEX","nameLocation":"405:9:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"433:42:6","text":"@notice Token A en el pool de liquidez"},"functionSelector":"0fc63d10","id":944,"mutability":"mutable","name":"tokenA","nameLocation":"495:6:6","nodeType":"VariableDeclaration","scope":1395,"src":"481:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":943,"nodeType":"UserDefinedTypeName","pathNode":{"id":942,"name":"IERC20","nameLocations":["481:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"481:6:6"},"referencedDeclaration":877,"src":"481:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"510:42:6","text":"@notice Token B en el pool de liquidez"},"functionSelector":"5f64b55b","id":948,"mutability":"mutable","name":"tokenB","nameLocation":"572:6:6","nodeType":"VariableDeclaration","scope":1395,"src":"558:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"},"typeName":{"id":947,"nodeType":"UserDefinedTypeName","pathNode":{"id":946,"name":"IERC20","nameLocations":["558:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"558:6:6"},"referencedDeclaration":877,"src":"558:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"visibility":"public"},{"anonymous":false,"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"587:152:6","text":"@notice Evento emitido al agregar liquidez\n @param amountA Cantidad de token A agregada\n @param amountB Cantidad de token B agregada"},"eventSelector":"38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b","id":955,"name":"LiquidityAdded","nameLocation":"751:14:6","nodeType":"EventDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"774:7:6","nodeType":"VariableDeclaration","scope":955,"src":"766:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":953,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"791:7:6","nodeType":"VariableDeclaration","scope":955,"src":"783:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"783:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"765:34:6"},"src":"745:55:6"},{"anonymous":false,"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"808:152:6","text":"@notice Evento emitido al remover liquidez\n @param amountA Cantidad de token A removida\n @param amountB Cantidad de token B removida"},"eventSelector":"6f0f96292ae0038c04f9b6bab30f185d9ca02c471d0983f563f2a4f674aef137","id":962,"name":"LiquidityRemoved","nameLocation":"972:16:6","nodeType":"EventDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"indexed":false,"mutability":"mutable","name":"amountA","nameLocation":"997:7:6","nodeType":"VariableDeclaration","scope":962,"src":"989:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"indexed":false,"mutability":"mutable","name":"amountB","nameLocation":"1014:7:6","nodeType":"VariableDeclaration","scope":962,"src":"1006:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1006:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:34:6"},"src":"966:57:6"},{"anonymous":false,"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"1031:235:6","text":"@notice Evento emitido al realizar un intercambio\n @param user Dirección del usuario que realizó el intercambio\n @param amountIn Cantidad del token de entrada\n @param amountOut Cantidad del token de salida"},"eventSelector":"d5a1cd88ddd329cc1ddf861a21708efa9ef3136b88e1420c21f91ef6f95ad024","id":971,"name":"TokenSwapped","nameLocation":"1278:12:6","nodeType":"EventDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1307:4:6","nodeType":"VariableDeclaration","scope":971,"src":"1291:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"1321:8:6","nodeType":"VariableDeclaration","scope":971,"src":"1313:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"1339:9:6","nodeType":"VariableDeclaration","scope":971,"src":"1331:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:59:6"},"src":"1272:78:6"},{"body":{"id":1019,"nodeType":"Block","src":"1591:249:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1610:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1629:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1621:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"1621:7:6","typeDescriptions":{}}},"id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1621:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1610:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"1635:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1654:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1646:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"1646:7:6","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1646:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1635:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1610:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616464726573732063616e6e6f742062652030","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1658:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd","typeString":"literal_string \"Token address cannot be 0\""},"value":"Token address cannot be 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd","typeString":"literal_string \"Token address cannot be 0\""}],"id":983,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1602:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1602:84:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"1602:84:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1705:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1002,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"1716:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1705:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e73206d75737420626520646966666572656e74","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1725:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023","typeString":"literal_string \"Tokens must be different\""},"value":"Tokens must be different"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023","typeString":"literal_string \"Tokens must be different\""}],"id":1000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1697:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1697:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"ExpressionStatement","src":"1697:55:6"},{"expression":{"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1007,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"1773:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1009,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1789:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1008,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"1782:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$877_$","typeString":"type(contract IERC20)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1782:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"src":"1773:24:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1012,"nodeType":"ExpressionStatement","src":"1773:24:6"},{"expression":{"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1013,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"1808:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1015,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"1824:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1014,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"1817:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$877_$","typeString":"type(contract IERC20)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"src":"1808:24:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1018,"nodeType":"ExpressionStatement","src":"1808:24:6"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"1358:161:6","text":"@notice Constructor para inicializar el contrato con los tokens\n @param _tokenA Dirección del token A\n @param _tokenB Dirección del token B"},"id":1020,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1579:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1583:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1579:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":981,"kind":"baseConstructorSpecifier","modifierName":{"id":978,"name":"Ownable","nameLocations":["1571:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1571:7:6"},"nodeType":"ModifierInvocation","src":"1571:19:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"_tokenA","nameLocation":"1545:7:6","nodeType":"VariableDeclaration","scope":1020,"src":"1537:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"1537:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"_tokenB","nameLocation":"1562:7:6","nodeType":"VariableDeclaration","scope":1020,"src":"1554:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"1554:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1536:34:6"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"1591:0:6"},"scope":1395,"src":"1525:315:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1070,"nodeType":"Block","src":"2128:269:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1031,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2147:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1034,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"2162:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2172:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2162:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2147:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7473206d757374206265203e2030","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2175:21:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0","typeString":"literal_string \"Amounts must be > 0\""},"value":"Amounts must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0","typeString":"literal_string \"Amounts must be > 0\""}],"id":1030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2139:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2139:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1040,"nodeType":"ExpressionStatement","src":"2139:58:6"},{"expression":{"arguments":[{"expression":{"id":1044,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2238:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2242:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2238:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1048,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2258:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2250:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"2250:7:6","typeDescriptions":{}}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2250:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2265:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1041,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"2218:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2225:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":876,"src":"2218:19:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2218:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"ExpressionStatement","src":"2218:55:6"},{"expression":{"arguments":[{"expression":{"id":1056,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2304:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2308:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2304:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1060,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:6","typeDescriptions":{}}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1062,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"2331:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1053,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2284:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2291:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":876,"src":"2284:19:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1064,"nodeType":"ExpressionStatement","src":"2284:55:6"},{"eventCall":{"arguments":[{"id":1066,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"2372:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1067,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"2381:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1065,"name":"LiquidityAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2357:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"EmitStatement","src":"2352:37:6"}]},"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"1848:199:6","text":"@notice Agrega liquidez al pool\n @dev Solo puede ser llamado por el propietario\n @param amountA Cantidad de token A a agregar\n @param amountB Cantidad de token B a agregar"},"functionSelector":"9cd441da","id":1071,"implemented":true,"kind":"function","modifiers":[{"id":1028,"kind":"modifierInvocation","modifierName":{"id":1027,"name":"onlyOwner","nameLocations":["2118:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2118:9:6"},"nodeType":"ModifierInvocation","src":"2118:9:6"}],"name":"addLiquidity","nameLocation":"2062:12:6","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"amountA","nameLocation":"2083:7:6","nodeType":"VariableDeclaration","scope":1071,"src":"2075:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"amountB","nameLocation":"2100:7:6","nodeType":"VariableDeclaration","scope":1071,"src":"2092:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"2092:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:34:6"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[],"src":"2128:0:6"},"scope":1395,"src":"2053:344:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1133,"nodeType":"Block","src":"2690:374:6","statements":[{"assignments":[1082],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"balanceA","nameLocation":"2709:8:6","nodeType":"VariableDeclaration","scope":1133,"src":"2701:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1090,"initialValue":{"arguments":[{"arguments":[{"id":1087,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2745:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2737:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"2737:7:6","typeDescriptions":{}}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2737:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1083,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"2720:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2727:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"2720:16:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2720:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2701:50:6"},{"assignments":[1092],"declarations":[{"constant":false,"id":1092,"mutability":"mutable","name":"balanceB","nameLocation":"2770:8:6","nodeType":"VariableDeclaration","scope":1133,"src":"2762:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1100,"initialValue":{"arguments":[{"arguments":[{"id":1097,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2806:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2798:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"2798:7:6","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1093,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2781:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"2781:16:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2781:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2762:50:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1102,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"2831:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1103,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2842:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2831:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1105,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2854:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1106,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2865:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2831:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768206c697175696469747920617661696c61626c65","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2875:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3","typeString":"literal_string \"Not enough liquidity available\""},"value":"Not enough liquidity available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3","typeString":"literal_string \"Not enough liquidity available\""}],"id":1101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2823:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1111,"nodeType":"ExpressionStatement","src":"2823:85:6"},{"expression":{"arguments":[{"expression":{"id":1115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2937:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2941:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2937:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"2949:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1112,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"2921:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2928:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"2921:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1119,"nodeType":"ExpressionStatement","src":"2921:36:6"},{"expression":{"arguments":[{"expression":{"id":1123,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2984:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2988:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2984:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2996:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1120,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"2968:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"2968:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2968:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1127,"nodeType":"ExpressionStatement","src":"2968:36:6"},{"eventCall":{"arguments":[{"id":1129,"name":"amountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"3039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1130,"name":"amountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"3048:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1128,"name":"LiquidityRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"3022:16:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3022:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"EmitStatement","src":"3017:39:6"}]},"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"2405:201:6","text":"@notice Remueve liquidez del pool\n @dev Solo puede ser llamado por el propietario\n @param amountA Cantidad de token A a remover\n @param amountB Cantidad de token B a remover"},"functionSelector":"9d7de6b3","id":1134,"implemented":true,"kind":"function","modifiers":[{"id":1079,"kind":"modifierInvocation","modifierName":{"id":1078,"name":"onlyOwner","nameLocations":["2680:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2680:9:6"},"nodeType":"ModifierInvocation","src":"2680:9:6"}],"name":"removeLiquidity","nameLocation":"2621:15:6","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"amountA","nameLocation":"2645:7:6","nodeType":"VariableDeclaration","scope":1134,"src":"2637:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"amountB","nameLocation":"2662:7:6","nodeType":"VariableDeclaration","scope":1134,"src":"2654:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"2654:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2636:34:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"2690:0:6"},"scope":1395,"src":"2612:452:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1213,"nodeType":"Block","src":"3232:529:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"amountAIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"3251:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3263:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3251:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e70757420616d6f756e74206d757374206265203e2030","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3266:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe","typeString":"literal_string \"Input amount must be > 0\""},"value":"Input amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe","typeString":"literal_string \"Input amount must be > 0\""}],"id":1140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3243:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3243:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"ExpressionStatement","src":"3243:50:6"},{"assignments":[1148],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"balanceA","nameLocation":"3314:8:6","nodeType":"VariableDeclaration","scope":1213,"src":"3306:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3306:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1156,"initialValue":{"arguments":[{"arguments":[{"id":1153,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3350:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3342:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"3342:7:6","typeDescriptions":{}}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3342:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1149,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"3325:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3332:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"3325:16:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3306:50:6"},{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"balanceB","nameLocation":"3375:8:6","nodeType":"VariableDeclaration","scope":1213,"src":"3367:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"3367:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1166,"initialValue":{"arguments":[{"arguments":[{"id":1163,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3411:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3403:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"3403:7:6","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3403:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1159,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"3386:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3393:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"3386:16:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3367:50:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3436:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3447:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3436:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"3452:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3463:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3452:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3436:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c6971756964697479","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3466:24:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""},"value":"Insufficient liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""}],"id":1167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3428:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3428:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1177,"nodeType":"ExpressionStatement","src":"3428:63:6"},{"assignments":[1179],"declarations":[{"constant":false,"id":1179,"mutability":"mutable","name":"amountBOut","nameLocation":"3512:10:6","nodeType":"VariableDeclaration","scope":1213,"src":"3504:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"3504:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1185,"initialValue":{"arguments":[{"id":1181,"name":"amountAIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"3538:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1182,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3549:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1183,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"3559:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1180,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"3525:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3525:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3504:64:6"},{"expression":{"arguments":[{"expression":{"id":1189,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3601:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3605:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3601:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1193,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3621:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3613:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"3613:7:6","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3613:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"amountAIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"3628:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1186,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"3581:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3588:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":876,"src":"3581:19:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1197,"nodeType":"ExpressionStatement","src":"3581:57:6"},{"expression":{"arguments":[{"expression":{"id":1201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3665:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3669:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3665:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"amountBOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"3677:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1198,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"3649:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"3649:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1205,"nodeType":"ExpressionStatement","src":"3649:39:6"},{"eventCall":{"arguments":[{"expression":{"id":1207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3723:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"amountAIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"3731:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1210,"name":"amountBOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"3742:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1206,"name":"TokenSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"3706:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3706:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"EmitStatement","src":"3701:52:6"}]},"documentation":{"id":1135,"nodeType":"StructuredDocumentation","src":"3072:107:6","text":"@notice Intercambia token A por token B\n @param amountAIn Cantidad de token A para intercambiar"},"functionSelector":"e4f1f70a","id":1214,"implemented":true,"kind":"function","modifiers":[],"name":"swapAforB","nameLocation":"3194:9:6","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"amountAIn","nameLocation":"3212:9:6","nodeType":"VariableDeclaration","scope":1214,"src":"3204:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3203:19:6"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[],"src":"3232:0:6"},"scope":1395,"src":"3185:576:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1293,"nodeType":"Block","src":"3929:529:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1221,"name":"amountBIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3948:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3948:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e70757420616d6f756e74206d757374206265203e2030","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3963:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe","typeString":"literal_string \"Input amount must be > 0\""},"value":"Input amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe","typeString":"literal_string \"Input amount must be > 0\""}],"id":1220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3940:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3940:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1226,"nodeType":"ExpressionStatement","src":"3940:50:6"},{"assignments":[1228],"declarations":[{"constant":false,"id":1228,"mutability":"mutable","name":"balanceA","nameLocation":"4011:8:6","nodeType":"VariableDeclaration","scope":1293,"src":"4003:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"4003:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1236,"initialValue":{"arguments":[{"arguments":[{"id":1233,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4047:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4039:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"4039:7:6","typeDescriptions":{}}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4039:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1229,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"4022:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4029:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"4022:16:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4003:50:6"},{"assignments":[1238],"declarations":[{"constant":false,"id":1238,"mutability":"mutable","name":"balanceB","nameLocation":"4072:8:6","nodeType":"VariableDeclaration","scope":1293,"src":"4064:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"4064:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1246,"initialValue":{"arguments":[{"arguments":[{"id":1243,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4108:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4100:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"4100:7:6","typeDescriptions":{}}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1239,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4083:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4090:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"4083:16:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4064:50:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1248,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"4133:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4144:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4133:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1251,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"4149:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4160:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4149:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4133:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c6971756964697479","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4163:24:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""},"value":"Insufficient liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""}],"id":1247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4125:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"4125:63:6"},{"assignments":[1259],"declarations":[{"constant":false,"id":1259,"mutability":"mutable","name":"amountAOut","nameLocation":"4209:10:6","nodeType":"VariableDeclaration","scope":1293,"src":"4201:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4201:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1265,"initialValue":{"arguments":[{"id":1261,"name":"amountBIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"4235:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1262,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"4246:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1263,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"4256:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1260,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"4222:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4222:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4201:64:6"},{"expression":{"arguments":[{"expression":{"id":1269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4298:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4302:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4298:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1273,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4318:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4310:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:6","typeDescriptions":{}}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4310:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1275,"name":"amountBIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"4325:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1266,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4278:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4285:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":876,"src":"4278:19:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1277,"nodeType":"ExpressionStatement","src":"4278:57:6"},{"expression":{"arguments":[{"expression":{"id":1281,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4362:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4366:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4362:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1283,"name":"amountAOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4374:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1278,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"4346:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4353:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":844,"src":"4346:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4346:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"nodeType":"ExpressionStatement","src":"4346:39:6"},{"eventCall":{"arguments":[{"expression":{"id":1287,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4416:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4420:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4416:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1289,"name":"amountBIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"4428:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1290,"name":"amountAOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4439:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1286,"name":"TokenSwapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4403:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4403:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1292,"nodeType":"EmitStatement","src":"4398:52:6"}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"3769:107:6","text":"@notice Intercambia token B por token A\n @param amountBIn Cantidad de token B para intercambiar"},"functionSelector":"8014a7aa","id":1294,"implemented":true,"kind":"function","modifiers":[],"name":"swapBforA","nameLocation":"3891:9:6","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"amountBIn","nameLocation":"3909:9:6","nodeType":"VariableDeclaration","scope":1294,"src":"3901:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"3901:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3900:19:6"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[],"src":"3929:0:6"},"scope":1395,"src":"3882:576:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1359,"nodeType":"Block","src":"4703:362:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"4722:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1306,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"4740:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}],"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4732:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:6","typeDescriptions":{}}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4722:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"4751:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1312,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4769:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}],"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4761:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"4761:7:6","typeDescriptions":{}}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4751:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4722:54:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2061646472657373","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4778:23:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""},"value":"Invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""}],"id":1302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4714:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4714:88:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"4714:88:6"},{"assignments":[1320],"declarations":[{"constant":false,"id":1320,"mutability":"mutable","name":"balanceA","nameLocation":"4823:8:6","nodeType":"VariableDeclaration","scope":1359,"src":"4815:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1328,"initialValue":{"arguments":[{"arguments":[{"id":1325,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4859:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4851:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:6","typeDescriptions":{}}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4851:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1321,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"4834:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4841:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"4834:16:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4815:50:6"},{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"balanceB","nameLocation":"4884:8:6","nodeType":"VariableDeclaration","scope":1359,"src":"4876:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1338,"initialValue":{"arguments":[{"arguments":[{"id":1335,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4920:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleDEX_$1395","typeString":"contract SimpleDEX"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4912:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4912:7:6","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4912:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1331,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4895:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4902:9:6","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":834,"src":"4895:16:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4895:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4876:50:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"4944:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1342,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"4962:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$877","typeString":"contract IERC20"}],"id":1341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4954:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:6","typeDescriptions":{}}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4954:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4944:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"5030:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5041:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"5030:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5029:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1355,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"5049:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5029:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4944:113:6","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1345,"name":"balanceB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"4986:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4997:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"4986:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4985:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1349,"name":"balanceA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"5005:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4985:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1301,"id":1358,"nodeType":"Return","src":"4937:120:6"}]},"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"4466:165:6","text":"@notice Calcula el precio relativo de un token\n @param _token Dirección del token a evaluar\n @return Precio relativo en términos del otro token"},"functionSelector":"41976e09","id":1360,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"4646:8:6","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"_token","nameLocation":"4663:6:6","nodeType":"VariableDeclaration","scope":1360,"src":"4655:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"4655:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4654:16:6"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1360,"src":"4694:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4694:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4693:9:6"},"scope":1395,"src":"4637:428:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1393,"nodeType":"Block","src":"5499:150:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1373,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5518:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5530:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5518:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1376,"name":"reserveOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5535:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5548:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5535:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5518:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207265736572766573","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5551:23:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674","typeString":"literal_string \"Insufficient reserves\""},"value":"Insufficient reserves"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674","typeString":"literal_string \"Insufficient reserves\""}],"id":1372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5510:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5510:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1382,"nodeType":"ExpressionStatement","src":"5510:65:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"5594:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1384,"name":"reserveOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5605:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5594:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5593:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5620:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1388,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"5632:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5620:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5619:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5593:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1371,"id":1392,"nodeType":"Return","src":"5586:55:6"}]},"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"5073:310:6","text":"@notice Calcula la cantidad de tokens de salida basándose en la fórmula de producto constante\n @param amountIn Cantidad de tokens de entrada\n @param reserveIn Reserva del token de entrada\n @param reserveOut Reserva del token de salida\n @return Cantidad de tokens de salida"},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"5398:12:6","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"amountIn","nameLocation":"5419:8:6","nodeType":"VariableDeclaration","scope":1394,"src":"5411:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"5411:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"reserveIn","nameLocation":"5437:9:6","nodeType":"VariableDeclaration","scope":1394,"src":"5429:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"5429:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"reserveOut","nameLocation":"5456:10:6","nodeType":"VariableDeclaration","scope":1394,"src":"5448:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5410:57:6"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1394,"src":"5490:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5490:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5489:9:6"},"scope":1395,"src":"5389:260:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1396,"src":"396:5256:6","usedErrors":[13,18],"usedEvents":[24,955,962,971]}],"src":"33:5621:6"},"id":6},"contracts/TokenA.sol":{"ast":{"absolutePath":"contracts/TokenA.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"TokenA":[1417]},"id":1418,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1397,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"83:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1398,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1418,"sourceUnit":800,"src":"111:55:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1399,"name":"ERC20","nameLocations":["189:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"189:5:7"},"id":1400,"nodeType":"InheritanceSpecifier","src":"189:5:7"}],"canonicalName":"TokenA","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1417,"linearizedBaseContracts":[1417,799,189,903,877,933],"name":"TokenA","nameLocation":"179:6:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1415,"nodeType":"Block","src":"260:51:7","statements":[{"expression":{"arguments":[{"expression":{"id":1410,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"277:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"281:6:7","memberName":"sender","nodeType":"MemberAccess","src":"277:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1412,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"289:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1409,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"271:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"271:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1414,"nodeType":"ExpressionStatement","src":"271:32:7"}]},"id":1416,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"546f6b656e41","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"243:8:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_18c40d09d3be00e8c0eafe4f0ffbd938b1824b54b7ac8efe521dcc1be43de891","typeString":"literal_string \"TokenA\""},"value":"TokenA"},{"hexValue":"544b41","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"253:5:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2487c49f05a4d0607f1ae07d97f7fbcb949677c47340370a6a8901d76e6d7481","typeString":"literal_string \"TKA\""},"value":"TKA"}],"id":1407,"kind":"baseConstructorSpecifier","modifierName":{"id":1404,"name":"ERC20","nameLocations":["237:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"237:5:7"},"nodeType":"ModifierInvocation","src":"237:22:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"initialSupply","nameLocation":"222:13:7","nodeType":"VariableDeclaration","scope":1416,"src":"214:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"214:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"213:23:7"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[],"src":"260:0:7"},"scope":1417,"src":"202:109:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1418,"src":"170:144:7","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"83:231:7"},"id":7},"contracts/TokenB.sol":{"ast":{"absolutePath":"contracts/TokenB.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"TokenB":[1439]},"id":1440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1419,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"83:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1440,"sourceUnit":800,"src":"111:55:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1421,"name":"ERC20","nameLocations":["189:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"189:5:8"},"id":1422,"nodeType":"InheritanceSpecifier","src":"189:5:8"}],"canonicalName":"TokenB","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1439,"linearizedBaseContracts":[1439,799,189,903,877,933],"name":"TokenB","nameLocation":"179:6:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1437,"nodeType":"Block","src":"260:51:8","statements":[{"expression":{"arguments":[{"expression":{"id":1432,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"277:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"281:6:8","memberName":"sender","nodeType":"MemberAccess","src":"277:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1434,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"289:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1431,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"271:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"271:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1436,"nodeType":"ExpressionStatement","src":"271:32:8"}]},"id":1438,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"546f6b656e42","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"243:8:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2","typeString":"literal_string \"TokenB\""},"value":"TokenB"},{"hexValue":"544b42","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"253:5:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab61f3e2f61f385e65f7207e097e9653b89415bafbaff742c9593231971161ca","typeString":"literal_string \"TKB\""},"value":"TKB"}],"id":1429,"kind":"baseConstructorSpecifier","modifierName":{"id":1426,"name":"ERC20","nameLocations":["237:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"237:5:8"},"nodeType":"ModifierInvocation","src":"237:22:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"initialSupply","nameLocation":"222:13:8","nodeType":"VariableDeclaration","scope":1438,"src":"214:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"214:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"213:23:8"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[],"src":"260:0:8"},"scope":1439,"src":"202:109:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1440,"src":"170:144:8","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"83:231:8"},"id":8}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":307,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":313,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":315,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":317,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":319,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC-20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SimpleDEX.sol":{"SimpleDEX":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenA","type":"address"},{"internalType":"address","name":"_tokenB","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"}],"name":"LiquidityAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountA","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountB","type":"uint256"}],"name":"LiquidityRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"TokenSwapped","type":"event"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountAIn","type":"uint256"}],"name":"swapAforB","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountBIn","type":"uint256"}],"name":"swapBforA","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenA","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenB","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"[Gabriel Iakantas]","details":"Implementa la fórmula de producto constante para intercambios","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"LiquidityAdded(uint256,uint256)":{"params":{"amountA":"Cantidad de token A agregada","amountB":"Cantidad de token B agregada"}},"LiquidityRemoved(uint256,uint256)":{"params":{"amountA":"Cantidad de token A removida","amountB":"Cantidad de token B removida"}},"TokenSwapped(address,uint256,uint256)":{"params":{"amountIn":"Cantidad del token de entrada","amountOut":"Cantidad del token de salida","user":"Dirección del usuario que realizó el intercambio"}}},"kind":"dev","methods":{"addLiquidity(uint256,uint256)":{"details":"Solo puede ser llamado por el propietario","params":{"amountA":"Cantidad de token A a agregar","amountB":"Cantidad de token B a agregar"}},"constructor":{"params":{"_tokenA":"Dirección del token A","_tokenB":"Dirección del token B"}},"getPrice(address)":{"params":{"_token":"Dirección del token a evaluar"},"returns":{"_0":"Precio relativo en términos del otro token"}},"owner()":{"details":"Returns the address of the current owner."},"removeLiquidity(uint256,uint256)":{"details":"Solo puede ser llamado por el propietario","params":{"amountA":"Cantidad de token A a remover","amountB":"Cantidad de token B a remover"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"swapAforB(uint256)":{"params":{"amountAIn":"Cantidad de token A para intercambiar"}},"swapBforA(uint256)":{"params":{"amountBIn":"Cantidad de token B para intercambiar"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"Simple Decentralized Exchange (DEX)","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1020":{"entryPoint":null,"id":1020,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":615,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":894,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":917,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":988,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd_to_t_string_memory_ptr_fromStack":{"entryPoint":1092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023_to_t_string_memory_ptr_fromStack":{"entryPoint":1206,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1245,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1034,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":848,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":816,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":811,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd":{"entryPoint":1051,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023":{"entryPoint":1165,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":868,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3837:9","nodeType":"YulBlock","src":"0:3837:9","statements":[{"body":{"nativeSrc":"47:35:9","nodeType":"YulBlock","src":"47:35:9","statements":[{"nativeSrc":"57:19:9","nodeType":"YulAssignment","src":"57:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:9","nodeType":"YulLiteral","src":"73:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:9","nodeType":"YulIdentifier","src":"67:5:9"},"nativeSrc":"67:9:9","nodeType":"YulFunctionCall","src":"67:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:9","nodeType":"YulIdentifier","src":"57:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:9","nodeType":"YulTypedName","src":"40:6:9","type":""}],"src":"7:75:9"},{"body":{"nativeSrc":"177:28:9","nodeType":"YulBlock","src":"177:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:9","nodeType":"YulLiteral","src":"194:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:9","nodeType":"YulLiteral","src":"197:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:9","nodeType":"YulIdentifier","src":"187:6:9"},"nativeSrc":"187:12:9","nodeType":"YulFunctionCall","src":"187:12:9"},"nativeSrc":"187:12:9","nodeType":"YulExpressionStatement","src":"187:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:9","nodeType":"YulFunctionDefinition","src":"88:117:9"},{"body":{"nativeSrc":"300:28:9","nodeType":"YulBlock","src":"300:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:9","nodeType":"YulLiteral","src":"317:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:9","nodeType":"YulLiteral","src":"320:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:9","nodeType":"YulIdentifier","src":"310:6:9"},"nativeSrc":"310:12:9","nodeType":"YulFunctionCall","src":"310:12:9"},"nativeSrc":"310:12:9","nodeType":"YulExpressionStatement","src":"310:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:9","nodeType":"YulFunctionDefinition","src":"211:117:9"},{"body":{"nativeSrc":"379:81:9","nodeType":"YulBlock","src":"379:81:9","statements":[{"nativeSrc":"389:65:9","nodeType":"YulAssignment","src":"389:65:9","value":{"arguments":[{"name":"value","nativeSrc":"404:5:9","nodeType":"YulIdentifier","src":"404:5:9"},{"kind":"number","nativeSrc":"411:42:9","nodeType":"YulLiteral","src":"411:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:9","nodeType":"YulIdentifier","src":"400:3:9"},"nativeSrc":"400:54:9","nodeType":"YulFunctionCall","src":"400:54:9"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:9","nodeType":"YulIdentifier","src":"389:7:9"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:9","nodeType":"YulTypedName","src":"361:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:9","nodeType":"YulTypedName","src":"371:7:9","type":""}],"src":"334:126:9"},{"body":{"nativeSrc":"511:51:9","nodeType":"YulBlock","src":"511:51:9","statements":[{"nativeSrc":"521:35:9","nodeType":"YulAssignment","src":"521:35:9","value":{"arguments":[{"name":"value","nativeSrc":"550:5:9","nodeType":"YulIdentifier","src":"550:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:9","nodeType":"YulIdentifier","src":"532:17:9"},"nativeSrc":"532:24:9","nodeType":"YulFunctionCall","src":"532:24:9"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:9","nodeType":"YulIdentifier","src":"521:7:9"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:9","nodeType":"YulTypedName","src":"493:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:9","nodeType":"YulTypedName","src":"503:7:9","type":""}],"src":"466:96:9"},{"body":{"nativeSrc":"611:79:9","nodeType":"YulBlock","src":"611:79:9","statements":[{"body":{"nativeSrc":"668:16:9","nodeType":"YulBlock","src":"668:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:9","nodeType":"YulLiteral","src":"677:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:9","nodeType":"YulLiteral","src":"680:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:9","nodeType":"YulIdentifier","src":"670:6:9"},"nativeSrc":"670:12:9","nodeType":"YulFunctionCall","src":"670:12:9"},"nativeSrc":"670:12:9","nodeType":"YulExpressionStatement","src":"670:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:9","nodeType":"YulIdentifier","src":"634:5:9"},{"arguments":[{"name":"value","nativeSrc":"659:5:9","nodeType":"YulIdentifier","src":"659:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:9","nodeType":"YulIdentifier","src":"641:17:9"},"nativeSrc":"641:24:9","nodeType":"YulFunctionCall","src":"641:24:9"}],"functionName":{"name":"eq","nativeSrc":"631:2:9","nodeType":"YulIdentifier","src":"631:2:9"},"nativeSrc":"631:35:9","nodeType":"YulFunctionCall","src":"631:35:9"}],"functionName":{"name":"iszero","nativeSrc":"624:6:9","nodeType":"YulIdentifier","src":"624:6:9"},"nativeSrc":"624:43:9","nodeType":"YulFunctionCall","src":"624:43:9"},"nativeSrc":"621:63:9","nodeType":"YulIf","src":"621:63:9"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:9","nodeType":"YulTypedName","src":"604:5:9","type":""}],"src":"568:122:9"},{"body":{"nativeSrc":"759:80:9","nodeType":"YulBlock","src":"759:80:9","statements":[{"nativeSrc":"769:22:9","nodeType":"YulAssignment","src":"769:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:9","nodeType":"YulIdentifier","src":"784:6:9"}],"functionName":{"name":"mload","nativeSrc":"778:5:9","nodeType":"YulIdentifier","src":"778:5:9"},"nativeSrc":"778:13:9","nodeType":"YulFunctionCall","src":"778:13:9"},"variableNames":[{"name":"value","nativeSrc":"769:5:9","nodeType":"YulIdentifier","src":"769:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:9","nodeType":"YulIdentifier","src":"827:5:9"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:9","nodeType":"YulIdentifier","src":"800:26:9"},"nativeSrc":"800:33:9","nodeType":"YulFunctionCall","src":"800:33:9"},"nativeSrc":"800:33:9","nodeType":"YulExpressionStatement","src":"800:33:9"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:9","nodeType":"YulTypedName","src":"737:6:9","type":""},{"name":"end","nativeSrc":"745:3:9","nodeType":"YulTypedName","src":"745:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:9","nodeType":"YulTypedName","src":"753:5:9","type":""}],"src":"696:143:9"},{"body":{"nativeSrc":"939:413:9","nodeType":"YulBlock","src":"939:413:9","statements":[{"body":{"nativeSrc":"985:83:9","nodeType":"YulBlock","src":"985:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:9","nodeType":"YulIdentifier","src":"987:77:9"},"nativeSrc":"987:79:9","nodeType":"YulFunctionCall","src":"987:79:9"},"nativeSrc":"987:79:9","nodeType":"YulExpressionStatement","src":"987:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:9","nodeType":"YulIdentifier","src":"960:7:9"},{"name":"headStart","nativeSrc":"969:9:9","nodeType":"YulIdentifier","src":"969:9:9"}],"functionName":{"name":"sub","nativeSrc":"956:3:9","nodeType":"YulIdentifier","src":"956:3:9"},"nativeSrc":"956:23:9","nodeType":"YulFunctionCall","src":"956:23:9"},{"kind":"number","nativeSrc":"981:2:9","nodeType":"YulLiteral","src":"981:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:9","nodeType":"YulIdentifier","src":"952:3:9"},"nativeSrc":"952:32:9","nodeType":"YulFunctionCall","src":"952:32:9"},"nativeSrc":"949:119:9","nodeType":"YulIf","src":"949:119:9"},{"nativeSrc":"1078:128:9","nodeType":"YulBlock","src":"1078:128:9","statements":[{"nativeSrc":"1093:15:9","nodeType":"YulVariableDeclaration","src":"1093:15:9","value":{"kind":"number","nativeSrc":"1107:1:9","nodeType":"YulLiteral","src":"1107:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:9","nodeType":"YulTypedName","src":"1097:6:9","type":""}]},{"nativeSrc":"1122:74:9","nodeType":"YulAssignment","src":"1122:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:9","nodeType":"YulIdentifier","src":"1168:9:9"},{"name":"offset","nativeSrc":"1179:6:9","nodeType":"YulIdentifier","src":"1179:6:9"}],"functionName":{"name":"add","nativeSrc":"1164:3:9","nodeType":"YulIdentifier","src":"1164:3:9"},"nativeSrc":"1164:22:9","nodeType":"YulFunctionCall","src":"1164:22:9"},{"name":"dataEnd","nativeSrc":"1188:7:9","nodeType":"YulIdentifier","src":"1188:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:9","nodeType":"YulIdentifier","src":"1132:31:9"},"nativeSrc":"1132:64:9","nodeType":"YulFunctionCall","src":"1132:64:9"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:9","nodeType":"YulIdentifier","src":"1122:6:9"}]}]},{"nativeSrc":"1216:129:9","nodeType":"YulBlock","src":"1216:129:9","statements":[{"nativeSrc":"1231:16:9","nodeType":"YulVariableDeclaration","src":"1231:16:9","value":{"kind":"number","nativeSrc":"1245:2:9","nodeType":"YulLiteral","src":"1245:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:9","nodeType":"YulTypedName","src":"1235:6:9","type":""}]},{"nativeSrc":"1261:74:9","nodeType":"YulAssignment","src":"1261:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:9","nodeType":"YulIdentifier","src":"1307:9:9"},{"name":"offset","nativeSrc":"1318:6:9","nodeType":"YulIdentifier","src":"1318:6:9"}],"functionName":{"name":"add","nativeSrc":"1303:3:9","nodeType":"YulIdentifier","src":"1303:3:9"},"nativeSrc":"1303:22:9","nodeType":"YulFunctionCall","src":"1303:22:9"},{"name":"dataEnd","nativeSrc":"1327:7:9","nodeType":"YulIdentifier","src":"1327:7:9"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:9","nodeType":"YulIdentifier","src":"1271:31:9"},"nativeSrc":"1271:64:9","nodeType":"YulFunctionCall","src":"1271:64:9"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:9","nodeType":"YulIdentifier","src":"1261:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:9","nodeType":"YulTypedName","src":"901:9:9","type":""},{"name":"dataEnd","nativeSrc":"912:7:9","nodeType":"YulTypedName","src":"912:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:9","nodeType":"YulTypedName","src":"924:6:9","type":""},{"name":"value1","nativeSrc":"932:6:9","nodeType":"YulTypedName","src":"932:6:9","type":""}],"src":"845:507:9"},{"body":{"nativeSrc":"1423:53:9","nodeType":"YulBlock","src":"1423:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1440:3:9","nodeType":"YulIdentifier","src":"1440:3:9"},{"arguments":[{"name":"value","nativeSrc":"1463:5:9","nodeType":"YulIdentifier","src":"1463:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1445:17:9","nodeType":"YulIdentifier","src":"1445:17:9"},"nativeSrc":"1445:24:9","nodeType":"YulFunctionCall","src":"1445:24:9"}],"functionName":{"name":"mstore","nativeSrc":"1433:6:9","nodeType":"YulIdentifier","src":"1433:6:9"},"nativeSrc":"1433:37:9","nodeType":"YulFunctionCall","src":"1433:37:9"},"nativeSrc":"1433:37:9","nodeType":"YulExpressionStatement","src":"1433:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1358:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1411:5:9","nodeType":"YulTypedName","src":"1411:5:9","type":""},{"name":"pos","nativeSrc":"1418:3:9","nodeType":"YulTypedName","src":"1418:3:9","type":""}],"src":"1358:118:9"},{"body":{"nativeSrc":"1580:124:9","nodeType":"YulBlock","src":"1580:124:9","statements":[{"nativeSrc":"1590:26:9","nodeType":"YulAssignment","src":"1590:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"1602:9:9","nodeType":"YulIdentifier","src":"1602:9:9"},{"kind":"number","nativeSrc":"1613:2:9","nodeType":"YulLiteral","src":"1613:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1598:3:9","nodeType":"YulIdentifier","src":"1598:3:9"},"nativeSrc":"1598:18:9","nodeType":"YulFunctionCall","src":"1598:18:9"},"variableNames":[{"name":"tail","nativeSrc":"1590:4:9","nodeType":"YulIdentifier","src":"1590:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1670:6:9","nodeType":"YulIdentifier","src":"1670:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"1683:9:9","nodeType":"YulIdentifier","src":"1683:9:9"},{"kind":"number","nativeSrc":"1694:1:9","nodeType":"YulLiteral","src":"1694:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1679:3:9","nodeType":"YulIdentifier","src":"1679:3:9"},"nativeSrc":"1679:17:9","nodeType":"YulFunctionCall","src":"1679:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1626:43:9","nodeType":"YulIdentifier","src":"1626:43:9"},"nativeSrc":"1626:71:9","nodeType":"YulFunctionCall","src":"1626:71:9"},"nativeSrc":"1626:71:9","nodeType":"YulExpressionStatement","src":"1626:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1482:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1552:9:9","nodeType":"YulTypedName","src":"1552:9:9","type":""},{"name":"value0","nativeSrc":"1564:6:9","nodeType":"YulTypedName","src":"1564:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1575:4:9","nodeType":"YulTypedName","src":"1575:4:9","type":""}],"src":"1482:222:9"},{"body":{"nativeSrc":"1806:73:9","nodeType":"YulBlock","src":"1806:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1823:3:9","nodeType":"YulIdentifier","src":"1823:3:9"},{"name":"length","nativeSrc":"1828:6:9","nodeType":"YulIdentifier","src":"1828:6:9"}],"functionName":{"name":"mstore","nativeSrc":"1816:6:9","nodeType":"YulIdentifier","src":"1816:6:9"},"nativeSrc":"1816:19:9","nodeType":"YulFunctionCall","src":"1816:19:9"},"nativeSrc":"1816:19:9","nodeType":"YulExpressionStatement","src":"1816:19:9"},{"nativeSrc":"1844:29:9","nodeType":"YulAssignment","src":"1844:29:9","value":{"arguments":[{"name":"pos","nativeSrc":"1863:3:9","nodeType":"YulIdentifier","src":"1863:3:9"},{"kind":"number","nativeSrc":"1868:4:9","nodeType":"YulLiteral","src":"1868:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1859:3:9","nodeType":"YulIdentifier","src":"1859:3:9"},"nativeSrc":"1859:14:9","nodeType":"YulFunctionCall","src":"1859:14:9"},"variableNames":[{"name":"updated_pos","nativeSrc":"1844:11:9","nodeType":"YulIdentifier","src":"1844:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1710:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1778:3:9","nodeType":"YulTypedName","src":"1778:3:9","type":""},{"name":"length","nativeSrc":"1783:6:9","nodeType":"YulTypedName","src":"1783:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1794:11:9","nodeType":"YulTypedName","src":"1794:11:9","type":""}],"src":"1710:169:9"},{"body":{"nativeSrc":"1991:69:9","nodeType":"YulBlock","src":"1991:69:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2013:6:9","nodeType":"YulIdentifier","src":"2013:6:9"},{"kind":"number","nativeSrc":"2021:1:9","nodeType":"YulLiteral","src":"2021:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2009:3:9","nodeType":"YulIdentifier","src":"2009:3:9"},"nativeSrc":"2009:14:9","nodeType":"YulFunctionCall","src":"2009:14:9"},{"hexValue":"546f6b656e20616464726573732063616e6e6f742062652030","kind":"string","nativeSrc":"2025:27:9","nodeType":"YulLiteral","src":"2025:27:9","type":"","value":"Token address cannot be 0"}],"functionName":{"name":"mstore","nativeSrc":"2002:6:9","nodeType":"YulIdentifier","src":"2002:6:9"},"nativeSrc":"2002:51:9","nodeType":"YulFunctionCall","src":"2002:51:9"},"nativeSrc":"2002:51:9","nodeType":"YulExpressionStatement","src":"2002:51:9"}]},"name":"store_literal_in_memory_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd","nativeSrc":"1885:175:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1983:6:9","nodeType":"YulTypedName","src":"1983:6:9","type":""}],"src":"1885:175:9"},{"body":{"nativeSrc":"2212:220:9","nodeType":"YulBlock","src":"2212:220:9","statements":[{"nativeSrc":"2222:74:9","nodeType":"YulAssignment","src":"2222:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"2288:3:9","nodeType":"YulIdentifier","src":"2288:3:9"},{"kind":"number","nativeSrc":"2293:2:9","nodeType":"YulLiteral","src":"2293:2:9","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2229:58:9","nodeType":"YulIdentifier","src":"2229:58:9"},"nativeSrc":"2229:67:9","nodeType":"YulFunctionCall","src":"2229:67:9"},"variableNames":[{"name":"pos","nativeSrc":"2222:3:9","nodeType":"YulIdentifier","src":"2222:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2394:3:9","nodeType":"YulIdentifier","src":"2394:3:9"}],"functionName":{"name":"store_literal_in_memory_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd","nativeSrc":"2305:88:9","nodeType":"YulIdentifier","src":"2305:88:9"},"nativeSrc":"2305:93:9","nodeType":"YulFunctionCall","src":"2305:93:9"},"nativeSrc":"2305:93:9","nodeType":"YulExpressionStatement","src":"2305:93:9"},{"nativeSrc":"2407:19:9","nodeType":"YulAssignment","src":"2407:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"2418:3:9","nodeType":"YulIdentifier","src":"2418:3:9"},{"kind":"number","nativeSrc":"2423:2:9","nodeType":"YulLiteral","src":"2423:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2414:3:9","nodeType":"YulIdentifier","src":"2414:3:9"},"nativeSrc":"2414:12:9","nodeType":"YulFunctionCall","src":"2414:12:9"},"variableNames":[{"name":"end","nativeSrc":"2407:3:9","nodeType":"YulIdentifier","src":"2407:3:9"}]}]},"name":"abi_encode_t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd_to_t_string_memory_ptr_fromStack","nativeSrc":"2066:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2200:3:9","nodeType":"YulTypedName","src":"2200:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2208:3:9","nodeType":"YulTypedName","src":"2208:3:9","type":""}],"src":"2066:366:9"},{"body":{"nativeSrc":"2609:248:9","nodeType":"YulBlock","src":"2609:248:9","statements":[{"nativeSrc":"2619:26:9","nodeType":"YulAssignment","src":"2619:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"2631:9:9","nodeType":"YulIdentifier","src":"2631:9:9"},{"kind":"number","nativeSrc":"2642:2:9","nodeType":"YulLiteral","src":"2642:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2627:3:9","nodeType":"YulIdentifier","src":"2627:3:9"},"nativeSrc":"2627:18:9","nodeType":"YulFunctionCall","src":"2627:18:9"},"variableNames":[{"name":"tail","nativeSrc":"2619:4:9","nodeType":"YulIdentifier","src":"2619:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2666:9:9","nodeType":"YulIdentifier","src":"2666:9:9"},{"kind":"number","nativeSrc":"2677:1:9","nodeType":"YulLiteral","src":"2677:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2662:3:9","nodeType":"YulIdentifier","src":"2662:3:9"},"nativeSrc":"2662:17:9","nodeType":"YulFunctionCall","src":"2662:17:9"},{"arguments":[{"name":"tail","nativeSrc":"2685:4:9","nodeType":"YulIdentifier","src":"2685:4:9"},{"name":"headStart","nativeSrc":"2691:9:9","nodeType":"YulIdentifier","src":"2691:9:9"}],"functionName":{"name":"sub","nativeSrc":"2681:3:9","nodeType":"YulIdentifier","src":"2681:3:9"},"nativeSrc":"2681:20:9","nodeType":"YulFunctionCall","src":"2681:20:9"}],"functionName":{"name":"mstore","nativeSrc":"2655:6:9","nodeType":"YulIdentifier","src":"2655:6:9"},"nativeSrc":"2655:47:9","nodeType":"YulFunctionCall","src":"2655:47:9"},"nativeSrc":"2655:47:9","nodeType":"YulExpressionStatement","src":"2655:47:9"},{"nativeSrc":"2711:139:9","nodeType":"YulAssignment","src":"2711:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"2845:4:9","nodeType":"YulIdentifier","src":"2845:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd_to_t_string_memory_ptr_fromStack","nativeSrc":"2719:124:9","nodeType":"YulIdentifier","src":"2719:124:9"},"nativeSrc":"2719:131:9","nodeType":"YulFunctionCall","src":"2719:131:9"},"variableNames":[{"name":"tail","nativeSrc":"2711:4:9","nodeType":"YulIdentifier","src":"2711:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2438:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2589:9:9","nodeType":"YulTypedName","src":"2589:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2604:4:9","nodeType":"YulTypedName","src":"2604:4:9","type":""}],"src":"2438:419:9"},{"body":{"nativeSrc":"2969:68:9","nodeType":"YulBlock","src":"2969:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2991:6:9","nodeType":"YulIdentifier","src":"2991:6:9"},{"kind":"number","nativeSrc":"2999:1:9","nodeType":"YulLiteral","src":"2999:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2987:3:9","nodeType":"YulIdentifier","src":"2987:3:9"},"nativeSrc":"2987:14:9","nodeType":"YulFunctionCall","src":"2987:14:9"},{"hexValue":"546f6b656e73206d75737420626520646966666572656e74","kind":"string","nativeSrc":"3003:26:9","nodeType":"YulLiteral","src":"3003:26:9","type":"","value":"Tokens must be different"}],"functionName":{"name":"mstore","nativeSrc":"2980:6:9","nodeType":"YulIdentifier","src":"2980:6:9"},"nativeSrc":"2980:50:9","nodeType":"YulFunctionCall","src":"2980:50:9"},"nativeSrc":"2980:50:9","nodeType":"YulExpressionStatement","src":"2980:50:9"}]},"name":"store_literal_in_memory_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023","nativeSrc":"2863:174:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2961:6:9","nodeType":"YulTypedName","src":"2961:6:9","type":""}],"src":"2863:174:9"},{"body":{"nativeSrc":"3189:220:9","nodeType":"YulBlock","src":"3189:220:9","statements":[{"nativeSrc":"3199:74:9","nodeType":"YulAssignment","src":"3199:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"3265:3:9","nodeType":"YulIdentifier","src":"3265:3:9"},{"kind":"number","nativeSrc":"3270:2:9","nodeType":"YulLiteral","src":"3270:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3206:58:9","nodeType":"YulIdentifier","src":"3206:58:9"},"nativeSrc":"3206:67:9","nodeType":"YulFunctionCall","src":"3206:67:9"},"variableNames":[{"name":"pos","nativeSrc":"3199:3:9","nodeType":"YulIdentifier","src":"3199:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3371:3:9","nodeType":"YulIdentifier","src":"3371:3:9"}],"functionName":{"name":"store_literal_in_memory_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023","nativeSrc":"3282:88:9","nodeType":"YulIdentifier","src":"3282:88:9"},"nativeSrc":"3282:93:9","nodeType":"YulFunctionCall","src":"3282:93:9"},"nativeSrc":"3282:93:9","nodeType":"YulExpressionStatement","src":"3282:93:9"},{"nativeSrc":"3384:19:9","nodeType":"YulAssignment","src":"3384:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"3395:3:9","nodeType":"YulIdentifier","src":"3395:3:9"},{"kind":"number","nativeSrc":"3400:2:9","nodeType":"YulLiteral","src":"3400:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3391:3:9","nodeType":"YulIdentifier","src":"3391:3:9"},"nativeSrc":"3391:12:9","nodeType":"YulFunctionCall","src":"3391:12:9"},"variableNames":[{"name":"end","nativeSrc":"3384:3:9","nodeType":"YulIdentifier","src":"3384:3:9"}]}]},"name":"abi_encode_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023_to_t_string_memory_ptr_fromStack","nativeSrc":"3043:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3177:3:9","nodeType":"YulTypedName","src":"3177:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3185:3:9","nodeType":"YulTypedName","src":"3185:3:9","type":""}],"src":"3043:366:9"},{"body":{"nativeSrc":"3586:248:9","nodeType":"YulBlock","src":"3586:248:9","statements":[{"nativeSrc":"3596:26:9","nodeType":"YulAssignment","src":"3596:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"3608:9:9","nodeType":"YulIdentifier","src":"3608:9:9"},{"kind":"number","nativeSrc":"3619:2:9","nodeType":"YulLiteral","src":"3619:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3604:3:9","nodeType":"YulIdentifier","src":"3604:3:9"},"nativeSrc":"3604:18:9","nodeType":"YulFunctionCall","src":"3604:18:9"},"variableNames":[{"name":"tail","nativeSrc":"3596:4:9","nodeType":"YulIdentifier","src":"3596:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3643:9:9","nodeType":"YulIdentifier","src":"3643:9:9"},{"kind":"number","nativeSrc":"3654:1:9","nodeType":"YulLiteral","src":"3654:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3639:3:9","nodeType":"YulIdentifier","src":"3639:3:9"},"nativeSrc":"3639:17:9","nodeType":"YulFunctionCall","src":"3639:17:9"},{"arguments":[{"name":"tail","nativeSrc":"3662:4:9","nodeType":"YulIdentifier","src":"3662:4:9"},{"name":"headStart","nativeSrc":"3668:9:9","nodeType":"YulIdentifier","src":"3668:9:9"}],"functionName":{"name":"sub","nativeSrc":"3658:3:9","nodeType":"YulIdentifier","src":"3658:3:9"},"nativeSrc":"3658:20:9","nodeType":"YulFunctionCall","src":"3658:20:9"}],"functionName":{"name":"mstore","nativeSrc":"3632:6:9","nodeType":"YulIdentifier","src":"3632:6:9"},"nativeSrc":"3632:47:9","nodeType":"YulFunctionCall","src":"3632:47:9"},"nativeSrc":"3632:47:9","nodeType":"YulExpressionStatement","src":"3632:47:9"},{"nativeSrc":"3688:139:9","nodeType":"YulAssignment","src":"3688:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"3822:4:9","nodeType":"YulIdentifier","src":"3822:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023_to_t_string_memory_ptr_fromStack","nativeSrc":"3696:124:9","nodeType":"YulIdentifier","src":"3696:124:9"},"nativeSrc":"3696:131:9","nodeType":"YulFunctionCall","src":"3696:131:9"},"variableNames":[{"name":"tail","nativeSrc":"3688:4:9","nodeType":"YulIdentifier","src":"3688:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3415:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3566:9:9","nodeType":"YulTypedName","src":"3566:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3581:4:9","nodeType":"YulTypedName","src":"3581:4:9","type":""}],"src":"3415:419:9"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3cc28e7bc878018863689d3d8298094e0c228c1dc89473c92c0bfec449b797cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens must be different\")\n\n    }\n\n    function abi_encode_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F68 CODESIZE SUB DUP1 PUSH3 0x1F68 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x395 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x267 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x12A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH3 0x16C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x163 SWAP1 PUSH3 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1D4 SWAP1 PUSH3 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x4FF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x35D DUP3 PUSH3 0x330 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x36F DUP2 PUSH3 0x350 JUMP JUMPDEST DUP2 EQ PUSH3 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x38F DUP2 PUSH3 0x364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3AF JUMPI PUSH3 0x3AE PUSH3 0x32B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3BF DUP6 DUP3 DUP7 ADD PUSH3 0x37E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x3D2 DUP6 DUP3 DUP7 ADD PUSH3 0x37E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E7 DUP2 PUSH3 0x350 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x404 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x3DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265203000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x453 PUSH1 0x19 DUP4 PUSH3 0x40A JUMP JUMPDEST SWAP2 POP PUSH3 0x460 DUP3 PUSH3 0x41B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x486 DUP2 PUSH3 0x444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73206D75737420626520646966666572656E740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4C5 PUSH1 0x18 DUP4 PUSH3 0x40A JUMP JUMPDEST SWAP2 POP PUSH3 0x4D2 DUP3 PUSH3 0x48D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4F8 DUP2 PUSH3 0x4B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A59 DUP1 PUSH3 0x50F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x9D7DE6B3 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xE4F1F70A EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x8014A7AA EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH2 0xA6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x1100 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x294 JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CA SWAP1 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x48C JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x4ED PUSH1 0x0 PUSH2 0x120D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x682 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6CE DUP5 DUP4 DUP6 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D0 SWAP3 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD5A1CD88DDD329CC1DDF861A21708EFA9EF3136B88E1420C21F91EF6F95AD024 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x85C SWAP3 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x89B PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x8AB JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA61 SWAP3 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xA75 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP DUP2 DUP5 GT ISZERO DUP1 ISZERO PUSH2 0xBC5 JUMPI POP DUP1 DUP4 GT ISZERO JUMPDEST PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFB SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP3 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP3 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH32 0x6F0F96292AE0038C04F9B6BAB30F185D9CA02C471D0983F563F2A4F674AEF137 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD77 SWAP3 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBF SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE25 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC5 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF06 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xF18 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4E SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF64 DUP5 DUP5 DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1066 SWAP3 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1085 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A9 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD5A1CD88DDD329CC1DDF861A21708EFA9EF3136B88E1420C21F91EF6F95AD024 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10F2 SWAP3 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x1108 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1171 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1183 DUP2 PUSH2 0x120D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x118E PUSH2 0x134C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AC PUSH2 0x86A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x120B JUMPI PUSH2 0x11CF PUSH2 0x134C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1202 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0x12E2 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP1 PUSH2 0x19CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST DUP3 DUP6 PUSH2 0x1339 SWAP2 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x1343 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1399 PUSH2 0x1394 PUSH2 0x138F DUP5 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1354 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AB DUP3 PUSH2 0x137E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BD DUP3 PUSH2 0x13A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CD DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13FE DUP3 PUSH2 0x1354 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140E DUP2 PUSH2 0x13F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142B DUP2 PUSH2 0x1405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1447 JUMPI PUSH2 0x1446 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1455 DUP5 DUP3 DUP6 ADD PUSH2 0x141C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1471 DUP2 PUSH2 0x145E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x148C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x149B DUP2 PUSH2 0x145E JUMP JUMPDEST DUP2 EQ PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B8 DUP2 PUSH2 0x1492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D4 JUMPI PUSH2 0x14D3 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14E2 DUP5 DUP3 DUP6 ADD PUSH2 0x14A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F4 DUP2 PUSH2 0x13F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x150F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x152C JUMPI PUSH2 0x152B PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x153A DUP6 DUP3 DUP7 ADD PUSH2 0x14A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x154B DUP6 DUP3 DUP7 ADD PUSH2 0x14A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159C PUSH1 0x15 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x15A7 DUP3 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15CB DUP2 PUSH2 0x158F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15E1 DUP2 PUSH2 0x1492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FD JUMPI PUSH2 0x15FC PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x160B DUP5 DUP3 DUP6 ADD PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x164E DUP3 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP PUSH2 0x1659 DUP4 PUSH2 0x145E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1667 DUP2 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x167E JUMPI PUSH2 0x167D PUSH2 0x1614 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP PUSH2 0x16CA DUP4 PUSH2 0x145E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1685 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E70757420616D6F756E74206D757374206265203E20300000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171B PUSH1 0x18 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP3 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x174A DUP2 PUSH2 0x170E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1787 PUSH1 0x16 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x1792 DUP3 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17B6 DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17D2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x17DF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x17EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1809 DUP2 PUSH2 0x17F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1826 DUP2 PUSH2 0x1800 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1850 DUP5 DUP3 DUP6 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x186E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x187B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1897 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x18A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E7473206D757374206265203E203000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E1 PUSH1 0x13 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EC DUP3 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1910 DUP2 PUSH2 0x18D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206C697175696469747920617661696C61626C650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194D PUSH1 0x1E DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x1958 DUP3 PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x197C DUP2 PUSH2 0x1940 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657365727665730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B9 PUSH1 0x15 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C4 DUP3 PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19E8 DUP2 PUSH2 0x19AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP3 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A05 DUP4 PUSH2 0x145E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A1D JUMPI PUSH2 0x1A1C PUSH2 0x1614 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PREVRANDAO 0xCB PUSH1 0xDF 0x2A 0xBE 0xF8 DUP15 JUMPI MSTORE8 0x28 0xAE CALL 0xD6 MCOPY DUP8 PUSH27 0xAB0FA739AFB4E106F48DC05479AE64736F6C634300081800330000 ","sourceMap":"396:5256:6:-:0;;;1525:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1579:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1629:1:6::1;1610:21;;:7;:21;;;;:46;;;;;1654:1;1635:21;;:7;:21;;;;1610:46;1602:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1716:7;1705:18;;:7;:18;;::::0;1697:55:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1789:7;1773:6;;:24;;;;;;;;;;;;;;;;;;1824:7;1808:6;;:24;;;;;;;;;;;;;;;;;;1525:315:::0;;396:5256;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:169::-;1794:11;1828:6;1823:3;1816:19;1868:4;1863:3;1859:14;1844:29;;1710:169;;;;:::o;1885:175::-;2025:27;2021:1;2013:6;2009:14;2002:51;1885:175;:::o;2066:366::-;2208:3;2229:67;2293:2;2288:3;2229:67;:::i;:::-;2222:74;;2305:93;2394:3;2305:93;:::i;:::-;2423:2;2418:3;2414:12;2407:19;;2066:366;;;:::o;2438:419::-;2604:4;2642:2;2631:9;2627:18;2619:26;;2691:9;2685:4;2681:20;2677:1;2666:9;2662:17;2655:47;2719:131;2845:4;2719:131;:::i;:::-;2711:139;;2438:419;;;:::o;2863:174::-;3003:26;2999:1;2991:6;2987:14;2980:50;2863:174;:::o;3043:366::-;3185:3;3206:67;3270:2;3265:3;3206:67;:::i;:::-;3199:74;;3282:93;3371:3;3282:93;:::i;:::-;3400:2;3395:3;3391:12;3384:19;;3043:366;;;:::o;3415:419::-;3581:4;3619:2;3608:9;3604:18;3596:26;;3668:9;3662:4;3658:20;3654:1;3643:9;3639:17;3632:47;3696:131;3822:4;3696:131;:::i;:::-;3688:139;;3415:419;;;:::o;396:5256:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":4486,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_915":{"entryPoint":4940,"id":915,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":4621,"id":146,"parameterSlots":1,"returnSlots":0},"@addLiquidity_1071":{"entryPoint":2195,"id":1071,"parameterSlots":2,"returnSlots":0},"@getAmountOut_1394":{"entryPoint":4817,"id":1394,"parameterSlots":3,"returnSlots":1},"@getPrice_1360":{"entryPoint":489,"id":1360,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2154,"id":67,"parameterSlots":0,"returnSlots":1},"@removeLiquidity_1134":{"entryPoint":2669,"id":1134,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1243,"id":98,"parameterSlots":0,"returnSlots":0},"@swapAforB_1214":{"entryPoint":3461,"id":1214,"parameterSlots":1,"returnSlots":0},"@swapBforA_1294":{"entryPoint":1263,"id":1294,"parameterSlots":1,"returnSlots":0},"@tokenA_944":{"entryPoint":451,"id":944,"parameterSlots":0,"returnSlots":0},"@tokenB_948":{"entryPoint":1205,"id":948,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":4352,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5289,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":5397,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5355,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack":{"entryPoint":5060,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack":{"entryPoint":6010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3_to_t_string_memory_ptr_fromStack":{"entryPoint":6464,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe_to_t_string_memory_ptr_fromStack":{"entryPoint":5902,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack":{"entryPoint":6572,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack":{"entryPoint":6356,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack":{"entryPoint":5519,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5224,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":6077,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6233,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed":{"entryPoint":5075,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6045,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6499,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5937,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6607,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6391,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6274,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5461,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6639,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5812,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5699,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5107,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6132,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4948,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5214,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$877_to_t_address":{"entryPoint":5042,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":5024,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4990,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":4980,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5652,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5765,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5102,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad":{"entryPoint":5969,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3":{"entryPoint":6423,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe":{"entryPoint":5861,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674":{"entryPoint":6531,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0":{"entryPoint":6315,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743":{"entryPoint":5478,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5125,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6144,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5266,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:13509:9","nodeType":"YulBlock","src":"0:13509:9","statements":[{"body":{"nativeSrc":"52:81:9","nodeType":"YulBlock","src":"52:81:9","statements":[{"nativeSrc":"62:65:9","nodeType":"YulAssignment","src":"62:65:9","value":{"arguments":[{"name":"value","nativeSrc":"77:5:9","nodeType":"YulIdentifier","src":"77:5:9"},{"kind":"number","nativeSrc":"84:42:9","nodeType":"YulLiteral","src":"84:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:9","nodeType":"YulIdentifier","src":"73:3:9"},"nativeSrc":"73:54:9","nodeType":"YulFunctionCall","src":"73:54:9"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:9","nodeType":"YulIdentifier","src":"62:7:9"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:9","nodeType":"YulTypedName","src":"34:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:9","nodeType":"YulTypedName","src":"44:7:9","type":""}],"src":"7:126:9"},{"body":{"nativeSrc":"171:28:9","nodeType":"YulBlock","src":"171:28:9","statements":[{"nativeSrc":"181:12:9","nodeType":"YulAssignment","src":"181:12:9","value":{"name":"value","nativeSrc":"188:5:9","nodeType":"YulIdentifier","src":"188:5:9"},"variableNames":[{"name":"ret","nativeSrc":"181:3:9","nodeType":"YulIdentifier","src":"181:3:9"}]}]},"name":"identity","nativeSrc":"139:60:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"157:5:9","nodeType":"YulTypedName","src":"157:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"167:3:9","nodeType":"YulTypedName","src":"167:3:9","type":""}],"src":"139:60:9"},{"body":{"nativeSrc":"265:82:9","nodeType":"YulBlock","src":"265:82:9","statements":[{"nativeSrc":"275:66:9","nodeType":"YulAssignment","src":"275:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"333:5:9","nodeType":"YulIdentifier","src":"333:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"315:17:9","nodeType":"YulIdentifier","src":"315:17:9"},"nativeSrc":"315:24:9","nodeType":"YulFunctionCall","src":"315:24:9"}],"functionName":{"name":"identity","nativeSrc":"306:8:9","nodeType":"YulIdentifier","src":"306:8:9"},"nativeSrc":"306:34:9","nodeType":"YulFunctionCall","src":"306:34:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"288:17:9","nodeType":"YulIdentifier","src":"288:17:9"},"nativeSrc":"288:53:9","nodeType":"YulFunctionCall","src":"288:53:9"},"variableNames":[{"name":"converted","nativeSrc":"275:9:9","nodeType":"YulIdentifier","src":"275:9:9"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"205:142:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"245:5:9","nodeType":"YulTypedName","src":"245:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"255:9:9","nodeType":"YulTypedName","src":"255:9:9","type":""}],"src":"205:142:9"},{"body":{"nativeSrc":"413:66:9","nodeType":"YulBlock","src":"413:66:9","statements":[{"nativeSrc":"423:50:9","nodeType":"YulAssignment","src":"423:50:9","value":{"arguments":[{"name":"value","nativeSrc":"467:5:9","nodeType":"YulIdentifier","src":"467:5:9"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"436:30:9","nodeType":"YulIdentifier","src":"436:30:9"},"nativeSrc":"436:37:9","nodeType":"YulFunctionCall","src":"436:37:9"},"variableNames":[{"name":"converted","nativeSrc":"423:9:9","nodeType":"YulIdentifier","src":"423:9:9"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"353:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"393:5:9","nodeType":"YulTypedName","src":"393:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"403:9:9","nodeType":"YulTypedName","src":"403:9:9","type":""}],"src":"353:126:9"},{"body":{"nativeSrc":"559:66:9","nodeType":"YulBlock","src":"559:66:9","statements":[{"nativeSrc":"569:50:9","nodeType":"YulAssignment","src":"569:50:9","value":{"arguments":[{"name":"value","nativeSrc":"613:5:9","nodeType":"YulIdentifier","src":"613:5:9"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"582:30:9","nodeType":"YulIdentifier","src":"582:30:9"},"nativeSrc":"582:37:9","nodeType":"YulFunctionCall","src":"582:37:9"},"variableNames":[{"name":"converted","nativeSrc":"569:9:9","nodeType":"YulIdentifier","src":"569:9:9"}]}]},"name":"convert_t_contract$_IERC20_$877_to_t_address","nativeSrc":"485:140:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"539:5:9","nodeType":"YulTypedName","src":"539:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"549:9:9","nodeType":"YulTypedName","src":"549:9:9","type":""}],"src":"485:140:9"},{"body":{"nativeSrc":"710:80:9","nodeType":"YulBlock","src":"710:80:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"727:3:9","nodeType":"YulIdentifier","src":"727:3:9"},{"arguments":[{"name":"value","nativeSrc":"777:5:9","nodeType":"YulIdentifier","src":"777:5:9"}],"functionName":{"name":"convert_t_contract$_IERC20_$877_to_t_address","nativeSrc":"732:44:9","nodeType":"YulIdentifier","src":"732:44:9"},"nativeSrc":"732:51:9","nodeType":"YulFunctionCall","src":"732:51:9"}],"functionName":{"name":"mstore","nativeSrc":"720:6:9","nodeType":"YulIdentifier","src":"720:6:9"},"nativeSrc":"720:64:9","nodeType":"YulFunctionCall","src":"720:64:9"},"nativeSrc":"720:64:9","nodeType":"YulExpressionStatement","src":"720:64:9"}]},"name":"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack","nativeSrc":"631:159:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"698:5:9","nodeType":"YulTypedName","src":"698:5:9","type":""},{"name":"pos","nativeSrc":"705:3:9","nodeType":"YulTypedName","src":"705:3:9","type":""}],"src":"631:159:9"},{"body":{"nativeSrc":"908:138:9","nodeType":"YulBlock","src":"908:138:9","statements":[{"nativeSrc":"918:26:9","nodeType":"YulAssignment","src":"918:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"930:9:9","nodeType":"YulIdentifier","src":"930:9:9"},{"kind":"number","nativeSrc":"941:2:9","nodeType":"YulLiteral","src":"941:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"926:3:9","nodeType":"YulIdentifier","src":"926:3:9"},"nativeSrc":"926:18:9","nodeType":"YulFunctionCall","src":"926:18:9"},"variableNames":[{"name":"tail","nativeSrc":"918:4:9","nodeType":"YulIdentifier","src":"918:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1012:6:9","nodeType":"YulIdentifier","src":"1012:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"1025:9:9","nodeType":"YulIdentifier","src":"1025:9:9"},{"kind":"number","nativeSrc":"1036:1:9","nodeType":"YulLiteral","src":"1036:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1021:3:9","nodeType":"YulIdentifier","src":"1021:3:9"},"nativeSrc":"1021:17:9","nodeType":"YulFunctionCall","src":"1021:17:9"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack","nativeSrc":"954:57:9","nodeType":"YulIdentifier","src":"954:57:9"},"nativeSrc":"954:85:9","nodeType":"YulFunctionCall","src":"954:85:9"},"nativeSrc":"954:85:9","nodeType":"YulExpressionStatement","src":"954:85:9"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed","nativeSrc":"796:250:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"880:9:9","nodeType":"YulTypedName","src":"880:9:9","type":""},{"name":"value0","nativeSrc":"892:6:9","nodeType":"YulTypedName","src":"892:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"903:4:9","nodeType":"YulTypedName","src":"903:4:9","type":""}],"src":"796:250:9"},{"body":{"nativeSrc":"1092:35:9","nodeType":"YulBlock","src":"1092:35:9","statements":[{"nativeSrc":"1102:19:9","nodeType":"YulAssignment","src":"1102:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"1118:2:9","nodeType":"YulLiteral","src":"1118:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1112:5:9","nodeType":"YulIdentifier","src":"1112:5:9"},"nativeSrc":"1112:9:9","nodeType":"YulFunctionCall","src":"1112:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"1102:6:9","nodeType":"YulIdentifier","src":"1102:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"1052:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1085:6:9","nodeType":"YulTypedName","src":"1085:6:9","type":""}],"src":"1052:75:9"},{"body":{"nativeSrc":"1222:28:9","nodeType":"YulBlock","src":"1222:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1239:1:9","nodeType":"YulLiteral","src":"1239:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1242:1:9","nodeType":"YulLiteral","src":"1242:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1232:6:9","nodeType":"YulIdentifier","src":"1232:6:9"},"nativeSrc":"1232:12:9","nodeType":"YulFunctionCall","src":"1232:12:9"},"nativeSrc":"1232:12:9","nodeType":"YulExpressionStatement","src":"1232:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1133:117:9","nodeType":"YulFunctionDefinition","src":"1133:117:9"},{"body":{"nativeSrc":"1345:28:9","nodeType":"YulBlock","src":"1345:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1362:1:9","nodeType":"YulLiteral","src":"1362:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1365:1:9","nodeType":"YulLiteral","src":"1365:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1355:6:9","nodeType":"YulIdentifier","src":"1355:6:9"},"nativeSrc":"1355:12:9","nodeType":"YulFunctionCall","src":"1355:12:9"},"nativeSrc":"1355:12:9","nodeType":"YulExpressionStatement","src":"1355:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1256:117:9","nodeType":"YulFunctionDefinition","src":"1256:117:9"},{"body":{"nativeSrc":"1424:51:9","nodeType":"YulBlock","src":"1424:51:9","statements":[{"nativeSrc":"1434:35:9","nodeType":"YulAssignment","src":"1434:35:9","value":{"arguments":[{"name":"value","nativeSrc":"1463:5:9","nodeType":"YulIdentifier","src":"1463:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1445:17:9","nodeType":"YulIdentifier","src":"1445:17:9"},"nativeSrc":"1445:24:9","nodeType":"YulFunctionCall","src":"1445:24:9"},"variableNames":[{"name":"cleaned","nativeSrc":"1434:7:9","nodeType":"YulIdentifier","src":"1434:7:9"}]}]},"name":"cleanup_t_address","nativeSrc":"1379:96:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1406:5:9","nodeType":"YulTypedName","src":"1406:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1416:7:9","nodeType":"YulTypedName","src":"1416:7:9","type":""}],"src":"1379:96:9"},{"body":{"nativeSrc":"1524:79:9","nodeType":"YulBlock","src":"1524:79:9","statements":[{"body":{"nativeSrc":"1581:16:9","nodeType":"YulBlock","src":"1581:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1590:1:9","nodeType":"YulLiteral","src":"1590:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1593:1:9","nodeType":"YulLiteral","src":"1593:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1583:6:9","nodeType":"YulIdentifier","src":"1583:6:9"},"nativeSrc":"1583:12:9","nodeType":"YulFunctionCall","src":"1583:12:9"},"nativeSrc":"1583:12:9","nodeType":"YulExpressionStatement","src":"1583:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1547:5:9","nodeType":"YulIdentifier","src":"1547:5:9"},{"arguments":[{"name":"value","nativeSrc":"1572:5:9","nodeType":"YulIdentifier","src":"1572:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1554:17:9","nodeType":"YulIdentifier","src":"1554:17:9"},"nativeSrc":"1554:24:9","nodeType":"YulFunctionCall","src":"1554:24:9"}],"functionName":{"name":"eq","nativeSrc":"1544:2:9","nodeType":"YulIdentifier","src":"1544:2:9"},"nativeSrc":"1544:35:9","nodeType":"YulFunctionCall","src":"1544:35:9"}],"functionName":{"name":"iszero","nativeSrc":"1537:6:9","nodeType":"YulIdentifier","src":"1537:6:9"},"nativeSrc":"1537:43:9","nodeType":"YulFunctionCall","src":"1537:43:9"},"nativeSrc":"1534:63:9","nodeType":"YulIf","src":"1534:63:9"}]},"name":"validator_revert_t_address","nativeSrc":"1481:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1517:5:9","nodeType":"YulTypedName","src":"1517:5:9","type":""}],"src":"1481:122:9"},{"body":{"nativeSrc":"1661:87:9","nodeType":"YulBlock","src":"1661:87:9","statements":[{"nativeSrc":"1671:29:9","nodeType":"YulAssignment","src":"1671:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"1693:6:9","nodeType":"YulIdentifier","src":"1693:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"1680:12:9","nodeType":"YulIdentifier","src":"1680:12:9"},"nativeSrc":"1680:20:9","nodeType":"YulFunctionCall","src":"1680:20:9"},"variableNames":[{"name":"value","nativeSrc":"1671:5:9","nodeType":"YulIdentifier","src":"1671:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1736:5:9","nodeType":"YulIdentifier","src":"1736:5:9"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1709:26:9","nodeType":"YulIdentifier","src":"1709:26:9"},"nativeSrc":"1709:33:9","nodeType":"YulFunctionCall","src":"1709:33:9"},"nativeSrc":"1709:33:9","nodeType":"YulExpressionStatement","src":"1709:33:9"}]},"name":"abi_decode_t_address","nativeSrc":"1609:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1639:6:9","nodeType":"YulTypedName","src":"1639:6:9","type":""},{"name":"end","nativeSrc":"1647:3:9","nodeType":"YulTypedName","src":"1647:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1655:5:9","nodeType":"YulTypedName","src":"1655:5:9","type":""}],"src":"1609:139:9"},{"body":{"nativeSrc":"1820:263:9","nodeType":"YulBlock","src":"1820:263:9","statements":[{"body":{"nativeSrc":"1866:83:9","nodeType":"YulBlock","src":"1866:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1868:77:9","nodeType":"YulIdentifier","src":"1868:77:9"},"nativeSrc":"1868:79:9","nodeType":"YulFunctionCall","src":"1868:79:9"},"nativeSrc":"1868:79:9","nodeType":"YulExpressionStatement","src":"1868:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1841:7:9","nodeType":"YulIdentifier","src":"1841:7:9"},{"name":"headStart","nativeSrc":"1850:9:9","nodeType":"YulIdentifier","src":"1850:9:9"}],"functionName":{"name":"sub","nativeSrc":"1837:3:9","nodeType":"YulIdentifier","src":"1837:3:9"},"nativeSrc":"1837:23:9","nodeType":"YulFunctionCall","src":"1837:23:9"},{"kind":"number","nativeSrc":"1862:2:9","nodeType":"YulLiteral","src":"1862:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1833:3:9","nodeType":"YulIdentifier","src":"1833:3:9"},"nativeSrc":"1833:32:9","nodeType":"YulFunctionCall","src":"1833:32:9"},"nativeSrc":"1830:119:9","nodeType":"YulIf","src":"1830:119:9"},{"nativeSrc":"1959:117:9","nodeType":"YulBlock","src":"1959:117:9","statements":[{"nativeSrc":"1974:15:9","nodeType":"YulVariableDeclaration","src":"1974:15:9","value":{"kind":"number","nativeSrc":"1988:1:9","nodeType":"YulLiteral","src":"1988:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1978:6:9","nodeType":"YulTypedName","src":"1978:6:9","type":""}]},{"nativeSrc":"2003:63:9","nodeType":"YulAssignment","src":"2003:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2038:9:9","nodeType":"YulIdentifier","src":"2038:9:9"},{"name":"offset","nativeSrc":"2049:6:9","nodeType":"YulIdentifier","src":"2049:6:9"}],"functionName":{"name":"add","nativeSrc":"2034:3:9","nodeType":"YulIdentifier","src":"2034:3:9"},"nativeSrc":"2034:22:9","nodeType":"YulFunctionCall","src":"2034:22:9"},{"name":"dataEnd","nativeSrc":"2058:7:9","nodeType":"YulIdentifier","src":"2058:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2013:20:9","nodeType":"YulIdentifier","src":"2013:20:9"},"nativeSrc":"2013:53:9","nodeType":"YulFunctionCall","src":"2013:53:9"},"variableNames":[{"name":"value0","nativeSrc":"2003:6:9","nodeType":"YulIdentifier","src":"2003:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1754:329:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1790:9:9","nodeType":"YulTypedName","src":"1790:9:9","type":""},{"name":"dataEnd","nativeSrc":"1801:7:9","nodeType":"YulTypedName","src":"1801:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1813:6:9","nodeType":"YulTypedName","src":"1813:6:9","type":""}],"src":"1754:329:9"},{"body":{"nativeSrc":"2134:32:9","nodeType":"YulBlock","src":"2134:32:9","statements":[{"nativeSrc":"2144:16:9","nodeType":"YulAssignment","src":"2144:16:9","value":{"name":"value","nativeSrc":"2155:5:9","nodeType":"YulIdentifier","src":"2155:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"2144:7:9","nodeType":"YulIdentifier","src":"2144:7:9"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2089:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2116:5:9","nodeType":"YulTypedName","src":"2116:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2126:7:9","nodeType":"YulTypedName","src":"2126:7:9","type":""}],"src":"2089:77:9"},{"body":{"nativeSrc":"2237:53:9","nodeType":"YulBlock","src":"2237:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2254:3:9","nodeType":"YulIdentifier","src":"2254:3:9"},{"arguments":[{"name":"value","nativeSrc":"2277:5:9","nodeType":"YulIdentifier","src":"2277:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2259:17:9","nodeType":"YulIdentifier","src":"2259:17:9"},"nativeSrc":"2259:24:9","nodeType":"YulFunctionCall","src":"2259:24:9"}],"functionName":{"name":"mstore","nativeSrc":"2247:6:9","nodeType":"YulIdentifier","src":"2247:6:9"},"nativeSrc":"2247:37:9","nodeType":"YulFunctionCall","src":"2247:37:9"},"nativeSrc":"2247:37:9","nodeType":"YulExpressionStatement","src":"2247:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2172:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2225:5:9","nodeType":"YulTypedName","src":"2225:5:9","type":""},{"name":"pos","nativeSrc":"2232:3:9","nodeType":"YulTypedName","src":"2232:3:9","type":""}],"src":"2172:118:9"},{"body":{"nativeSrc":"2394:124:9","nodeType":"YulBlock","src":"2394:124:9","statements":[{"nativeSrc":"2404:26:9","nodeType":"YulAssignment","src":"2404:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"2416:9:9","nodeType":"YulIdentifier","src":"2416:9:9"},{"kind":"number","nativeSrc":"2427:2:9","nodeType":"YulLiteral","src":"2427:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2412:3:9","nodeType":"YulIdentifier","src":"2412:3:9"},"nativeSrc":"2412:18:9","nodeType":"YulFunctionCall","src":"2412:18:9"},"variableNames":[{"name":"tail","nativeSrc":"2404:4:9","nodeType":"YulIdentifier","src":"2404:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2484:6:9","nodeType":"YulIdentifier","src":"2484:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"2497:9:9","nodeType":"YulIdentifier","src":"2497:9:9"},{"kind":"number","nativeSrc":"2508:1:9","nodeType":"YulLiteral","src":"2508:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2493:3:9","nodeType":"YulIdentifier","src":"2493:3:9"},"nativeSrc":"2493:17:9","nodeType":"YulFunctionCall","src":"2493:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2440:43:9","nodeType":"YulIdentifier","src":"2440:43:9"},"nativeSrc":"2440:71:9","nodeType":"YulFunctionCall","src":"2440:71:9"},"nativeSrc":"2440:71:9","nodeType":"YulExpressionStatement","src":"2440:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2296:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2366:9:9","nodeType":"YulTypedName","src":"2366:9:9","type":""},{"name":"value0","nativeSrc":"2378:6:9","nodeType":"YulTypedName","src":"2378:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2389:4:9","nodeType":"YulTypedName","src":"2389:4:9","type":""}],"src":"2296:222:9"},{"body":{"nativeSrc":"2567:79:9","nodeType":"YulBlock","src":"2567:79:9","statements":[{"body":{"nativeSrc":"2624:16:9","nodeType":"YulBlock","src":"2624:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2633:1:9","nodeType":"YulLiteral","src":"2633:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2636:1:9","nodeType":"YulLiteral","src":"2636:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2626:6:9","nodeType":"YulIdentifier","src":"2626:6:9"},"nativeSrc":"2626:12:9","nodeType":"YulFunctionCall","src":"2626:12:9"},"nativeSrc":"2626:12:9","nodeType":"YulExpressionStatement","src":"2626:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2590:5:9","nodeType":"YulIdentifier","src":"2590:5:9"},{"arguments":[{"name":"value","nativeSrc":"2615:5:9","nodeType":"YulIdentifier","src":"2615:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2597:17:9","nodeType":"YulIdentifier","src":"2597:17:9"},"nativeSrc":"2597:24:9","nodeType":"YulFunctionCall","src":"2597:24:9"}],"functionName":{"name":"eq","nativeSrc":"2587:2:9","nodeType":"YulIdentifier","src":"2587:2:9"},"nativeSrc":"2587:35:9","nodeType":"YulFunctionCall","src":"2587:35:9"}],"functionName":{"name":"iszero","nativeSrc":"2580:6:9","nodeType":"YulIdentifier","src":"2580:6:9"},"nativeSrc":"2580:43:9","nodeType":"YulFunctionCall","src":"2580:43:9"},"nativeSrc":"2577:63:9","nodeType":"YulIf","src":"2577:63:9"}]},"name":"validator_revert_t_uint256","nativeSrc":"2524:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2560:5:9","nodeType":"YulTypedName","src":"2560:5:9","type":""}],"src":"2524:122:9"},{"body":{"nativeSrc":"2704:87:9","nodeType":"YulBlock","src":"2704:87:9","statements":[{"nativeSrc":"2714:29:9","nodeType":"YulAssignment","src":"2714:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"2736:6:9","nodeType":"YulIdentifier","src":"2736:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"2723:12:9","nodeType":"YulIdentifier","src":"2723:12:9"},"nativeSrc":"2723:20:9","nodeType":"YulFunctionCall","src":"2723:20:9"},"variableNames":[{"name":"value","nativeSrc":"2714:5:9","nodeType":"YulIdentifier","src":"2714:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2779:5:9","nodeType":"YulIdentifier","src":"2779:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2752:26:9","nodeType":"YulIdentifier","src":"2752:26:9"},"nativeSrc":"2752:33:9","nodeType":"YulFunctionCall","src":"2752:33:9"},"nativeSrc":"2752:33:9","nodeType":"YulExpressionStatement","src":"2752:33:9"}]},"name":"abi_decode_t_uint256","nativeSrc":"2652:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2682:6:9","nodeType":"YulTypedName","src":"2682:6:9","type":""},{"name":"end","nativeSrc":"2690:3:9","nodeType":"YulTypedName","src":"2690:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2698:5:9","nodeType":"YulTypedName","src":"2698:5:9","type":""}],"src":"2652:139:9"},{"body":{"nativeSrc":"2863:263:9","nodeType":"YulBlock","src":"2863:263:9","statements":[{"body":{"nativeSrc":"2909:83:9","nodeType":"YulBlock","src":"2909:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2911:77:9","nodeType":"YulIdentifier","src":"2911:77:9"},"nativeSrc":"2911:79:9","nodeType":"YulFunctionCall","src":"2911:79:9"},"nativeSrc":"2911:79:9","nodeType":"YulExpressionStatement","src":"2911:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2884:7:9","nodeType":"YulIdentifier","src":"2884:7:9"},{"name":"headStart","nativeSrc":"2893:9:9","nodeType":"YulIdentifier","src":"2893:9:9"}],"functionName":{"name":"sub","nativeSrc":"2880:3:9","nodeType":"YulIdentifier","src":"2880:3:9"},"nativeSrc":"2880:23:9","nodeType":"YulFunctionCall","src":"2880:23:9"},{"kind":"number","nativeSrc":"2905:2:9","nodeType":"YulLiteral","src":"2905:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2876:3:9","nodeType":"YulIdentifier","src":"2876:3:9"},"nativeSrc":"2876:32:9","nodeType":"YulFunctionCall","src":"2876:32:9"},"nativeSrc":"2873:119:9","nodeType":"YulIf","src":"2873:119:9"},{"nativeSrc":"3002:117:9","nodeType":"YulBlock","src":"3002:117:9","statements":[{"nativeSrc":"3017:15:9","nodeType":"YulVariableDeclaration","src":"3017:15:9","value":{"kind":"number","nativeSrc":"3031:1:9","nodeType":"YulLiteral","src":"3031:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3021:6:9","nodeType":"YulTypedName","src":"3021:6:9","type":""}]},{"nativeSrc":"3046:63:9","nodeType":"YulAssignment","src":"3046:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3081:9:9","nodeType":"YulIdentifier","src":"3081:9:9"},{"name":"offset","nativeSrc":"3092:6:9","nodeType":"YulIdentifier","src":"3092:6:9"}],"functionName":{"name":"add","nativeSrc":"3077:3:9","nodeType":"YulIdentifier","src":"3077:3:9"},"nativeSrc":"3077:22:9","nodeType":"YulFunctionCall","src":"3077:22:9"},{"name":"dataEnd","nativeSrc":"3101:7:9","nodeType":"YulIdentifier","src":"3101:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3056:20:9","nodeType":"YulIdentifier","src":"3056:20:9"},"nativeSrc":"3056:53:9","nodeType":"YulFunctionCall","src":"3056:53:9"},"variableNames":[{"name":"value0","nativeSrc":"3046:6:9","nodeType":"YulIdentifier","src":"3046:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2797:329:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2833:9:9","nodeType":"YulTypedName","src":"2833:9:9","type":""},{"name":"dataEnd","nativeSrc":"2844:7:9","nodeType":"YulTypedName","src":"2844:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2856:6:9","nodeType":"YulTypedName","src":"2856:6:9","type":""}],"src":"2797:329:9"},{"body":{"nativeSrc":"3197:53:9","nodeType":"YulBlock","src":"3197:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3214:3:9","nodeType":"YulIdentifier","src":"3214:3:9"},{"arguments":[{"name":"value","nativeSrc":"3237:5:9","nodeType":"YulIdentifier","src":"3237:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3219:17:9","nodeType":"YulIdentifier","src":"3219:17:9"},"nativeSrc":"3219:24:9","nodeType":"YulFunctionCall","src":"3219:24:9"}],"functionName":{"name":"mstore","nativeSrc":"3207:6:9","nodeType":"YulIdentifier","src":"3207:6:9"},"nativeSrc":"3207:37:9","nodeType":"YulFunctionCall","src":"3207:37:9"},"nativeSrc":"3207:37:9","nodeType":"YulExpressionStatement","src":"3207:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3132:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3185:5:9","nodeType":"YulTypedName","src":"3185:5:9","type":""},{"name":"pos","nativeSrc":"3192:3:9","nodeType":"YulTypedName","src":"3192:3:9","type":""}],"src":"3132:118:9"},{"body":{"nativeSrc":"3354:124:9","nodeType":"YulBlock","src":"3354:124:9","statements":[{"nativeSrc":"3364:26:9","nodeType":"YulAssignment","src":"3364:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"3376:9:9","nodeType":"YulIdentifier","src":"3376:9:9"},{"kind":"number","nativeSrc":"3387:2:9","nodeType":"YulLiteral","src":"3387:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3372:3:9","nodeType":"YulIdentifier","src":"3372:3:9"},"nativeSrc":"3372:18:9","nodeType":"YulFunctionCall","src":"3372:18:9"},"variableNames":[{"name":"tail","nativeSrc":"3364:4:9","nodeType":"YulIdentifier","src":"3364:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3444:6:9","nodeType":"YulIdentifier","src":"3444:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"3457:9:9","nodeType":"YulIdentifier","src":"3457:9:9"},{"kind":"number","nativeSrc":"3468:1:9","nodeType":"YulLiteral","src":"3468:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3453:3:9","nodeType":"YulIdentifier","src":"3453:3:9"},"nativeSrc":"3453:17:9","nodeType":"YulFunctionCall","src":"3453:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3400:43:9","nodeType":"YulIdentifier","src":"3400:43:9"},"nativeSrc":"3400:71:9","nodeType":"YulFunctionCall","src":"3400:71:9"},"nativeSrc":"3400:71:9","nodeType":"YulExpressionStatement","src":"3400:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3256:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3326:9:9","nodeType":"YulTypedName","src":"3326:9:9","type":""},{"name":"value0","nativeSrc":"3338:6:9","nodeType":"YulTypedName","src":"3338:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3349:4:9","nodeType":"YulTypedName","src":"3349:4:9","type":""}],"src":"3256:222:9"},{"body":{"nativeSrc":"3567:391:9","nodeType":"YulBlock","src":"3567:391:9","statements":[{"body":{"nativeSrc":"3613:83:9","nodeType":"YulBlock","src":"3613:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3615:77:9","nodeType":"YulIdentifier","src":"3615:77:9"},"nativeSrc":"3615:79:9","nodeType":"YulFunctionCall","src":"3615:79:9"},"nativeSrc":"3615:79:9","nodeType":"YulExpressionStatement","src":"3615:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3588:7:9","nodeType":"YulIdentifier","src":"3588:7:9"},{"name":"headStart","nativeSrc":"3597:9:9","nodeType":"YulIdentifier","src":"3597:9:9"}],"functionName":{"name":"sub","nativeSrc":"3584:3:9","nodeType":"YulIdentifier","src":"3584:3:9"},"nativeSrc":"3584:23:9","nodeType":"YulFunctionCall","src":"3584:23:9"},{"kind":"number","nativeSrc":"3609:2:9","nodeType":"YulLiteral","src":"3609:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3580:3:9","nodeType":"YulIdentifier","src":"3580:3:9"},"nativeSrc":"3580:32:9","nodeType":"YulFunctionCall","src":"3580:32:9"},"nativeSrc":"3577:119:9","nodeType":"YulIf","src":"3577:119:9"},{"nativeSrc":"3706:117:9","nodeType":"YulBlock","src":"3706:117:9","statements":[{"nativeSrc":"3721:15:9","nodeType":"YulVariableDeclaration","src":"3721:15:9","value":{"kind":"number","nativeSrc":"3735:1:9","nodeType":"YulLiteral","src":"3735:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3725:6:9","nodeType":"YulTypedName","src":"3725:6:9","type":""}]},{"nativeSrc":"3750:63:9","nodeType":"YulAssignment","src":"3750:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3785:9:9","nodeType":"YulIdentifier","src":"3785:9:9"},{"name":"offset","nativeSrc":"3796:6:9","nodeType":"YulIdentifier","src":"3796:6:9"}],"functionName":{"name":"add","nativeSrc":"3781:3:9","nodeType":"YulIdentifier","src":"3781:3:9"},"nativeSrc":"3781:22:9","nodeType":"YulFunctionCall","src":"3781:22:9"},{"name":"dataEnd","nativeSrc":"3805:7:9","nodeType":"YulIdentifier","src":"3805:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3760:20:9","nodeType":"YulIdentifier","src":"3760:20:9"},"nativeSrc":"3760:53:9","nodeType":"YulFunctionCall","src":"3760:53:9"},"variableNames":[{"name":"value0","nativeSrc":"3750:6:9","nodeType":"YulIdentifier","src":"3750:6:9"}]}]},{"nativeSrc":"3833:118:9","nodeType":"YulBlock","src":"3833:118:9","statements":[{"nativeSrc":"3848:16:9","nodeType":"YulVariableDeclaration","src":"3848:16:9","value":{"kind":"number","nativeSrc":"3862:2:9","nodeType":"YulLiteral","src":"3862:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3852:6:9","nodeType":"YulTypedName","src":"3852:6:9","type":""}]},{"nativeSrc":"3878:63:9","nodeType":"YulAssignment","src":"3878:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3913:9:9","nodeType":"YulIdentifier","src":"3913:9:9"},{"name":"offset","nativeSrc":"3924:6:9","nodeType":"YulIdentifier","src":"3924:6:9"}],"functionName":{"name":"add","nativeSrc":"3909:3:9","nodeType":"YulIdentifier","src":"3909:3:9"},"nativeSrc":"3909:22:9","nodeType":"YulFunctionCall","src":"3909:22:9"},{"name":"dataEnd","nativeSrc":"3933:7:9","nodeType":"YulIdentifier","src":"3933:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3888:20:9","nodeType":"YulIdentifier","src":"3888:20:9"},"nativeSrc":"3888:53:9","nodeType":"YulFunctionCall","src":"3888:53:9"},"variableNames":[{"name":"value1","nativeSrc":"3878:6:9","nodeType":"YulIdentifier","src":"3878:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"3484:474:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3529:9:9","nodeType":"YulTypedName","src":"3529:9:9","type":""},{"name":"dataEnd","nativeSrc":"3540:7:9","nodeType":"YulTypedName","src":"3540:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3552:6:9","nodeType":"YulTypedName","src":"3552:6:9","type":""},{"name":"value1","nativeSrc":"3560:6:9","nodeType":"YulTypedName","src":"3560:6:9","type":""}],"src":"3484:474:9"},{"body":{"nativeSrc":"4060:73:9","nodeType":"YulBlock","src":"4060:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4077:3:9","nodeType":"YulIdentifier","src":"4077:3:9"},{"name":"length","nativeSrc":"4082:6:9","nodeType":"YulIdentifier","src":"4082:6:9"}],"functionName":{"name":"mstore","nativeSrc":"4070:6:9","nodeType":"YulIdentifier","src":"4070:6:9"},"nativeSrc":"4070:19:9","nodeType":"YulFunctionCall","src":"4070:19:9"},"nativeSrc":"4070:19:9","nodeType":"YulExpressionStatement","src":"4070:19:9"},{"nativeSrc":"4098:29:9","nodeType":"YulAssignment","src":"4098:29:9","value":{"arguments":[{"name":"pos","nativeSrc":"4117:3:9","nodeType":"YulIdentifier","src":"4117:3:9"},{"kind":"number","nativeSrc":"4122:4:9","nodeType":"YulLiteral","src":"4122:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4113:3:9","nodeType":"YulIdentifier","src":"4113:3:9"},"nativeSrc":"4113:14:9","nodeType":"YulFunctionCall","src":"4113:14:9"},"variableNames":[{"name":"updated_pos","nativeSrc":"4098:11:9","nodeType":"YulIdentifier","src":"4098:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3964:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4032:3:9","nodeType":"YulTypedName","src":"4032:3:9","type":""},{"name":"length","nativeSrc":"4037:6:9","nodeType":"YulTypedName","src":"4037:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4048:11:9","nodeType":"YulTypedName","src":"4048:11:9","type":""}],"src":"3964:169:9"},{"body":{"nativeSrc":"4245:65:9","nodeType":"YulBlock","src":"4245:65:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4267:6:9","nodeType":"YulIdentifier","src":"4267:6:9"},{"kind":"number","nativeSrc":"4275:1:9","nodeType":"YulLiteral","src":"4275:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4263:3:9","nodeType":"YulIdentifier","src":"4263:3:9"},"nativeSrc":"4263:14:9","nodeType":"YulFunctionCall","src":"4263:14:9"},{"hexValue":"496e76616c696420746f6b656e2061646472657373","kind":"string","nativeSrc":"4279:23:9","nodeType":"YulLiteral","src":"4279:23:9","type":"","value":"Invalid token address"}],"functionName":{"name":"mstore","nativeSrc":"4256:6:9","nodeType":"YulIdentifier","src":"4256:6:9"},"nativeSrc":"4256:47:9","nodeType":"YulFunctionCall","src":"4256:47:9"},"nativeSrc":"4256:47:9","nodeType":"YulExpressionStatement","src":"4256:47:9"}]},"name":"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","nativeSrc":"4139:171:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4237:6:9","nodeType":"YulTypedName","src":"4237:6:9","type":""}],"src":"4139:171:9"},{"body":{"nativeSrc":"4462:220:9","nodeType":"YulBlock","src":"4462:220:9","statements":[{"nativeSrc":"4472:74:9","nodeType":"YulAssignment","src":"4472:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"4538:3:9","nodeType":"YulIdentifier","src":"4538:3:9"},{"kind":"number","nativeSrc":"4543:2:9","nodeType":"YulLiteral","src":"4543:2:9","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4479:58:9","nodeType":"YulIdentifier","src":"4479:58:9"},"nativeSrc":"4479:67:9","nodeType":"YulFunctionCall","src":"4479:67:9"},"variableNames":[{"name":"pos","nativeSrc":"4472:3:9","nodeType":"YulIdentifier","src":"4472:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4644:3:9","nodeType":"YulIdentifier","src":"4644:3:9"}],"functionName":{"name":"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","nativeSrc":"4555:88:9","nodeType":"YulIdentifier","src":"4555:88:9"},"nativeSrc":"4555:93:9","nodeType":"YulFunctionCall","src":"4555:93:9"},"nativeSrc":"4555:93:9","nodeType":"YulExpressionStatement","src":"4555:93:9"},{"nativeSrc":"4657:19:9","nodeType":"YulAssignment","src":"4657:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"4668:3:9","nodeType":"YulIdentifier","src":"4668:3:9"},{"kind":"number","nativeSrc":"4673:2:9","nodeType":"YulLiteral","src":"4673:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4664:3:9","nodeType":"YulIdentifier","src":"4664:3:9"},"nativeSrc":"4664:12:9","nodeType":"YulFunctionCall","src":"4664:12:9"},"variableNames":[{"name":"end","nativeSrc":"4657:3:9","nodeType":"YulIdentifier","src":"4657:3:9"}]}]},"name":"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack","nativeSrc":"4316:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4450:3:9","nodeType":"YulTypedName","src":"4450:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4458:3:9","nodeType":"YulTypedName","src":"4458:3:9","type":""}],"src":"4316:366:9"},{"body":{"nativeSrc":"4859:248:9","nodeType":"YulBlock","src":"4859:248:9","statements":[{"nativeSrc":"4869:26:9","nodeType":"YulAssignment","src":"4869:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"4881:9:9","nodeType":"YulIdentifier","src":"4881:9:9"},{"kind":"number","nativeSrc":"4892:2:9","nodeType":"YulLiteral","src":"4892:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4877:3:9","nodeType":"YulIdentifier","src":"4877:3:9"},"nativeSrc":"4877:18:9","nodeType":"YulFunctionCall","src":"4877:18:9"},"variableNames":[{"name":"tail","nativeSrc":"4869:4:9","nodeType":"YulIdentifier","src":"4869:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4916:9:9","nodeType":"YulIdentifier","src":"4916:9:9"},{"kind":"number","nativeSrc":"4927:1:9","nodeType":"YulLiteral","src":"4927:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4912:3:9","nodeType":"YulIdentifier","src":"4912:3:9"},"nativeSrc":"4912:17:9","nodeType":"YulFunctionCall","src":"4912:17:9"},{"arguments":[{"name":"tail","nativeSrc":"4935:4:9","nodeType":"YulIdentifier","src":"4935:4:9"},{"name":"headStart","nativeSrc":"4941:9:9","nodeType":"YulIdentifier","src":"4941:9:9"}],"functionName":{"name":"sub","nativeSrc":"4931:3:9","nodeType":"YulIdentifier","src":"4931:3:9"},"nativeSrc":"4931:20:9","nodeType":"YulFunctionCall","src":"4931:20:9"}],"functionName":{"name":"mstore","nativeSrc":"4905:6:9","nodeType":"YulIdentifier","src":"4905:6:9"},"nativeSrc":"4905:47:9","nodeType":"YulFunctionCall","src":"4905:47:9"},"nativeSrc":"4905:47:9","nodeType":"YulExpressionStatement","src":"4905:47:9"},{"nativeSrc":"4961:139:9","nodeType":"YulAssignment","src":"4961:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"5095:4:9","nodeType":"YulIdentifier","src":"5095:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack","nativeSrc":"4969:124:9","nodeType":"YulIdentifier","src":"4969:124:9"},"nativeSrc":"4969:131:9","nodeType":"YulFunctionCall","src":"4969:131:9"},"variableNames":[{"name":"tail","nativeSrc":"4961:4:9","nodeType":"YulIdentifier","src":"4961:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4688:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4839:9:9","nodeType":"YulTypedName","src":"4839:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4854:4:9","nodeType":"YulTypedName","src":"4854:4:9","type":""}],"src":"4688:419:9"},{"body":{"nativeSrc":"5176:80:9","nodeType":"YulBlock","src":"5176:80:9","statements":[{"nativeSrc":"5186:22:9","nodeType":"YulAssignment","src":"5186:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"5201:6:9","nodeType":"YulIdentifier","src":"5201:6:9"}],"functionName":{"name":"mload","nativeSrc":"5195:5:9","nodeType":"YulIdentifier","src":"5195:5:9"},"nativeSrc":"5195:13:9","nodeType":"YulFunctionCall","src":"5195:13:9"},"variableNames":[{"name":"value","nativeSrc":"5186:5:9","nodeType":"YulIdentifier","src":"5186:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5244:5:9","nodeType":"YulIdentifier","src":"5244:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5217:26:9","nodeType":"YulIdentifier","src":"5217:26:9"},"nativeSrc":"5217:33:9","nodeType":"YulFunctionCall","src":"5217:33:9"},"nativeSrc":"5217:33:9","nodeType":"YulExpressionStatement","src":"5217:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"5113:143:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5154:6:9","nodeType":"YulTypedName","src":"5154:6:9","type":""},{"name":"end","nativeSrc":"5162:3:9","nodeType":"YulTypedName","src":"5162:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5170:5:9","nodeType":"YulTypedName","src":"5170:5:9","type":""}],"src":"5113:143:9"},{"body":{"nativeSrc":"5339:274:9","nodeType":"YulBlock","src":"5339:274:9","statements":[{"body":{"nativeSrc":"5385:83:9","nodeType":"YulBlock","src":"5385:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5387:77:9","nodeType":"YulIdentifier","src":"5387:77:9"},"nativeSrc":"5387:79:9","nodeType":"YulFunctionCall","src":"5387:79:9"},"nativeSrc":"5387:79:9","nodeType":"YulExpressionStatement","src":"5387:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5360:7:9","nodeType":"YulIdentifier","src":"5360:7:9"},{"name":"headStart","nativeSrc":"5369:9:9","nodeType":"YulIdentifier","src":"5369:9:9"}],"functionName":{"name":"sub","nativeSrc":"5356:3:9","nodeType":"YulIdentifier","src":"5356:3:9"},"nativeSrc":"5356:23:9","nodeType":"YulFunctionCall","src":"5356:23:9"},{"kind":"number","nativeSrc":"5381:2:9","nodeType":"YulLiteral","src":"5381:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5352:3:9","nodeType":"YulIdentifier","src":"5352:3:9"},"nativeSrc":"5352:32:9","nodeType":"YulFunctionCall","src":"5352:32:9"},"nativeSrc":"5349:119:9","nodeType":"YulIf","src":"5349:119:9"},{"nativeSrc":"5478:128:9","nodeType":"YulBlock","src":"5478:128:9","statements":[{"nativeSrc":"5493:15:9","nodeType":"YulVariableDeclaration","src":"5493:15:9","value":{"kind":"number","nativeSrc":"5507:1:9","nodeType":"YulLiteral","src":"5507:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5497:6:9","nodeType":"YulTypedName","src":"5497:6:9","type":""}]},{"nativeSrc":"5522:74:9","nodeType":"YulAssignment","src":"5522:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5568:9:9","nodeType":"YulIdentifier","src":"5568:9:9"},{"name":"offset","nativeSrc":"5579:6:9","nodeType":"YulIdentifier","src":"5579:6:9"}],"functionName":{"name":"add","nativeSrc":"5564:3:9","nodeType":"YulIdentifier","src":"5564:3:9"},"nativeSrc":"5564:22:9","nodeType":"YulFunctionCall","src":"5564:22:9"},{"name":"dataEnd","nativeSrc":"5588:7:9","nodeType":"YulIdentifier","src":"5588:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"5532:31:9","nodeType":"YulIdentifier","src":"5532:31:9"},"nativeSrc":"5532:64:9","nodeType":"YulFunctionCall","src":"5532:64:9"},"variableNames":[{"name":"value0","nativeSrc":"5522:6:9","nodeType":"YulIdentifier","src":"5522:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"5262:351:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5309:9:9","nodeType":"YulTypedName","src":"5309:9:9","type":""},{"name":"dataEnd","nativeSrc":"5320:7:9","nodeType":"YulTypedName","src":"5320:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5332:6:9","nodeType":"YulTypedName","src":"5332:6:9","type":""}],"src":"5262:351:9"},{"body":{"nativeSrc":"5647:152:9","nodeType":"YulBlock","src":"5647:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5664:1:9","nodeType":"YulLiteral","src":"5664:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"5667:77:9","nodeType":"YulLiteral","src":"5667:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5657:6:9","nodeType":"YulIdentifier","src":"5657:6:9"},"nativeSrc":"5657:88:9","nodeType":"YulFunctionCall","src":"5657:88:9"},"nativeSrc":"5657:88:9","nodeType":"YulExpressionStatement","src":"5657:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5761:1:9","nodeType":"YulLiteral","src":"5761:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"5764:4:9","nodeType":"YulLiteral","src":"5764:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5754:6:9","nodeType":"YulIdentifier","src":"5754:6:9"},"nativeSrc":"5754:15:9","nodeType":"YulFunctionCall","src":"5754:15:9"},"nativeSrc":"5754:15:9","nodeType":"YulExpressionStatement","src":"5754:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5785:1:9","nodeType":"YulLiteral","src":"5785:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"5788:4:9","nodeType":"YulLiteral","src":"5788:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5778:6:9","nodeType":"YulIdentifier","src":"5778:6:9"},"nativeSrc":"5778:15:9","nodeType":"YulFunctionCall","src":"5778:15:9"},"nativeSrc":"5778:15:9","nodeType":"YulExpressionStatement","src":"5778:15:9"}]},"name":"panic_error_0x11","nativeSrc":"5619:180:9","nodeType":"YulFunctionDefinition","src":"5619:180:9"},{"body":{"nativeSrc":"5853:362:9","nodeType":"YulBlock","src":"5853:362:9","statements":[{"nativeSrc":"5863:25:9","nodeType":"YulAssignment","src":"5863:25:9","value":{"arguments":[{"name":"x","nativeSrc":"5886:1:9","nodeType":"YulIdentifier","src":"5886:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5868:17:9","nodeType":"YulIdentifier","src":"5868:17:9"},"nativeSrc":"5868:20:9","nodeType":"YulFunctionCall","src":"5868:20:9"},"variableNames":[{"name":"x","nativeSrc":"5863:1:9","nodeType":"YulIdentifier","src":"5863:1:9"}]},{"nativeSrc":"5897:25:9","nodeType":"YulAssignment","src":"5897:25:9","value":{"arguments":[{"name":"y","nativeSrc":"5920:1:9","nodeType":"YulIdentifier","src":"5920:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5902:17:9","nodeType":"YulIdentifier","src":"5902:17:9"},"nativeSrc":"5902:20:9","nodeType":"YulFunctionCall","src":"5902:20:9"},"variableNames":[{"name":"y","nativeSrc":"5897:1:9","nodeType":"YulIdentifier","src":"5897:1:9"}]},{"nativeSrc":"5931:28:9","nodeType":"YulVariableDeclaration","src":"5931:28:9","value":{"arguments":[{"name":"x","nativeSrc":"5954:1:9","nodeType":"YulIdentifier","src":"5954:1:9"},{"name":"y","nativeSrc":"5957:1:9","nodeType":"YulIdentifier","src":"5957:1:9"}],"functionName":{"name":"mul","nativeSrc":"5950:3:9","nodeType":"YulIdentifier","src":"5950:3:9"},"nativeSrc":"5950:9:9","nodeType":"YulFunctionCall","src":"5950:9:9"},"variables":[{"name":"product_raw","nativeSrc":"5935:11:9","nodeType":"YulTypedName","src":"5935:11:9","type":""}]},{"nativeSrc":"5968:41:9","nodeType":"YulAssignment","src":"5968:41:9","value":{"arguments":[{"name":"product_raw","nativeSrc":"5997:11:9","nodeType":"YulIdentifier","src":"5997:11:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5979:17:9","nodeType":"YulIdentifier","src":"5979:17:9"},"nativeSrc":"5979:30:9","nodeType":"YulFunctionCall","src":"5979:30:9"},"variableNames":[{"name":"product","nativeSrc":"5968:7:9","nodeType":"YulIdentifier","src":"5968:7:9"}]},{"body":{"nativeSrc":"6186:22:9","nodeType":"YulBlock","src":"6186:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6188:16:9","nodeType":"YulIdentifier","src":"6188:16:9"},"nativeSrc":"6188:18:9","nodeType":"YulFunctionCall","src":"6188:18:9"},"nativeSrc":"6188:18:9","nodeType":"YulExpressionStatement","src":"6188:18:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"6119:1:9","nodeType":"YulIdentifier","src":"6119:1:9"}],"functionName":{"name":"iszero","nativeSrc":"6112:6:9","nodeType":"YulIdentifier","src":"6112:6:9"},"nativeSrc":"6112:9:9","nodeType":"YulFunctionCall","src":"6112:9:9"},{"arguments":[{"name":"y","nativeSrc":"6142:1:9","nodeType":"YulIdentifier","src":"6142:1:9"},{"arguments":[{"name":"product","nativeSrc":"6149:7:9","nodeType":"YulIdentifier","src":"6149:7:9"},{"name":"x","nativeSrc":"6158:1:9","nodeType":"YulIdentifier","src":"6158:1:9"}],"functionName":{"name":"div","nativeSrc":"6145:3:9","nodeType":"YulIdentifier","src":"6145:3:9"},"nativeSrc":"6145:15:9","nodeType":"YulFunctionCall","src":"6145:15:9"}],"functionName":{"name":"eq","nativeSrc":"6139:2:9","nodeType":"YulIdentifier","src":"6139:2:9"},"nativeSrc":"6139:22:9","nodeType":"YulFunctionCall","src":"6139:22:9"}],"functionName":{"name":"or","nativeSrc":"6092:2:9","nodeType":"YulIdentifier","src":"6092:2:9"},"nativeSrc":"6092:83:9","nodeType":"YulFunctionCall","src":"6092:83:9"}],"functionName":{"name":"iszero","nativeSrc":"6072:6:9","nodeType":"YulIdentifier","src":"6072:6:9"},"nativeSrc":"6072:113:9","nodeType":"YulFunctionCall","src":"6072:113:9"},"nativeSrc":"6069:139:9","nodeType":"YulIf","src":"6069:139:9"}]},"name":"checked_mul_t_uint256","nativeSrc":"5805:410:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5836:1:9","nodeType":"YulTypedName","src":"5836:1:9","type":""},{"name":"y","nativeSrc":"5839:1:9","nodeType":"YulTypedName","src":"5839:1:9","type":""}],"returnVariables":[{"name":"product","nativeSrc":"5845:7:9","nodeType":"YulTypedName","src":"5845:7:9","type":""}],"src":"5805:410:9"},{"body":{"nativeSrc":"6249:152:9","nodeType":"YulBlock","src":"6249:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6266:1:9","nodeType":"YulLiteral","src":"6266:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6269:77:9","nodeType":"YulLiteral","src":"6269:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6259:6:9","nodeType":"YulIdentifier","src":"6259:6:9"},"nativeSrc":"6259:88:9","nodeType":"YulFunctionCall","src":"6259:88:9"},"nativeSrc":"6259:88:9","nodeType":"YulExpressionStatement","src":"6259:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6363:1:9","nodeType":"YulLiteral","src":"6363:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"6366:4:9","nodeType":"YulLiteral","src":"6366:4:9","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"6356:6:9","nodeType":"YulIdentifier","src":"6356:6:9"},"nativeSrc":"6356:15:9","nodeType":"YulFunctionCall","src":"6356:15:9"},"nativeSrc":"6356:15:9","nodeType":"YulExpressionStatement","src":"6356:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6387:1:9","nodeType":"YulLiteral","src":"6387:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6390:4:9","nodeType":"YulLiteral","src":"6390:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6380:6:9","nodeType":"YulIdentifier","src":"6380:6:9"},"nativeSrc":"6380:15:9","nodeType":"YulFunctionCall","src":"6380:15:9"},"nativeSrc":"6380:15:9","nodeType":"YulExpressionStatement","src":"6380:15:9"}]},"name":"panic_error_0x12","nativeSrc":"6221:180:9","nodeType":"YulFunctionDefinition","src":"6221:180:9"},{"body":{"nativeSrc":"6449:143:9","nodeType":"YulBlock","src":"6449:143:9","statements":[{"nativeSrc":"6459:25:9","nodeType":"YulAssignment","src":"6459:25:9","value":{"arguments":[{"name":"x","nativeSrc":"6482:1:9","nodeType":"YulIdentifier","src":"6482:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6464:17:9","nodeType":"YulIdentifier","src":"6464:17:9"},"nativeSrc":"6464:20:9","nodeType":"YulFunctionCall","src":"6464:20:9"},"variableNames":[{"name":"x","nativeSrc":"6459:1:9","nodeType":"YulIdentifier","src":"6459:1:9"}]},{"nativeSrc":"6493:25:9","nodeType":"YulAssignment","src":"6493:25:9","value":{"arguments":[{"name":"y","nativeSrc":"6516:1:9","nodeType":"YulIdentifier","src":"6516:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6498:17:9","nodeType":"YulIdentifier","src":"6498:17:9"},"nativeSrc":"6498:20:9","nodeType":"YulFunctionCall","src":"6498:20:9"},"variableNames":[{"name":"y","nativeSrc":"6493:1:9","nodeType":"YulIdentifier","src":"6493:1:9"}]},{"body":{"nativeSrc":"6540:22:9","nodeType":"YulBlock","src":"6540:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"6542:16:9","nodeType":"YulIdentifier","src":"6542:16:9"},"nativeSrc":"6542:18:9","nodeType":"YulFunctionCall","src":"6542:18:9"},"nativeSrc":"6542:18:9","nodeType":"YulExpressionStatement","src":"6542:18:9"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"6537:1:9","nodeType":"YulIdentifier","src":"6537:1:9"}],"functionName":{"name":"iszero","nativeSrc":"6530:6:9","nodeType":"YulIdentifier","src":"6530:6:9"},"nativeSrc":"6530:9:9","nodeType":"YulFunctionCall","src":"6530:9:9"},"nativeSrc":"6527:35:9","nodeType":"YulIf","src":"6527:35:9"},{"nativeSrc":"6572:14:9","nodeType":"YulAssignment","src":"6572:14:9","value":{"arguments":[{"name":"x","nativeSrc":"6581:1:9","nodeType":"YulIdentifier","src":"6581:1:9"},{"name":"y","nativeSrc":"6584:1:9","nodeType":"YulIdentifier","src":"6584:1:9"}],"functionName":{"name":"div","nativeSrc":"6577:3:9","nodeType":"YulIdentifier","src":"6577:3:9"},"nativeSrc":"6577:9:9","nodeType":"YulFunctionCall","src":"6577:9:9"},"variableNames":[{"name":"r","nativeSrc":"6572:1:9","nodeType":"YulIdentifier","src":"6572:1:9"}]}]},"name":"checked_div_t_uint256","nativeSrc":"6407:185:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6438:1:9","nodeType":"YulTypedName","src":"6438:1:9","type":""},{"name":"y","nativeSrc":"6441:1:9","nodeType":"YulTypedName","src":"6441:1:9","type":""}],"returnVariables":[{"name":"r","nativeSrc":"6447:1:9","nodeType":"YulTypedName","src":"6447:1:9","type":""}],"src":"6407:185:9"},{"body":{"nativeSrc":"6704:68:9","nodeType":"YulBlock","src":"6704:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6726:6:9","nodeType":"YulIdentifier","src":"6726:6:9"},{"kind":"number","nativeSrc":"6734:1:9","nodeType":"YulLiteral","src":"6734:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6722:3:9","nodeType":"YulIdentifier","src":"6722:3:9"},"nativeSrc":"6722:14:9","nodeType":"YulFunctionCall","src":"6722:14:9"},{"hexValue":"496e70757420616d6f756e74206d757374206265203e2030","kind":"string","nativeSrc":"6738:26:9","nodeType":"YulLiteral","src":"6738:26:9","type":"","value":"Input amount must be > 0"}],"functionName":{"name":"mstore","nativeSrc":"6715:6:9","nodeType":"YulIdentifier","src":"6715:6:9"},"nativeSrc":"6715:50:9","nodeType":"YulFunctionCall","src":"6715:50:9"},"nativeSrc":"6715:50:9","nodeType":"YulExpressionStatement","src":"6715:50:9"}]},"name":"store_literal_in_memory_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe","nativeSrc":"6598:174:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6696:6:9","nodeType":"YulTypedName","src":"6696:6:9","type":""}],"src":"6598:174:9"},{"body":{"nativeSrc":"6924:220:9","nodeType":"YulBlock","src":"6924:220:9","statements":[{"nativeSrc":"6934:74:9","nodeType":"YulAssignment","src":"6934:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"7000:3:9","nodeType":"YulIdentifier","src":"7000:3:9"},{"kind":"number","nativeSrc":"7005:2:9","nodeType":"YulLiteral","src":"7005:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6941:58:9","nodeType":"YulIdentifier","src":"6941:58:9"},"nativeSrc":"6941:67:9","nodeType":"YulFunctionCall","src":"6941:67:9"},"variableNames":[{"name":"pos","nativeSrc":"6934:3:9","nodeType":"YulIdentifier","src":"6934:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7106:3:9","nodeType":"YulIdentifier","src":"7106:3:9"}],"functionName":{"name":"store_literal_in_memory_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe","nativeSrc":"7017:88:9","nodeType":"YulIdentifier","src":"7017:88:9"},"nativeSrc":"7017:93:9","nodeType":"YulFunctionCall","src":"7017:93:9"},"nativeSrc":"7017:93:9","nodeType":"YulExpressionStatement","src":"7017:93:9"},{"nativeSrc":"7119:19:9","nodeType":"YulAssignment","src":"7119:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"7130:3:9","nodeType":"YulIdentifier","src":"7130:3:9"},{"kind":"number","nativeSrc":"7135:2:9","nodeType":"YulLiteral","src":"7135:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7126:3:9","nodeType":"YulIdentifier","src":"7126:3:9"},"nativeSrc":"7126:12:9","nodeType":"YulFunctionCall","src":"7126:12:9"},"variableNames":[{"name":"end","nativeSrc":"7119:3:9","nodeType":"YulIdentifier","src":"7119:3:9"}]}]},"name":"abi_encode_t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe_to_t_string_memory_ptr_fromStack","nativeSrc":"6778:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6912:3:9","nodeType":"YulTypedName","src":"6912:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6920:3:9","nodeType":"YulTypedName","src":"6920:3:9","type":""}],"src":"6778:366:9"},{"body":{"nativeSrc":"7321:248:9","nodeType":"YulBlock","src":"7321:248:9","statements":[{"nativeSrc":"7331:26:9","nodeType":"YulAssignment","src":"7331:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"7343:9:9","nodeType":"YulIdentifier","src":"7343:9:9"},{"kind":"number","nativeSrc":"7354:2:9","nodeType":"YulLiteral","src":"7354:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7339:3:9","nodeType":"YulIdentifier","src":"7339:3:9"},"nativeSrc":"7339:18:9","nodeType":"YulFunctionCall","src":"7339:18:9"},"variableNames":[{"name":"tail","nativeSrc":"7331:4:9","nodeType":"YulIdentifier","src":"7331:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7378:9:9","nodeType":"YulIdentifier","src":"7378:9:9"},{"kind":"number","nativeSrc":"7389:1:9","nodeType":"YulLiteral","src":"7389:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7374:3:9","nodeType":"YulIdentifier","src":"7374:3:9"},"nativeSrc":"7374:17:9","nodeType":"YulFunctionCall","src":"7374:17:9"},{"arguments":[{"name":"tail","nativeSrc":"7397:4:9","nodeType":"YulIdentifier","src":"7397:4:9"},{"name":"headStart","nativeSrc":"7403:9:9","nodeType":"YulIdentifier","src":"7403:9:9"}],"functionName":{"name":"sub","nativeSrc":"7393:3:9","nodeType":"YulIdentifier","src":"7393:3:9"},"nativeSrc":"7393:20:9","nodeType":"YulFunctionCall","src":"7393:20:9"}],"functionName":{"name":"mstore","nativeSrc":"7367:6:9","nodeType":"YulIdentifier","src":"7367:6:9"},"nativeSrc":"7367:47:9","nodeType":"YulFunctionCall","src":"7367:47:9"},"nativeSrc":"7367:47:9","nodeType":"YulExpressionStatement","src":"7367:47:9"},{"nativeSrc":"7423:139:9","nodeType":"YulAssignment","src":"7423:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"7557:4:9","nodeType":"YulIdentifier","src":"7557:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe_to_t_string_memory_ptr_fromStack","nativeSrc":"7431:124:9","nodeType":"YulIdentifier","src":"7431:124:9"},"nativeSrc":"7431:131:9","nodeType":"YulFunctionCall","src":"7431:131:9"},"variableNames":[{"name":"tail","nativeSrc":"7423:4:9","nodeType":"YulIdentifier","src":"7423:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7150:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7301:9:9","nodeType":"YulTypedName","src":"7301:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7316:4:9","nodeType":"YulTypedName","src":"7316:4:9","type":""}],"src":"7150:419:9"},{"body":{"nativeSrc":"7681:66:9","nodeType":"YulBlock","src":"7681:66:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7703:6:9","nodeType":"YulIdentifier","src":"7703:6:9"},{"kind":"number","nativeSrc":"7711:1:9","nodeType":"YulLiteral","src":"7711:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7699:3:9","nodeType":"YulIdentifier","src":"7699:3:9"},"nativeSrc":"7699:14:9","nodeType":"YulFunctionCall","src":"7699:14:9"},{"hexValue":"496e73756666696369656e74206c6971756964697479","kind":"string","nativeSrc":"7715:24:9","nodeType":"YulLiteral","src":"7715:24:9","type":"","value":"Insufficient liquidity"}],"functionName":{"name":"mstore","nativeSrc":"7692:6:9","nodeType":"YulIdentifier","src":"7692:6:9"},"nativeSrc":"7692:48:9","nodeType":"YulFunctionCall","src":"7692:48:9"},"nativeSrc":"7692:48:9","nodeType":"YulExpressionStatement","src":"7692:48:9"}]},"name":"store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","nativeSrc":"7575:172:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7673:6:9","nodeType":"YulTypedName","src":"7673:6:9","type":""}],"src":"7575:172:9"},{"body":{"nativeSrc":"7899:220:9","nodeType":"YulBlock","src":"7899:220:9","statements":[{"nativeSrc":"7909:74:9","nodeType":"YulAssignment","src":"7909:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"7975:3:9","nodeType":"YulIdentifier","src":"7975:3:9"},{"kind":"number","nativeSrc":"7980:2:9","nodeType":"YulLiteral","src":"7980:2:9","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7916:58:9","nodeType":"YulIdentifier","src":"7916:58:9"},"nativeSrc":"7916:67:9","nodeType":"YulFunctionCall","src":"7916:67:9"},"variableNames":[{"name":"pos","nativeSrc":"7909:3:9","nodeType":"YulIdentifier","src":"7909:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8081:3:9","nodeType":"YulIdentifier","src":"8081:3:9"}],"functionName":{"name":"store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","nativeSrc":"7992:88:9","nodeType":"YulIdentifier","src":"7992:88:9"},"nativeSrc":"7992:93:9","nodeType":"YulFunctionCall","src":"7992:93:9"},"nativeSrc":"7992:93:9","nodeType":"YulExpressionStatement","src":"7992:93:9"},{"nativeSrc":"8094:19:9","nodeType":"YulAssignment","src":"8094:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"8105:3:9","nodeType":"YulIdentifier","src":"8105:3:9"},{"kind":"number","nativeSrc":"8110:2:9","nodeType":"YulLiteral","src":"8110:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8101:3:9","nodeType":"YulIdentifier","src":"8101:3:9"},"nativeSrc":"8101:12:9","nodeType":"YulFunctionCall","src":"8101:12:9"},"variableNames":[{"name":"end","nativeSrc":"8094:3:9","nodeType":"YulIdentifier","src":"8094:3:9"}]}]},"name":"abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack","nativeSrc":"7753:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7887:3:9","nodeType":"YulTypedName","src":"7887:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7895:3:9","nodeType":"YulTypedName","src":"7895:3:9","type":""}],"src":"7753:366:9"},{"body":{"nativeSrc":"8296:248:9","nodeType":"YulBlock","src":"8296:248:9","statements":[{"nativeSrc":"8306:26:9","nodeType":"YulAssignment","src":"8306:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"8318:9:9","nodeType":"YulIdentifier","src":"8318:9:9"},{"kind":"number","nativeSrc":"8329:2:9","nodeType":"YulLiteral","src":"8329:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8314:3:9","nodeType":"YulIdentifier","src":"8314:3:9"},"nativeSrc":"8314:18:9","nodeType":"YulFunctionCall","src":"8314:18:9"},"variableNames":[{"name":"tail","nativeSrc":"8306:4:9","nodeType":"YulIdentifier","src":"8306:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8353:9:9","nodeType":"YulIdentifier","src":"8353:9:9"},{"kind":"number","nativeSrc":"8364:1:9","nodeType":"YulLiteral","src":"8364:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8349:3:9","nodeType":"YulIdentifier","src":"8349:3:9"},"nativeSrc":"8349:17:9","nodeType":"YulFunctionCall","src":"8349:17:9"},{"arguments":[{"name":"tail","nativeSrc":"8372:4:9","nodeType":"YulIdentifier","src":"8372:4:9"},{"name":"headStart","nativeSrc":"8378:9:9","nodeType":"YulIdentifier","src":"8378:9:9"}],"functionName":{"name":"sub","nativeSrc":"8368:3:9","nodeType":"YulIdentifier","src":"8368:3:9"},"nativeSrc":"8368:20:9","nodeType":"YulFunctionCall","src":"8368:20:9"}],"functionName":{"name":"mstore","nativeSrc":"8342:6:9","nodeType":"YulIdentifier","src":"8342:6:9"},"nativeSrc":"8342:47:9","nodeType":"YulFunctionCall","src":"8342:47:9"},"nativeSrc":"8342:47:9","nodeType":"YulExpressionStatement","src":"8342:47:9"},{"nativeSrc":"8398:139:9","nodeType":"YulAssignment","src":"8398:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"8532:4:9","nodeType":"YulIdentifier","src":"8532:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack","nativeSrc":"8406:124:9","nodeType":"YulIdentifier","src":"8406:124:9"},"nativeSrc":"8406:131:9","nodeType":"YulFunctionCall","src":"8406:131:9"},"variableNames":[{"name":"tail","nativeSrc":"8398:4:9","nodeType":"YulIdentifier","src":"8398:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8125:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8276:9:9","nodeType":"YulTypedName","src":"8276:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8291:4:9","nodeType":"YulTypedName","src":"8291:4:9","type":""}],"src":"8125:419:9"},{"body":{"nativeSrc":"8704:288:9","nodeType":"YulBlock","src":"8704:288:9","statements":[{"nativeSrc":"8714:26:9","nodeType":"YulAssignment","src":"8714:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"8726:9:9","nodeType":"YulIdentifier","src":"8726:9:9"},{"kind":"number","nativeSrc":"8737:2:9","nodeType":"YulLiteral","src":"8737:2:9","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8722:3:9","nodeType":"YulIdentifier","src":"8722:3:9"},"nativeSrc":"8722:18:9","nodeType":"YulFunctionCall","src":"8722:18:9"},"variableNames":[{"name":"tail","nativeSrc":"8714:4:9","nodeType":"YulIdentifier","src":"8714:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8794:6:9","nodeType":"YulIdentifier","src":"8794:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"8807:9:9","nodeType":"YulIdentifier","src":"8807:9:9"},{"kind":"number","nativeSrc":"8818:1:9","nodeType":"YulLiteral","src":"8818:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8803:3:9","nodeType":"YulIdentifier","src":"8803:3:9"},"nativeSrc":"8803:17:9","nodeType":"YulFunctionCall","src":"8803:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8750:43:9","nodeType":"YulIdentifier","src":"8750:43:9"},"nativeSrc":"8750:71:9","nodeType":"YulFunctionCall","src":"8750:71:9"},"nativeSrc":"8750:71:9","nodeType":"YulExpressionStatement","src":"8750:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8875:6:9","nodeType":"YulIdentifier","src":"8875:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"8888:9:9","nodeType":"YulIdentifier","src":"8888:9:9"},{"kind":"number","nativeSrc":"8899:2:9","nodeType":"YulLiteral","src":"8899:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8884:3:9","nodeType":"YulIdentifier","src":"8884:3:9"},"nativeSrc":"8884:18:9","nodeType":"YulFunctionCall","src":"8884:18:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8831:43:9","nodeType":"YulIdentifier","src":"8831:43:9"},"nativeSrc":"8831:72:9","nodeType":"YulFunctionCall","src":"8831:72:9"},"nativeSrc":"8831:72:9","nodeType":"YulExpressionStatement","src":"8831:72:9"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8957:6:9","nodeType":"YulIdentifier","src":"8957:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"8970:9:9","nodeType":"YulIdentifier","src":"8970:9:9"},{"kind":"number","nativeSrc":"8981:2:9","nodeType":"YulLiteral","src":"8981:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8966:3:9","nodeType":"YulIdentifier","src":"8966:3:9"},"nativeSrc":"8966:18:9","nodeType":"YulFunctionCall","src":"8966:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8913:43:9","nodeType":"YulIdentifier","src":"8913:43:9"},"nativeSrc":"8913:72:9","nodeType":"YulFunctionCall","src":"8913:72:9"},"nativeSrc":"8913:72:9","nodeType":"YulExpressionStatement","src":"8913:72:9"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"8550:442:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8660:9:9","nodeType":"YulTypedName","src":"8660:9:9","type":""},{"name":"value2","nativeSrc":"8672:6:9","nodeType":"YulTypedName","src":"8672:6:9","type":""},{"name":"value1","nativeSrc":"8680:6:9","nodeType":"YulTypedName","src":"8680:6:9","type":""},{"name":"value0","nativeSrc":"8688:6:9","nodeType":"YulTypedName","src":"8688:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8699:4:9","nodeType":"YulTypedName","src":"8699:4:9","type":""}],"src":"8550:442:9"},{"body":{"nativeSrc":"9040:48:9","nodeType":"YulBlock","src":"9040:48:9","statements":[{"nativeSrc":"9050:32:9","nodeType":"YulAssignment","src":"9050:32:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9075:5:9","nodeType":"YulIdentifier","src":"9075:5:9"}],"functionName":{"name":"iszero","nativeSrc":"9068:6:9","nodeType":"YulIdentifier","src":"9068:6:9"},"nativeSrc":"9068:13:9","nodeType":"YulFunctionCall","src":"9068:13:9"}],"functionName":{"name":"iszero","nativeSrc":"9061:6:9","nodeType":"YulIdentifier","src":"9061:6:9"},"nativeSrc":"9061:21:9","nodeType":"YulFunctionCall","src":"9061:21:9"},"variableNames":[{"name":"cleaned","nativeSrc":"9050:7:9","nodeType":"YulIdentifier","src":"9050:7:9"}]}]},"name":"cleanup_t_bool","nativeSrc":"8998:90:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9022:5:9","nodeType":"YulTypedName","src":"9022:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9032:7:9","nodeType":"YulTypedName","src":"9032:7:9","type":""}],"src":"8998:90:9"},{"body":{"nativeSrc":"9134:76:9","nodeType":"YulBlock","src":"9134:76:9","statements":[{"body":{"nativeSrc":"9188:16:9","nodeType":"YulBlock","src":"9188:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9197:1:9","nodeType":"YulLiteral","src":"9197:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"9200:1:9","nodeType":"YulLiteral","src":"9200:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9190:6:9","nodeType":"YulIdentifier","src":"9190:6:9"},"nativeSrc":"9190:12:9","nodeType":"YulFunctionCall","src":"9190:12:9"},"nativeSrc":"9190:12:9","nodeType":"YulExpressionStatement","src":"9190:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9157:5:9","nodeType":"YulIdentifier","src":"9157:5:9"},{"arguments":[{"name":"value","nativeSrc":"9179:5:9","nodeType":"YulIdentifier","src":"9179:5:9"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"9164:14:9","nodeType":"YulIdentifier","src":"9164:14:9"},"nativeSrc":"9164:21:9","nodeType":"YulFunctionCall","src":"9164:21:9"}],"functionName":{"name":"eq","nativeSrc":"9154:2:9","nodeType":"YulIdentifier","src":"9154:2:9"},"nativeSrc":"9154:32:9","nodeType":"YulFunctionCall","src":"9154:32:9"}],"functionName":{"name":"iszero","nativeSrc":"9147:6:9","nodeType":"YulIdentifier","src":"9147:6:9"},"nativeSrc":"9147:40:9","nodeType":"YulFunctionCall","src":"9147:40:9"},"nativeSrc":"9144:60:9","nodeType":"YulIf","src":"9144:60:9"}]},"name":"validator_revert_t_bool","nativeSrc":"9094:116:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9127:5:9","nodeType":"YulTypedName","src":"9127:5:9","type":""}],"src":"9094:116:9"},{"body":{"nativeSrc":"9276:77:9","nodeType":"YulBlock","src":"9276:77:9","statements":[{"nativeSrc":"9286:22:9","nodeType":"YulAssignment","src":"9286:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"9301:6:9","nodeType":"YulIdentifier","src":"9301:6:9"}],"functionName":{"name":"mload","nativeSrc":"9295:5:9","nodeType":"YulIdentifier","src":"9295:5:9"},"nativeSrc":"9295:13:9","nodeType":"YulFunctionCall","src":"9295:13:9"},"variableNames":[{"name":"value","nativeSrc":"9286:5:9","nodeType":"YulIdentifier","src":"9286:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9341:5:9","nodeType":"YulIdentifier","src":"9341:5:9"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"9317:23:9","nodeType":"YulIdentifier","src":"9317:23:9"},"nativeSrc":"9317:30:9","nodeType":"YulFunctionCall","src":"9317:30:9"},"nativeSrc":"9317:30:9","nodeType":"YulExpressionStatement","src":"9317:30:9"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"9216:137:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9254:6:9","nodeType":"YulTypedName","src":"9254:6:9","type":""},{"name":"end","nativeSrc":"9262:3:9","nodeType":"YulTypedName","src":"9262:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9270:5:9","nodeType":"YulTypedName","src":"9270:5:9","type":""}],"src":"9216:137:9"},{"body":{"nativeSrc":"9433:271:9","nodeType":"YulBlock","src":"9433:271:9","statements":[{"body":{"nativeSrc":"9479:83:9","nodeType":"YulBlock","src":"9479:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9481:77:9","nodeType":"YulIdentifier","src":"9481:77:9"},"nativeSrc":"9481:79:9","nodeType":"YulFunctionCall","src":"9481:79:9"},"nativeSrc":"9481:79:9","nodeType":"YulExpressionStatement","src":"9481:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9454:7:9","nodeType":"YulIdentifier","src":"9454:7:9"},{"name":"headStart","nativeSrc":"9463:9:9","nodeType":"YulIdentifier","src":"9463:9:9"}],"functionName":{"name":"sub","nativeSrc":"9450:3:9","nodeType":"YulIdentifier","src":"9450:3:9"},"nativeSrc":"9450:23:9","nodeType":"YulFunctionCall","src":"9450:23:9"},{"kind":"number","nativeSrc":"9475:2:9","nodeType":"YulLiteral","src":"9475:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9446:3:9","nodeType":"YulIdentifier","src":"9446:3:9"},"nativeSrc":"9446:32:9","nodeType":"YulFunctionCall","src":"9446:32:9"},"nativeSrc":"9443:119:9","nodeType":"YulIf","src":"9443:119:9"},{"nativeSrc":"9572:125:9","nodeType":"YulBlock","src":"9572:125:9","statements":[{"nativeSrc":"9587:15:9","nodeType":"YulVariableDeclaration","src":"9587:15:9","value":{"kind":"number","nativeSrc":"9601:1:9","nodeType":"YulLiteral","src":"9601:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9591:6:9","nodeType":"YulTypedName","src":"9591:6:9","type":""}]},{"nativeSrc":"9616:71:9","nodeType":"YulAssignment","src":"9616:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9659:9:9","nodeType":"YulIdentifier","src":"9659:9:9"},{"name":"offset","nativeSrc":"9670:6:9","nodeType":"YulIdentifier","src":"9670:6:9"}],"functionName":{"name":"add","nativeSrc":"9655:3:9","nodeType":"YulIdentifier","src":"9655:3:9"},"nativeSrc":"9655:22:9","nodeType":"YulFunctionCall","src":"9655:22:9"},{"name":"dataEnd","nativeSrc":"9679:7:9","nodeType":"YulIdentifier","src":"9679:7:9"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"9626:28:9","nodeType":"YulIdentifier","src":"9626:28:9"},"nativeSrc":"9626:61:9","nodeType":"YulFunctionCall","src":"9626:61:9"},"variableNames":[{"name":"value0","nativeSrc":"9616:6:9","nodeType":"YulIdentifier","src":"9616:6:9"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"9359:345:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9403:9:9","nodeType":"YulTypedName","src":"9403:9:9","type":""},{"name":"dataEnd","nativeSrc":"9414:7:9","nodeType":"YulTypedName","src":"9414:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9426:6:9","nodeType":"YulTypedName","src":"9426:6:9","type":""}],"src":"9359:345:9"},{"body":{"nativeSrc":"9836:206:9","nodeType":"YulBlock","src":"9836:206:9","statements":[{"nativeSrc":"9846:26:9","nodeType":"YulAssignment","src":"9846:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"9858:9:9","nodeType":"YulIdentifier","src":"9858:9:9"},{"kind":"number","nativeSrc":"9869:2:9","nodeType":"YulLiteral","src":"9869:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9854:3:9","nodeType":"YulIdentifier","src":"9854:3:9"},"nativeSrc":"9854:18:9","nodeType":"YulFunctionCall","src":"9854:18:9"},"variableNames":[{"name":"tail","nativeSrc":"9846:4:9","nodeType":"YulIdentifier","src":"9846:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9926:6:9","nodeType":"YulIdentifier","src":"9926:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"9939:9:9","nodeType":"YulIdentifier","src":"9939:9:9"},{"kind":"number","nativeSrc":"9950:1:9","nodeType":"YulLiteral","src":"9950:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9935:3:9","nodeType":"YulIdentifier","src":"9935:3:9"},"nativeSrc":"9935:17:9","nodeType":"YulFunctionCall","src":"9935:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9882:43:9","nodeType":"YulIdentifier","src":"9882:43:9"},"nativeSrc":"9882:71:9","nodeType":"YulFunctionCall","src":"9882:71:9"},"nativeSrc":"9882:71:9","nodeType":"YulExpressionStatement","src":"9882:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10007:6:9","nodeType":"YulIdentifier","src":"10007:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"10020:9:9","nodeType":"YulIdentifier","src":"10020:9:9"},{"kind":"number","nativeSrc":"10031:2:9","nodeType":"YulLiteral","src":"10031:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10016:3:9","nodeType":"YulIdentifier","src":"10016:3:9"},"nativeSrc":"10016:18:9","nodeType":"YulFunctionCall","src":"10016:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9963:43:9","nodeType":"YulIdentifier","src":"9963:43:9"},"nativeSrc":"9963:72:9","nodeType":"YulFunctionCall","src":"9963:72:9"},"nativeSrc":"9963:72:9","nodeType":"YulExpressionStatement","src":"9963:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9710:332:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9800:9:9","nodeType":"YulTypedName","src":"9800:9:9","type":""},{"name":"value1","nativeSrc":"9812:6:9","nodeType":"YulTypedName","src":"9812:6:9","type":""},{"name":"value0","nativeSrc":"9820:6:9","nodeType":"YulTypedName","src":"9820:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9831:4:9","nodeType":"YulTypedName","src":"9831:4:9","type":""}],"src":"9710:332:9"},{"body":{"nativeSrc":"10174:206:9","nodeType":"YulBlock","src":"10174:206:9","statements":[{"nativeSrc":"10184:26:9","nodeType":"YulAssignment","src":"10184:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"10196:9:9","nodeType":"YulIdentifier","src":"10196:9:9"},{"kind":"number","nativeSrc":"10207:2:9","nodeType":"YulLiteral","src":"10207:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10192:3:9","nodeType":"YulIdentifier","src":"10192:3:9"},"nativeSrc":"10192:18:9","nodeType":"YulFunctionCall","src":"10192:18:9"},"variableNames":[{"name":"tail","nativeSrc":"10184:4:9","nodeType":"YulIdentifier","src":"10184:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10264:6:9","nodeType":"YulIdentifier","src":"10264:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"10277:9:9","nodeType":"YulIdentifier","src":"10277:9:9"},{"kind":"number","nativeSrc":"10288:1:9","nodeType":"YulLiteral","src":"10288:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10273:3:9","nodeType":"YulIdentifier","src":"10273:3:9"},"nativeSrc":"10273:17:9","nodeType":"YulFunctionCall","src":"10273:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10220:43:9","nodeType":"YulIdentifier","src":"10220:43:9"},"nativeSrc":"10220:71:9","nodeType":"YulFunctionCall","src":"10220:71:9"},"nativeSrc":"10220:71:9","nodeType":"YulExpressionStatement","src":"10220:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10345:6:9","nodeType":"YulIdentifier","src":"10345:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"10358:9:9","nodeType":"YulIdentifier","src":"10358:9:9"},{"kind":"number","nativeSrc":"10369:2:9","nodeType":"YulLiteral","src":"10369:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10354:3:9","nodeType":"YulIdentifier","src":"10354:3:9"},"nativeSrc":"10354:18:9","nodeType":"YulFunctionCall","src":"10354:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10301:43:9","nodeType":"YulIdentifier","src":"10301:43:9"},"nativeSrc":"10301:72:9","nodeType":"YulFunctionCall","src":"10301:72:9"},"nativeSrc":"10301:72:9","nodeType":"YulExpressionStatement","src":"10301:72:9"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10048:332:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10138:9:9","nodeType":"YulTypedName","src":"10138:9:9","type":""},{"name":"value1","nativeSrc":"10150:6:9","nodeType":"YulTypedName","src":"10150:6:9","type":""},{"name":"value0","nativeSrc":"10158:6:9","nodeType":"YulTypedName","src":"10158:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10169:4:9","nodeType":"YulTypedName","src":"10169:4:9","type":""}],"src":"10048:332:9"},{"body":{"nativeSrc":"10492:63:9","nodeType":"YulBlock","src":"10492:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10514:6:9","nodeType":"YulIdentifier","src":"10514:6:9"},{"kind":"number","nativeSrc":"10522:1:9","nodeType":"YulLiteral","src":"10522:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10510:3:9","nodeType":"YulIdentifier","src":"10510:3:9"},"nativeSrc":"10510:14:9","nodeType":"YulFunctionCall","src":"10510:14:9"},{"hexValue":"416d6f756e7473206d757374206265203e2030","kind":"string","nativeSrc":"10526:21:9","nodeType":"YulLiteral","src":"10526:21:9","type":"","value":"Amounts must be > 0"}],"functionName":{"name":"mstore","nativeSrc":"10503:6:9","nodeType":"YulIdentifier","src":"10503:6:9"},"nativeSrc":"10503:45:9","nodeType":"YulFunctionCall","src":"10503:45:9"},"nativeSrc":"10503:45:9","nodeType":"YulExpressionStatement","src":"10503:45:9"}]},"name":"store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0","nativeSrc":"10386:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10484:6:9","nodeType":"YulTypedName","src":"10484:6:9","type":""}],"src":"10386:169:9"},{"body":{"nativeSrc":"10707:220:9","nodeType":"YulBlock","src":"10707:220:9","statements":[{"nativeSrc":"10717:74:9","nodeType":"YulAssignment","src":"10717:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"10783:3:9","nodeType":"YulIdentifier","src":"10783:3:9"},{"kind":"number","nativeSrc":"10788:2:9","nodeType":"YulLiteral","src":"10788:2:9","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10724:58:9","nodeType":"YulIdentifier","src":"10724:58:9"},"nativeSrc":"10724:67:9","nodeType":"YulFunctionCall","src":"10724:67:9"},"variableNames":[{"name":"pos","nativeSrc":"10717:3:9","nodeType":"YulIdentifier","src":"10717:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10889:3:9","nodeType":"YulIdentifier","src":"10889:3:9"}],"functionName":{"name":"store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0","nativeSrc":"10800:88:9","nodeType":"YulIdentifier","src":"10800:88:9"},"nativeSrc":"10800:93:9","nodeType":"YulFunctionCall","src":"10800:93:9"},"nativeSrc":"10800:93:9","nodeType":"YulExpressionStatement","src":"10800:93:9"},{"nativeSrc":"10902:19:9","nodeType":"YulAssignment","src":"10902:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"10913:3:9","nodeType":"YulIdentifier","src":"10913:3:9"},{"kind":"number","nativeSrc":"10918:2:9","nodeType":"YulLiteral","src":"10918:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10909:3:9","nodeType":"YulIdentifier","src":"10909:3:9"},"nativeSrc":"10909:12:9","nodeType":"YulFunctionCall","src":"10909:12:9"},"variableNames":[{"name":"end","nativeSrc":"10902:3:9","nodeType":"YulIdentifier","src":"10902:3:9"}]}]},"name":"abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack","nativeSrc":"10561:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10695:3:9","nodeType":"YulTypedName","src":"10695:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10703:3:9","nodeType":"YulTypedName","src":"10703:3:9","type":""}],"src":"10561:366:9"},{"body":{"nativeSrc":"11104:248:9","nodeType":"YulBlock","src":"11104:248:9","statements":[{"nativeSrc":"11114:26:9","nodeType":"YulAssignment","src":"11114:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"11126:9:9","nodeType":"YulIdentifier","src":"11126:9:9"},{"kind":"number","nativeSrc":"11137:2:9","nodeType":"YulLiteral","src":"11137:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11122:3:9","nodeType":"YulIdentifier","src":"11122:3:9"},"nativeSrc":"11122:18:9","nodeType":"YulFunctionCall","src":"11122:18:9"},"variableNames":[{"name":"tail","nativeSrc":"11114:4:9","nodeType":"YulIdentifier","src":"11114:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11161:9:9","nodeType":"YulIdentifier","src":"11161:9:9"},{"kind":"number","nativeSrc":"11172:1:9","nodeType":"YulLiteral","src":"11172:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11157:3:9","nodeType":"YulIdentifier","src":"11157:3:9"},"nativeSrc":"11157:17:9","nodeType":"YulFunctionCall","src":"11157:17:9"},{"arguments":[{"name":"tail","nativeSrc":"11180:4:9","nodeType":"YulIdentifier","src":"11180:4:9"},{"name":"headStart","nativeSrc":"11186:9:9","nodeType":"YulIdentifier","src":"11186:9:9"}],"functionName":{"name":"sub","nativeSrc":"11176:3:9","nodeType":"YulIdentifier","src":"11176:3:9"},"nativeSrc":"11176:20:9","nodeType":"YulFunctionCall","src":"11176:20:9"}],"functionName":{"name":"mstore","nativeSrc":"11150:6:9","nodeType":"YulIdentifier","src":"11150:6:9"},"nativeSrc":"11150:47:9","nodeType":"YulFunctionCall","src":"11150:47:9"},"nativeSrc":"11150:47:9","nodeType":"YulExpressionStatement","src":"11150:47:9"},{"nativeSrc":"11206:139:9","nodeType":"YulAssignment","src":"11206:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"11340:4:9","nodeType":"YulIdentifier","src":"11340:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack","nativeSrc":"11214:124:9","nodeType":"YulIdentifier","src":"11214:124:9"},"nativeSrc":"11214:131:9","nodeType":"YulFunctionCall","src":"11214:131:9"},"variableNames":[{"name":"tail","nativeSrc":"11206:4:9","nodeType":"YulIdentifier","src":"11206:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10933:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11084:9:9","nodeType":"YulTypedName","src":"11084:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11099:4:9","nodeType":"YulTypedName","src":"11099:4:9","type":""}],"src":"10933:419:9"},{"body":{"nativeSrc":"11464:74:9","nodeType":"YulBlock","src":"11464:74:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11486:6:9","nodeType":"YulIdentifier","src":"11486:6:9"},{"kind":"number","nativeSrc":"11494:1:9","nodeType":"YulLiteral","src":"11494:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11482:3:9","nodeType":"YulIdentifier","src":"11482:3:9"},"nativeSrc":"11482:14:9","nodeType":"YulFunctionCall","src":"11482:14:9"},{"hexValue":"4e6f7420656e6f756768206c697175696469747920617661696c61626c65","kind":"string","nativeSrc":"11498:32:9","nodeType":"YulLiteral","src":"11498:32:9","type":"","value":"Not enough liquidity available"}],"functionName":{"name":"mstore","nativeSrc":"11475:6:9","nodeType":"YulIdentifier","src":"11475:6:9"},"nativeSrc":"11475:56:9","nodeType":"YulFunctionCall","src":"11475:56:9"},"nativeSrc":"11475:56:9","nodeType":"YulExpressionStatement","src":"11475:56:9"}]},"name":"store_literal_in_memory_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3","nativeSrc":"11358:180:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11456:6:9","nodeType":"YulTypedName","src":"11456:6:9","type":""}],"src":"11358:180:9"},{"body":{"nativeSrc":"11690:220:9","nodeType":"YulBlock","src":"11690:220:9","statements":[{"nativeSrc":"11700:74:9","nodeType":"YulAssignment","src":"11700:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"11766:3:9","nodeType":"YulIdentifier","src":"11766:3:9"},{"kind":"number","nativeSrc":"11771:2:9","nodeType":"YulLiteral","src":"11771:2:9","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11707:58:9","nodeType":"YulIdentifier","src":"11707:58:9"},"nativeSrc":"11707:67:9","nodeType":"YulFunctionCall","src":"11707:67:9"},"variableNames":[{"name":"pos","nativeSrc":"11700:3:9","nodeType":"YulIdentifier","src":"11700:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11872:3:9","nodeType":"YulIdentifier","src":"11872:3:9"}],"functionName":{"name":"store_literal_in_memory_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3","nativeSrc":"11783:88:9","nodeType":"YulIdentifier","src":"11783:88:9"},"nativeSrc":"11783:93:9","nodeType":"YulFunctionCall","src":"11783:93:9"},"nativeSrc":"11783:93:9","nodeType":"YulExpressionStatement","src":"11783:93:9"},{"nativeSrc":"11885:19:9","nodeType":"YulAssignment","src":"11885:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"11896:3:9","nodeType":"YulIdentifier","src":"11896:3:9"},{"kind":"number","nativeSrc":"11901:2:9","nodeType":"YulLiteral","src":"11901:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11892:3:9","nodeType":"YulIdentifier","src":"11892:3:9"},"nativeSrc":"11892:12:9","nodeType":"YulFunctionCall","src":"11892:12:9"},"variableNames":[{"name":"end","nativeSrc":"11885:3:9","nodeType":"YulIdentifier","src":"11885:3:9"}]}]},"name":"abi_encode_t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3_to_t_string_memory_ptr_fromStack","nativeSrc":"11544:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11678:3:9","nodeType":"YulTypedName","src":"11678:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11686:3:9","nodeType":"YulTypedName","src":"11686:3:9","type":""}],"src":"11544:366:9"},{"body":{"nativeSrc":"12087:248:9","nodeType":"YulBlock","src":"12087:248:9","statements":[{"nativeSrc":"12097:26:9","nodeType":"YulAssignment","src":"12097:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"12109:9:9","nodeType":"YulIdentifier","src":"12109:9:9"},{"kind":"number","nativeSrc":"12120:2:9","nodeType":"YulLiteral","src":"12120:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12105:3:9","nodeType":"YulIdentifier","src":"12105:3:9"},"nativeSrc":"12105:18:9","nodeType":"YulFunctionCall","src":"12105:18:9"},"variableNames":[{"name":"tail","nativeSrc":"12097:4:9","nodeType":"YulIdentifier","src":"12097:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12144:9:9","nodeType":"YulIdentifier","src":"12144:9:9"},{"kind":"number","nativeSrc":"12155:1:9","nodeType":"YulLiteral","src":"12155:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12140:3:9","nodeType":"YulIdentifier","src":"12140:3:9"},"nativeSrc":"12140:17:9","nodeType":"YulFunctionCall","src":"12140:17:9"},{"arguments":[{"name":"tail","nativeSrc":"12163:4:9","nodeType":"YulIdentifier","src":"12163:4:9"},{"name":"headStart","nativeSrc":"12169:9:9","nodeType":"YulIdentifier","src":"12169:9:9"}],"functionName":{"name":"sub","nativeSrc":"12159:3:9","nodeType":"YulIdentifier","src":"12159:3:9"},"nativeSrc":"12159:20:9","nodeType":"YulFunctionCall","src":"12159:20:9"}],"functionName":{"name":"mstore","nativeSrc":"12133:6:9","nodeType":"YulIdentifier","src":"12133:6:9"},"nativeSrc":"12133:47:9","nodeType":"YulFunctionCall","src":"12133:47:9"},"nativeSrc":"12133:47:9","nodeType":"YulExpressionStatement","src":"12133:47:9"},{"nativeSrc":"12189:139:9","nodeType":"YulAssignment","src":"12189:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"12323:4:9","nodeType":"YulIdentifier","src":"12323:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3_to_t_string_memory_ptr_fromStack","nativeSrc":"12197:124:9","nodeType":"YulIdentifier","src":"12197:124:9"},"nativeSrc":"12197:131:9","nodeType":"YulFunctionCall","src":"12197:131:9"},"variableNames":[{"name":"tail","nativeSrc":"12189:4:9","nodeType":"YulIdentifier","src":"12189:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11916:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12067:9:9","nodeType":"YulTypedName","src":"12067:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12082:4:9","nodeType":"YulTypedName","src":"12082:4:9","type":""}],"src":"11916:419:9"},{"body":{"nativeSrc":"12447:65:9","nodeType":"YulBlock","src":"12447:65:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12469:6:9","nodeType":"YulIdentifier","src":"12469:6:9"},{"kind":"number","nativeSrc":"12477:1:9","nodeType":"YulLiteral","src":"12477:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12465:3:9","nodeType":"YulIdentifier","src":"12465:3:9"},"nativeSrc":"12465:14:9","nodeType":"YulFunctionCall","src":"12465:14:9"},{"hexValue":"496e73756666696369656e74207265736572766573","kind":"string","nativeSrc":"12481:23:9","nodeType":"YulLiteral","src":"12481:23:9","type":"","value":"Insufficient reserves"}],"functionName":{"name":"mstore","nativeSrc":"12458:6:9","nodeType":"YulIdentifier","src":"12458:6:9"},"nativeSrc":"12458:47:9","nodeType":"YulFunctionCall","src":"12458:47:9"},"nativeSrc":"12458:47:9","nodeType":"YulExpressionStatement","src":"12458:47:9"}]},"name":"store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674","nativeSrc":"12341:171:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12439:6:9","nodeType":"YulTypedName","src":"12439:6:9","type":""}],"src":"12341:171:9"},{"body":{"nativeSrc":"12664:220:9","nodeType":"YulBlock","src":"12664:220:9","statements":[{"nativeSrc":"12674:74:9","nodeType":"YulAssignment","src":"12674:74:9","value":{"arguments":[{"name":"pos","nativeSrc":"12740:3:9","nodeType":"YulIdentifier","src":"12740:3:9"},{"kind":"number","nativeSrc":"12745:2:9","nodeType":"YulLiteral","src":"12745:2:9","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12681:58:9","nodeType":"YulIdentifier","src":"12681:58:9"},"nativeSrc":"12681:67:9","nodeType":"YulFunctionCall","src":"12681:67:9"},"variableNames":[{"name":"pos","nativeSrc":"12674:3:9","nodeType":"YulIdentifier","src":"12674:3:9"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12846:3:9","nodeType":"YulIdentifier","src":"12846:3:9"}],"functionName":{"name":"store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674","nativeSrc":"12757:88:9","nodeType":"YulIdentifier","src":"12757:88:9"},"nativeSrc":"12757:93:9","nodeType":"YulFunctionCall","src":"12757:93:9"},"nativeSrc":"12757:93:9","nodeType":"YulExpressionStatement","src":"12757:93:9"},{"nativeSrc":"12859:19:9","nodeType":"YulAssignment","src":"12859:19:9","value":{"arguments":[{"name":"pos","nativeSrc":"12870:3:9","nodeType":"YulIdentifier","src":"12870:3:9"},{"kind":"number","nativeSrc":"12875:2:9","nodeType":"YulLiteral","src":"12875:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12866:3:9","nodeType":"YulIdentifier","src":"12866:3:9"},"nativeSrc":"12866:12:9","nodeType":"YulFunctionCall","src":"12866:12:9"},"variableNames":[{"name":"end","nativeSrc":"12859:3:9","nodeType":"YulIdentifier","src":"12859:3:9"}]}]},"name":"abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack","nativeSrc":"12518:366:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12652:3:9","nodeType":"YulTypedName","src":"12652:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12660:3:9","nodeType":"YulTypedName","src":"12660:3:9","type":""}],"src":"12518:366:9"},{"body":{"nativeSrc":"13061:248:9","nodeType":"YulBlock","src":"13061:248:9","statements":[{"nativeSrc":"13071:26:9","nodeType":"YulAssignment","src":"13071:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"13083:9:9","nodeType":"YulIdentifier","src":"13083:9:9"},{"kind":"number","nativeSrc":"13094:2:9","nodeType":"YulLiteral","src":"13094:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13079:3:9","nodeType":"YulIdentifier","src":"13079:3:9"},"nativeSrc":"13079:18:9","nodeType":"YulFunctionCall","src":"13079:18:9"},"variableNames":[{"name":"tail","nativeSrc":"13071:4:9","nodeType":"YulIdentifier","src":"13071:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13118:9:9","nodeType":"YulIdentifier","src":"13118:9:9"},{"kind":"number","nativeSrc":"13129:1:9","nodeType":"YulLiteral","src":"13129:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13114:3:9","nodeType":"YulIdentifier","src":"13114:3:9"},"nativeSrc":"13114:17:9","nodeType":"YulFunctionCall","src":"13114:17:9"},{"arguments":[{"name":"tail","nativeSrc":"13137:4:9","nodeType":"YulIdentifier","src":"13137:4:9"},{"name":"headStart","nativeSrc":"13143:9:9","nodeType":"YulIdentifier","src":"13143:9:9"}],"functionName":{"name":"sub","nativeSrc":"13133:3:9","nodeType":"YulIdentifier","src":"13133:3:9"},"nativeSrc":"13133:20:9","nodeType":"YulFunctionCall","src":"13133:20:9"}],"functionName":{"name":"mstore","nativeSrc":"13107:6:9","nodeType":"YulIdentifier","src":"13107:6:9"},"nativeSrc":"13107:47:9","nodeType":"YulFunctionCall","src":"13107:47:9"},"nativeSrc":"13107:47:9","nodeType":"YulExpressionStatement","src":"13107:47:9"},{"nativeSrc":"13163:139:9","nodeType":"YulAssignment","src":"13163:139:9","value":{"arguments":[{"name":"tail","nativeSrc":"13297:4:9","nodeType":"YulIdentifier","src":"13297:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack","nativeSrc":"13171:124:9","nodeType":"YulIdentifier","src":"13171:124:9"},"nativeSrc":"13171:131:9","nodeType":"YulFunctionCall","src":"13171:131:9"},"variableNames":[{"name":"tail","nativeSrc":"13163:4:9","nodeType":"YulIdentifier","src":"13163:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12890:419:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13041:9:9","nodeType":"YulTypedName","src":"13041:9:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13056:4:9","nodeType":"YulTypedName","src":"13056:4:9","type":""}],"src":"12890:419:9"},{"body":{"nativeSrc":"13359:147:9","nodeType":"YulBlock","src":"13359:147:9","statements":[{"nativeSrc":"13369:25:9","nodeType":"YulAssignment","src":"13369:25:9","value":{"arguments":[{"name":"x","nativeSrc":"13392:1:9","nodeType":"YulIdentifier","src":"13392:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13374:17:9","nodeType":"YulIdentifier","src":"13374:17:9"},"nativeSrc":"13374:20:9","nodeType":"YulFunctionCall","src":"13374:20:9"},"variableNames":[{"name":"x","nativeSrc":"13369:1:9","nodeType":"YulIdentifier","src":"13369:1:9"}]},{"nativeSrc":"13403:25:9","nodeType":"YulAssignment","src":"13403:25:9","value":{"arguments":[{"name":"y","nativeSrc":"13426:1:9","nodeType":"YulIdentifier","src":"13426:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13408:17:9","nodeType":"YulIdentifier","src":"13408:17:9"},"nativeSrc":"13408:20:9","nodeType":"YulFunctionCall","src":"13408:20:9"},"variableNames":[{"name":"y","nativeSrc":"13403:1:9","nodeType":"YulIdentifier","src":"13403:1:9"}]},{"nativeSrc":"13437:16:9","nodeType":"YulAssignment","src":"13437:16:9","value":{"arguments":[{"name":"x","nativeSrc":"13448:1:9","nodeType":"YulIdentifier","src":"13448:1:9"},{"name":"y","nativeSrc":"13451:1:9","nodeType":"YulIdentifier","src":"13451:1:9"}],"functionName":{"name":"add","nativeSrc":"13444:3:9","nodeType":"YulIdentifier","src":"13444:3:9"},"nativeSrc":"13444:9:9","nodeType":"YulFunctionCall","src":"13444:9:9"},"variableNames":[{"name":"sum","nativeSrc":"13437:3:9","nodeType":"YulIdentifier","src":"13437:3:9"}]},{"body":{"nativeSrc":"13477:22:9","nodeType":"YulBlock","src":"13477:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13479:16:9","nodeType":"YulIdentifier","src":"13479:16:9"},"nativeSrc":"13479:18:9","nodeType":"YulFunctionCall","src":"13479:18:9"},"nativeSrc":"13479:18:9","nodeType":"YulExpressionStatement","src":"13479:18:9"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13469:1:9","nodeType":"YulIdentifier","src":"13469:1:9"},{"name":"sum","nativeSrc":"13472:3:9","nodeType":"YulIdentifier","src":"13472:3:9"}],"functionName":{"name":"gt","nativeSrc":"13466:2:9","nodeType":"YulIdentifier","src":"13466:2:9"},"nativeSrc":"13466:10:9","nodeType":"YulFunctionCall","src":"13466:10:9"},"nativeSrc":"13463:36:9","nodeType":"YulIf","src":"13463:36:9"}]},"name":"checked_add_t_uint256","nativeSrc":"13315:191:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13346:1:9","nodeType":"YulTypedName","src":"13346:1:9","type":""},{"name":"y","nativeSrc":"13349:1:9","nodeType":"YulTypedName","src":"13349:1:9","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13355:3:9","nodeType":"YulTypedName","src":"13355:3:9","type":""}],"src":"13315:191:9"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Input amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68ff05c9813a30fb1dbd40d9205aa826b27a881f08a52f9f1873fae7f0218efe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amounts must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough liquidity available\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a14538bc910315f26690f70085570806991c8ca23a284cae439cc9229cbded3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f055697f05542780f050f02e169b628baaede4365bd8f2e41b10829d224c674_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b146101355780639cd441da146101535780639d7de6b31461016f578063e4f1f70a1461018b578063f2fde38b146101a75761009e565b80630fc63d10146100a357806341976e09146100c15780635f64b55b146100f1578063715018a61461010f5780638014a7aa14610119575b600080fd5b6100ab6101c3565b6040516100b891906113d3565b60405180910390f35b6100db60048036038101906100d69190611431565b6101e9565b6040516100e89190611477565b60405180910390f35b6100f96104b5565b60405161010691906113d3565b60405180910390f35b6101176104db565b005b610133600480360381019061012e91906114be565b6104ef565b005b61013d61086a565b60405161014a91906114fa565b60405180910390f35b61016d60048036038101906101689190611515565b610893565b005b61018960048036038101906101849190611515565b610a6d565b005b6101a560048036038101906101a091906114be565b610d85565b005b6101c160048036038101906101bc9190611431565b611100565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806102945750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca906115b2565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161033091906114fa565b602060405180830381865afa15801561034d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037191906115e7565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103d091906114fa565b602060405180830381865afa1580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041191906115e7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461048c5780670de0b6b3a76400008361047d9190611643565b61048791906116b4565b6104ac565b81670de0b6b3a7640000826104a19190611643565b6104ab91906116b4565b5b92505050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104e3611186565b6104ed600061120d565b565b60008111610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052990611731565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161058f91906114fa565b602060405180830381865afa1580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d091906115e7565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062f91906114fa565b602060405180830381865afa15801561064c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067091906115e7565b90506000821180156106825750600081115b6106c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b89061179d565b60405180910390fd5b60006106ce8483856112d1565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161072f939291906117bd565b6020604051808303816000875af115801561074e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610772919061182c565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107d0929190611859565b6020604051808303816000875af11580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610813919061182c565b503373ffffffffffffffffffffffffffffffffffffffff167fd5a1cd88ddd329cc1ddf861a21708efa9ef3136b88e1420c21f91ef6f95ad024858360405161085c929190611882565b60405180910390a250505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61089b611186565b6000821180156108ab5750600081115b6108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e1906118f7565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610949939291906117bd565b6020604051808303816000875af1158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c919061182c565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109ec939291906117bd565b6020604051808303816000875af1158015610a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2f919061182c565b507f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b8282604051610a61929190611882565b60405180910390a15050565b610a75611186565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ad291906114fa565b602060405180830381865afa158015610aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1391906115e7565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b7291906114fa565b602060405180830381865afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb391906115e7565b9050818411158015610bc55750808311155b610c04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfb90611963565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610c61929190611859565b6020604051808303816000875af1158015610c80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca4919061182c565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610d02929190611859565b6020604051808303816000875af1158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d45919061182c565b507f6f0f96292ae0038c04f9b6bab30f185d9ca02c471d0983f563f2a4f674aef1378484604051610d77929190611882565b60405180910390a150505050565b60008111610dc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbf90611731565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e2591906114fa565b602060405180830381865afa158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6691906115e7565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ec591906114fa565b602060405180830381865afa158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0691906115e7565b9050600082118015610f185750600081115b610f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4e9061179d565b60405180910390fd5b6000610f648484846112d1565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610fc5939291906117bd565b6020604051808303816000875af1158015610fe4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611008919061182c565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611066929190611859565b6020604051808303816000875af1158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a9919061182c565b503373ffffffffffffffffffffffffffffffffffffffff167fd5a1cd88ddd329cc1ddf861a21708efa9ef3136b88e1420c21f91ef6f95ad02485836040516110f2929190611882565b60405180910390a250505050565b611108611186565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361117a5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161117191906114fa565b60405180910390fd5b6111838161120d565b50565b61118e61134c565b73ffffffffffffffffffffffffffffffffffffffff166111ac61086a565b73ffffffffffffffffffffffffffffffffffffffff161461120b576111cf61134c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161120291906114fa565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080831180156112e25750600082115b611321576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611318906119cf565b60405180910390fd5b838361132d91906119ef565b82856113399190611643565b61134391906116b4565b90509392505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061139961139461138f84611354565b611374565b611354565b9050919050565b60006113ab8261137e565b9050919050565b60006113bd826113a0565b9050919050565b6113cd816113b2565b82525050565b60006020820190506113e860008301846113c4565b92915050565b600080fd5b60006113fe82611354565b9050919050565b61140e816113f3565b811461141957600080fd5b50565b60008135905061142b81611405565b92915050565b600060208284031215611447576114466113ee565b5b60006114558482850161141c565b91505092915050565b6000819050919050565b6114718161145e565b82525050565b600060208201905061148c6000830184611468565b92915050565b61149b8161145e565b81146114a657600080fd5b50565b6000813590506114b881611492565b92915050565b6000602082840312156114d4576114d36113ee565b5b60006114e2848285016114a9565b91505092915050565b6114f4816113f3565b82525050565b600060208201905061150f60008301846114eb565b92915050565b6000806040838503121561152c5761152b6113ee565b5b600061153a858286016114a9565b925050602061154b858286016114a9565b9150509250929050565b600082825260208201905092915050565b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b600061159c601583611555565b91506115a782611566565b602082019050919050565b600060208201905081810360008301526115cb8161158f565b9050919050565b6000815190506115e181611492565b92915050565b6000602082840312156115fd576115fc6113ee565b5b600061160b848285016115d2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061164e8261145e565b91506116598361145e565b92508282026116678161145e565b9150828204841483151761167e5761167d611614565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006116bf8261145e565b91506116ca8361145e565b9250826116da576116d9611685565b5b828204905092915050565b7f496e70757420616d6f756e74206d757374206265203e20300000000000000000600082015250565b600061171b601883611555565b9150611726826116e5565b602082019050919050565b6000602082019050818103600083015261174a8161170e565b9050919050565b7f496e73756666696369656e74206c697175696469747900000000000000000000600082015250565b6000611787601683611555565b915061179282611751565b602082019050919050565b600060208201905081810360008301526117b68161177a565b9050919050565b60006060820190506117d260008301866114eb565b6117df60208301856114eb565b6117ec6040830184611468565b949350505050565b60008115159050919050565b611809816117f4565b811461181457600080fd5b50565b60008151905061182681611800565b92915050565b600060208284031215611842576118416113ee565b5b600061185084828501611817565b91505092915050565b600060408201905061186e60008301856114eb565b61187b6020830184611468565b9392505050565b60006040820190506118976000830185611468565b6118a46020830184611468565b9392505050565b7f416d6f756e7473206d757374206265203e203000000000000000000000000000600082015250565b60006118e1601383611555565b91506118ec826118ab565b602082019050919050565b60006020820190508181036000830152611910816118d4565b9050919050565b7f4e6f7420656e6f756768206c697175696469747920617661696c61626c650000600082015250565b600061194d601e83611555565b915061195882611917565b602082019050919050565b6000602082019050818103600083015261197c81611940565b9050919050565b7f496e73756666696369656e742072657365727665730000000000000000000000600082015250565b60006119b9601583611555565b91506119c482611983565b602082019050919050565b600060208201905081810360008301526119e8816119ac565b9050919050565b60006119fa8261145e565b9150611a058361145e565b9250828201905080821115611a1d57611a1c611614565b5b9291505056fea26469706673582212201744cb60df2abef88e575328aef1d65e877aab0fa739afb4e106f48dc05479ae64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x9D7DE6B3 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xE4F1F70A EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x8014A7AA EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH2 0xA6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH2 0xD85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x1100 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x294 JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CA SWAP1 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x48C JUMPI DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST DUP2 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x4ED PUSH1 0x0 PUSH2 0x120D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x682 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6CE DUP5 DUP4 DUP6 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D0 SWAP3 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD5A1CD88DDD329CC1DDF861A21708EFA9EF3136B88E1420C21F91EF6F95AD024 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x85C SWAP3 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x89B PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x8AB JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH32 0x38F8A0C92F4C5B0B6877F878CB4C0C8D348A47B76D716C8E78F425043DF9515B DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA61 SWAP3 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xA75 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP DUP2 DUP5 GT ISZERO DUP1 ISZERO PUSH2 0xBC5 JUMPI POP DUP1 DUP4 GT ISZERO JUMPDEST PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFB SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP3 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP3 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH32 0x6F0F96292AE0038C04F9B6BAB30F185D9CA02C471D0983F563F2A4F674AEF137 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD77 SWAP3 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBF SWAP1 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE25 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE66 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC5 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF06 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xF18 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4E SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF64 DUP5 DUP5 DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1066 SWAP3 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1085 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A9 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD5A1CD88DDD329CC1DDF861A21708EFA9EF3136B88E1420C21F91EF6F95AD024 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10F2 SWAP3 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x1108 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1171 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1183 DUP2 PUSH2 0x120D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x118E PUSH2 0x134C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AC PUSH2 0x86A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x120B JUMPI PUSH2 0x11CF PUSH2 0x134C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1202 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0x12E2 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP1 PUSH2 0x19CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST DUP3 DUP6 PUSH2 0x1339 SWAP2 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x1343 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1399 PUSH2 0x1394 PUSH2 0x138F DUP5 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1354 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AB DUP3 PUSH2 0x137E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BD DUP3 PUSH2 0x13A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13CD DUP2 PUSH2 0x13B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13FE DUP3 PUSH2 0x1354 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140E DUP2 PUSH2 0x13F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142B DUP2 PUSH2 0x1405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1447 JUMPI PUSH2 0x1446 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1455 DUP5 DUP3 DUP6 ADD PUSH2 0x141C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1471 DUP2 PUSH2 0x145E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x148C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x149B DUP2 PUSH2 0x145E JUMP JUMPDEST DUP2 EQ PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B8 DUP2 PUSH2 0x1492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D4 JUMPI PUSH2 0x14D3 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14E2 DUP5 DUP3 DUP6 ADD PUSH2 0x14A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F4 DUP2 PUSH2 0x13F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x150F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x152C JUMPI PUSH2 0x152B PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x153A DUP6 DUP3 DUP7 ADD PUSH2 0x14A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x154B DUP6 DUP3 DUP7 ADD PUSH2 0x14A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159C PUSH1 0x15 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x15A7 DUP3 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15CB DUP2 PUSH2 0x158F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15E1 DUP2 PUSH2 0x1492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FD JUMPI PUSH2 0x15FC PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x160B DUP5 DUP3 DUP6 ADD PUSH2 0x15D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x164E DUP3 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP PUSH2 0x1659 DUP4 PUSH2 0x145E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1667 DUP2 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x167E JUMPI PUSH2 0x167D PUSH2 0x1614 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP PUSH2 0x16CA DUP4 PUSH2 0x145E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1685 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E70757420616D6F756E74206D757374206265203E20300000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171B PUSH1 0x18 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x1726 DUP3 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x174A DUP2 PUSH2 0x170E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1787 PUSH1 0x16 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x1792 DUP3 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17B6 DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17D2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x17DF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x17EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1809 DUP2 PUSH2 0x17F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1826 DUP2 PUSH2 0x1800 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1850 DUP5 DUP3 DUP6 ADD PUSH2 0x1817 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x186E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14EB JUMP JUMPDEST PUSH2 0x187B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1897 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x18A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1468 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E7473206D757374206265203E203000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E1 PUSH1 0x13 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EC DUP3 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1910 DUP2 PUSH2 0x18D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206C697175696469747920617661696C61626C650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194D PUSH1 0x1E DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x1958 DUP3 PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x197C DUP2 PUSH2 0x1940 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657365727665730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B9 PUSH1 0x15 DUP4 PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C4 DUP3 PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19E8 DUP2 PUSH2 0x19AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP3 PUSH2 0x145E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A05 DUP4 PUSH2 0x145E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A1D JUMPI PUSH2 0x1A1C PUSH2 0x1614 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PREVRANDAO 0xCB PUSH1 0xDF 0x2A 0xBE 0xF8 DUP15 JUMPI MSTORE8 0x28 0xAE CALL 0xD6 MCOPY DUP8 PUSH27 0xAB0FA739AFB4E106F48DC05479AE64736F6C634300081800330000 ","sourceMap":"396:5256:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;481:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4637:428;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;558:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3882:576:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2053:344:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2612:452;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3185:576;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;481:20:6;;;;;;;;;;;;;:::o;4637:428::-;4694:7;4740:6;;;;;;;;;;;4722:25;;:6;:25;;;:54;;;;4769:6;;;;;;;;;;;4751:25;;:6;:25;;;4722:54;4714:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4815:16;4834:6;;;;;;;;;;;:16;;;4859:4;4834:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4815:50;;4876:16;4895:6;;;;;;;;;;;:16;;;4920:4;4895:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4876:50;;4962:6;;;;;;;;;;;4944:25;;:6;:25;;;:113;;5049:8;5041:4;5030:8;:15;;;;:::i;:::-;5029:28;;;;:::i;:::-;4944:113;;;5005:8;4997:4;4986:8;:15;;;;:::i;:::-;4985:28;;;;:::i;:::-;4944:113;4937:120;;;;4637:428;;;:::o;558:20::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3882:576:6:-;3960:1;3948:9;:13;3940:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;4003:16;4022:6;;;;;;;;;;;:16;;;4047:4;4022:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4003:50;;4064:16;4083:6;;;;;;;;;;;:16;;;4108:4;4083:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4064:50;;4144:1;4133:8;:12;:28;;;;;4160:1;4149:8;:12;4133:28;4125:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4201:18;4222:43;4235:9;4246:8;4256;4222:12;:43::i;:::-;4201:64;;4278:6;;;;;;;;;;;:19;;;4298:10;4318:4;4325:9;4278:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4346:6;;;;;;;;;;;:15;;;4362:10;4374;4346:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4416:10;4403:47;;;4428:9;4439:10;4403:47;;;;;;;:::i;:::-;;;;;;;;3929:529;;;3882:576;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2053:344:6:-;1531:13:0;:11;:13::i;:::-;2157:1:6::1;2147:7;:11;:26;;;;;2172:1;2162:7;:11;2147:26;2139:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2218:6;;;;;;;;;;;:19;;;2238:10;2258:4;2265:7;2218:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2284:6;;;;;;;;;;;:19;;;2304:10;2324:4;2331:7;2284:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2357:32;2372:7;2381;2357:32;;;;;;;:::i;:::-;;;;;;;;2053:344:::0;;:::o;2612:452::-;1531:13:0;:11;:13::i;:::-;2701:16:6::1;2720:6;;;;;;;;;;;:16;;;2745:4;2720:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2701:50;;2762:16;2781:6;;;;;;;;;;;:16;;;2806:4;2781:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2762:50;;2842:8;2831:7;:19;;:42;;;;;2865:8;2854:7;:19;;2831:42;2823:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2921:6;;;;;;;;;;;:15;;;2937:10;2949:7;2921:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2968:6;;;;;;;;;;;:15;;;2984:10;2996:7;2968:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3022:34;3039:7;3048;3022:34;;;;;;;:::i;:::-;;;;;;;;2690:374;;2612:452:::0;;:::o;3185:576::-;3263:1;3251:9;:13;3243:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3306:16;3325:6;;;;;;;;;;;:16;;;3350:4;3325:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3306:50;;3367:16;3386:6;;;;;;;;;;;:16;;;3411:4;3386:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3367:50;;3447:1;3436:8;:12;:28;;;;;3463:1;3452:8;:12;3436:28;3428:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3504:18;3525:43;3538:9;3549:8;3559;3525:12;:43::i;:::-;3504:64;;3581:6;;;;;;;;;;;:19;;;3601:10;3621:4;3628:9;3581:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3649:6;;;;;;;;;;;:15;;;3665:10;3677;3649:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3719:10;3706:47;;;3731:9;3742:10;3706:47;;;;;;;:::i;:::-;;;;;;;;3232:529;;;3185:576;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;5389:260:6:-;5490:7;5530:1;5518:9;:13;:31;;;;;5548:1;5535:10;:14;5518:31;5510:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5632:8;5620:9;:20;;;;:::i;:::-;5605:10;5594:8;:21;;;;:::i;:::-;5593:48;;;;:::i;:::-;5586:55;;5389:260;;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;7:126:9:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:96;1416:7;1445:24;1463:5;1445:24;:::i;:::-;1434:35;;1379:96;;;:::o;1481:122::-;1554:24;1572:5;1554:24;:::i;:::-;1547:5;1544:35;1534:63;;1593:1;1590;1583:12;1534:63;1481:122;:::o;1609:139::-;1655:5;1693:6;1680:20;1671:29;;1709:33;1736:5;1709:33;:::i;:::-;1609:139;;;;:::o;1754:329::-;1813:6;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;1754:329;;;;:::o;2089:77::-;2126:7;2155:5;2144:16;;2089:77;;;:::o;2172:118::-;2259:24;2277:5;2259:24;:::i;:::-;2254:3;2247:37;2172:118;;:::o;2296:222::-;2389:4;2427:2;2416:9;2412:18;2404:26;;2440:71;2508:1;2497:9;2493:17;2484:6;2440:71;:::i;:::-;2296:222;;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:474::-;3552:6;3560;3609:2;3597:9;3588:7;3584:23;3580:32;3577:119;;;3615:79;;:::i;:::-;3577:119;3735:1;3760:53;3805:7;3796:6;3785:9;3781:22;3760:53;:::i;:::-;3750:63;;3706:117;3862:2;3888:53;3933:7;3924:6;3913:9;3909:22;3888:53;:::i;:::-;3878:63;;3833:118;3484:474;;;;;:::o;3964:169::-;4048:11;4082:6;4077:3;4070:19;4122:4;4117:3;4113:14;4098:29;;3964:169;;;;:::o;4139:171::-;4279:23;4275:1;4267:6;4263:14;4256:47;4139:171;:::o;4316:366::-;4458:3;4479:67;4543:2;4538:3;4479:67;:::i;:::-;4472:74;;4555:93;4644:3;4555:93;:::i;:::-;4673:2;4668:3;4664:12;4657:19;;4316:366;;;:::o;4688:419::-;4854:4;4892:2;4881:9;4877:18;4869:26;;4941:9;4935:4;4931:20;4927:1;4916:9;4912:17;4905:47;4969:131;5095:4;4969:131;:::i;:::-;4961:139;;4688:419;;;:::o;5113:143::-;5170:5;5201:6;5195:13;5186:22;;5217:33;5244:5;5217:33;:::i;:::-;5113:143;;;;:::o;5262:351::-;5332:6;5381:2;5369:9;5360:7;5356:23;5352:32;5349:119;;;5387:79;;:::i;:::-;5349:119;5507:1;5532:64;5588:7;5579:6;5568:9;5564:22;5532:64;:::i;:::-;5522:74;;5478:128;5262:351;;;;:::o;5619:180::-;5667:77;5664:1;5657:88;5764:4;5761:1;5754:15;5788:4;5785:1;5778:15;5805:410;5845:7;5868:20;5886:1;5868:20;:::i;:::-;5863:25;;5902:20;5920:1;5902:20;:::i;:::-;5897:25;;5957:1;5954;5950:9;5979:30;5997:11;5979:30;:::i;:::-;5968:41;;6158:1;6149:7;6145:15;6142:1;6139:22;6119:1;6112:9;6092:83;6069:139;;6188:18;;:::i;:::-;6069:139;5853:362;5805:410;;;;:::o;6221:180::-;6269:77;6266:1;6259:88;6366:4;6363:1;6356:15;6390:4;6387:1;6380:15;6407:185;6447:1;6464:20;6482:1;6464:20;:::i;:::-;6459:25;;6498:20;6516:1;6498:20;:::i;:::-;6493:25;;6537:1;6527:35;;6542:18;;:::i;:::-;6527:35;6584:1;6581;6577:9;6572:14;;6407:185;;;;:::o;6598:174::-;6738:26;6734:1;6726:6;6722:14;6715:50;6598:174;:::o;6778:366::-;6920:3;6941:67;7005:2;7000:3;6941:67;:::i;:::-;6934:74;;7017:93;7106:3;7017:93;:::i;:::-;7135:2;7130:3;7126:12;7119:19;;6778:366;;;:::o;7150:419::-;7316:4;7354:2;7343:9;7339:18;7331:26;;7403:9;7397:4;7393:20;7389:1;7378:9;7374:17;7367:47;7431:131;7557:4;7431:131;:::i;:::-;7423:139;;7150:419;;;:::o;7575:172::-;7715:24;7711:1;7703:6;7699:14;7692:48;7575:172;:::o;7753:366::-;7895:3;7916:67;7980:2;7975:3;7916:67;:::i;:::-;7909:74;;7992:93;8081:3;7992:93;:::i;:::-;8110:2;8105:3;8101:12;8094:19;;7753:366;;;:::o;8125:419::-;8291:4;8329:2;8318:9;8314:18;8306:26;;8378:9;8372:4;8368:20;8364:1;8353:9;8349:17;8342:47;8406:131;8532:4;8406:131;:::i;:::-;8398:139;;8125:419;;;:::o;8550:442::-;8699:4;8737:2;8726:9;8722:18;8714:26;;8750:71;8818:1;8807:9;8803:17;8794:6;8750:71;:::i;:::-;8831:72;8899:2;8888:9;8884:18;8875:6;8831:72;:::i;:::-;8913;8981:2;8970:9;8966:18;8957:6;8913:72;:::i;:::-;8550:442;;;;;;:::o;8998:90::-;9032:7;9075:5;9068:13;9061:21;9050:32;;8998:90;;;:::o;9094:116::-;9164:21;9179:5;9164:21;:::i;:::-;9157:5;9154:32;9144:60;;9200:1;9197;9190:12;9144:60;9094:116;:::o;9216:137::-;9270:5;9301:6;9295:13;9286:22;;9317:30;9341:5;9317:30;:::i;:::-;9216:137;;;;:::o;9359:345::-;9426:6;9475:2;9463:9;9454:7;9450:23;9446:32;9443:119;;;9481:79;;:::i;:::-;9443:119;9601:1;9626:61;9679:7;9670:6;9659:9;9655:22;9626:61;:::i;:::-;9616:71;;9572:125;9359:345;;;;:::o;9710:332::-;9831:4;9869:2;9858:9;9854:18;9846:26;;9882:71;9950:1;9939:9;9935:17;9926:6;9882:71;:::i;:::-;9963:72;10031:2;10020:9;10016:18;10007:6;9963:72;:::i;:::-;9710:332;;;;;:::o;10048:::-;10169:4;10207:2;10196:9;10192:18;10184:26;;10220:71;10288:1;10277:9;10273:17;10264:6;10220:71;:::i;:::-;10301:72;10369:2;10358:9;10354:18;10345:6;10301:72;:::i;:::-;10048:332;;;;;:::o;10386:169::-;10526:21;10522:1;10514:6;10510:14;10503:45;10386:169;:::o;10561:366::-;10703:3;10724:67;10788:2;10783:3;10724:67;:::i;:::-;10717:74;;10800:93;10889:3;10800:93;:::i;:::-;10918:2;10913:3;10909:12;10902:19;;10561:366;;;:::o;10933:419::-;11099:4;11137:2;11126:9;11122:18;11114:26;;11186:9;11180:4;11176:20;11172:1;11161:9;11157:17;11150:47;11214:131;11340:4;11214:131;:::i;:::-;11206:139;;10933:419;;;:::o;11358:180::-;11498:32;11494:1;11486:6;11482:14;11475:56;11358:180;:::o;11544:366::-;11686:3;11707:67;11771:2;11766:3;11707:67;:::i;:::-;11700:74;;11783:93;11872:3;11783:93;:::i;:::-;11901:2;11896:3;11892:12;11885:19;;11544:366;;;:::o;11916:419::-;12082:4;12120:2;12109:9;12105:18;12097:26;;12169:9;12163:4;12159:20;12155:1;12144:9;12140:17;12133:47;12197:131;12323:4;12197:131;:::i;:::-;12189:139;;11916:419;;;:::o;12341:171::-;12481:23;12477:1;12469:6;12465:14;12458:47;12341:171;:::o;12518:366::-;12660:3;12681:67;12745:2;12740:3;12681:67;:::i;:::-;12674:74;;12757:93;12846:3;12757:93;:::i;:::-;12875:2;12870:3;12866:12;12859:19;;12518:366;;;:::o;12890:419::-;13056:4;13094:2;13083:9;13079:18;13071:26;;13143:9;13137:4;13133:20;13129:1;13118:9;13114:17;13107:47;13171:131;13297:4;13171:131;:::i;:::-;13163:139;;12890:419;;;:::o;13315:191::-;13355:3;13374:20;13392:1;13374:20;:::i;:::-;13369:25;;13408:20;13426:1;13408:20;:::i;:::-;13403:25;;13451:1;13448;13444:9;13437:16;;13472:3;13469:1;13466:10;13463:36;;;13479:18;;:::i;:::-;13463:36;13315:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1349000","executionCost":"infinite","totalCost":"infinite"},"external":{"addLiquidity(uint256,uint256)":"infinite","getPrice(address)":"infinite","owner()":"2522","removeLiquidity(uint256,uint256)":"infinite","renounceOwnership()":"infinite","swapAforB(uint256)":"infinite","swapBforA(uint256)":"infinite","tokenA()":"infinite","tokenB()":"infinite","transferOwnership(address)":"infinite"},"internal":{"getAmountOut(uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{"addLiquidity(uint256,uint256)":"9cd441da","getPrice(address)":"41976e09","owner()":"8da5cb5b","removeLiquidity(uint256,uint256)":"9d7de6b3","renounceOwnership()":"715018a6","swapAforB(uint256)":"e4f1f70a","swapBforA(uint256)":"8014a7aa","tokenA()":"0fc63d10","tokenB()":"5f64b55b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokenSwapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountAIn\",\"type\":\"uint256\"}],\"name\":\"swapAforB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountBIn\",\"type\":\"uint256\"}],\"name\":\"swapBforA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"[Gabriel Iakantas]\",\"details\":\"Implementa la f\\u00f3rmula de producto constante para intercambios\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"LiquidityAdded(uint256,uint256)\":{\"params\":{\"amountA\":\"Cantidad de token A agregada\",\"amountB\":\"Cantidad de token B agregada\"}},\"LiquidityRemoved(uint256,uint256)\":{\"params\":{\"amountA\":\"Cantidad de token A removida\",\"amountB\":\"Cantidad de token B removida\"}},\"TokenSwapped(address,uint256,uint256)\":{\"params\":{\"amountIn\":\"Cantidad del token de entrada\",\"amountOut\":\"Cantidad del token de salida\",\"user\":\"Direcci\\u00f3n del usuario que realiz\\u00f3 el intercambio\"}}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256,uint256)\":{\"details\":\"Solo puede ser llamado por el propietario\",\"params\":{\"amountA\":\"Cantidad de token A a agregar\",\"amountB\":\"Cantidad de token B a agregar\"}},\"constructor\":{\"params\":{\"_tokenA\":\"Direcci\\u00f3n del token A\",\"_tokenB\":\"Direcci\\u00f3n del token B\"}},\"getPrice(address)\":{\"params\":{\"_token\":\"Direcci\\u00f3n del token a evaluar\"},\"returns\":{\"_0\":\"Precio relativo en t\\u00e9rminos del otro token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeLiquidity(uint256,uint256)\":{\"details\":\"Solo puede ser llamado por el propietario\",\"params\":{\"amountA\":\"Cantidad de token A a remover\",\"amountB\":\"Cantidad de token B a remover\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swapAforB(uint256)\":{\"params\":{\"amountAIn\":\"Cantidad de token A para intercambiar\"}},\"swapBforA(uint256)\":{\"params\":{\"amountBIn\":\"Cantidad de token B para intercambiar\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Simple Decentralized Exchange (DEX)\",\"version\":1},\"userdoc\":{\"events\":{\"LiquidityAdded(uint256,uint256)\":{\"notice\":\"Evento emitido al agregar liquidez\"},\"LiquidityRemoved(uint256,uint256)\":{\"notice\":\"Evento emitido al remover liquidez\"},\"TokenSwapped(address,uint256,uint256)\":{\"notice\":\"Evento emitido al realizar un intercambio\"}},\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256,uint256)\":{\"notice\":\"Agrega liquidez al pool\"},\"constructor\":{\"notice\":\"Constructor para inicializar el contrato con los tokens\"},\"getPrice(address)\":{\"notice\":\"Calcula el precio relativo de un token\"},\"removeLiquidity(uint256,uint256)\":{\"notice\":\"Remueve liquidez del pool\"},\"swapAforB(uint256)\":{\"notice\":\"Intercambia token A por token B\"},\"swapBforA(uint256)\":{\"notice\":\"Intercambia token B por token A\"},\"tokenA()\":{\"notice\":\"Token A en el pool de liquidez\"},\"tokenB()\":{\"notice\":\"Token B en el pool de liquidez\"}},\"notice\":\"Contrato para intercambiar tokens y gestionar liquidez\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleDEX.sol\":\"SimpleDEX\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SimpleDEX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.22;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n/// @title Simple Decentralized Exchange (DEX)\\r\\n/// @notice Contrato para intercambiar tokens y gestionar liquidez\\r\\n/// @dev Implementa la f\\u00f3rmula de producto constante para intercambios\\r\\n/// @author [Gabriel Iakantas]\\r\\ncontract SimpleDEX is Ownable {\\r\\n    /// @notice Token A en el pool de liquidez\\r\\n    IERC20 public tokenA;\\r\\n\\r\\n    /// @notice Token B en el pool de liquidez\\r\\n    IERC20 public tokenB;\\r\\n\\r\\n    /// @notice Evento emitido al agregar liquidez\\r\\n    /// @param amountA Cantidad de token A agregada\\r\\n    /// @param amountB Cantidad de token B agregada\\r\\n    event LiquidityAdded(uint256 amountA, uint256 amountB);\\r\\n\\r\\n    /// @notice Evento emitido al remover liquidez\\r\\n    /// @param amountA Cantidad de token A removida\\r\\n    /// @param amountB Cantidad de token B removida\\r\\n    event LiquidityRemoved(uint256 amountA, uint256 amountB);\\r\\n\\r\\n    /// @notice Evento emitido al realizar un intercambio\\r\\n    /// @param user Direcci\\u00f3n del usuario que realiz\\u00f3 el intercambio\\r\\n    /// @param amountIn Cantidad del token de entrada\\r\\n    /// @param amountOut Cantidad del token de salida\\r\\n    event TokenSwapped(address indexed user, uint256 amountIn, uint256 amountOut);\\r\\n\\r\\n    /// @notice Constructor para inicializar el contrato con los tokens\\r\\n    /// @param _tokenA Direcci\\u00f3n del token A\\r\\n    /// @param _tokenB Direcci\\u00f3n del token B\\r\\n    constructor(address _tokenA, address _tokenB) Ownable(msg.sender) {\\r\\n        require(_tokenA != address(0) && _tokenB != address(0), \\\"Token address cannot be 0\\\");\\r\\n        require(_tokenA != _tokenB, \\\"Tokens must be different\\\");\\r\\n        \\r\\n        tokenA = IERC20(_tokenA);\\r\\n        tokenB = IERC20(_tokenB);\\r\\n    }\\r\\n\\r\\n    /// @notice Agrega liquidez al pool\\r\\n    /// @dev Solo puede ser llamado por el propietario\\r\\n    /// @param amountA Cantidad de token A a agregar\\r\\n    /// @param amountB Cantidad de token B a agregar\\r\\n    function addLiquidity(uint256 amountA, uint256 amountB) external onlyOwner {\\r\\n        require(amountA > 0 && amountB > 0, \\\"Amounts must be > 0\\\");\\r\\n        \\r\\n        tokenA.transferFrom(msg.sender, address(this), amountA);\\r\\n        tokenB.transferFrom(msg.sender, address(this), amountB);\\r\\n\\r\\n        emit LiquidityAdded(amountA, amountB);\\r\\n    }\\r\\n\\r\\n    /// @notice Remueve liquidez del pool\\r\\n    /// @dev Solo puede ser llamado por el propietario\\r\\n    /// @param amountA Cantidad de token A a remover\\r\\n    /// @param amountB Cantidad de token B a remover\\r\\n    function removeLiquidity(uint256 amountA, uint256 amountB) external onlyOwner {\\r\\n        uint256 balanceA = tokenA.balanceOf(address(this));\\r\\n        uint256 balanceB = tokenB.balanceOf(address(this));\\r\\n        require(amountA <= balanceA && amountB <= balanceB, \\\"Not enough liquidity available\\\");\\r\\n\\r\\n        tokenA.transfer(msg.sender, amountA);\\r\\n        tokenB.transfer(msg.sender, amountB);\\r\\n\\r\\n        emit LiquidityRemoved(amountA, amountB);\\r\\n    }\\r\\n\\r\\n    /// @notice Intercambia token A por token B\\r\\n    /// @param amountAIn Cantidad de token A para intercambiar\\r\\n    function swapAforB(uint256 amountAIn) external {\\r\\n        require(amountAIn > 0, \\\"Input amount must be > 0\\\");\\r\\n\\r\\n        uint256 balanceA = tokenA.balanceOf(address(this));\\r\\n        uint256 balanceB = tokenB.balanceOf(address(this));\\r\\n        require(balanceA > 0 && balanceB > 0, \\\"Insufficient liquidity\\\");\\r\\n\\r\\n        uint256 amountBOut = getAmountOut(amountAIn, balanceA, balanceB);\\r\\n\\r\\n        tokenA.transferFrom(msg.sender, address(this), amountAIn);\\r\\n        tokenB.transfer(msg.sender, amountBOut);\\r\\n\\r\\n        emit TokenSwapped(msg.sender, amountAIn, amountBOut);\\r\\n    }\\r\\n\\r\\n    /// @notice Intercambia token B por token A\\r\\n    /// @param amountBIn Cantidad de token B para intercambiar\\r\\n    function swapBforA(uint256 amountBIn) external {\\r\\n        require(amountBIn > 0, \\\"Input amount must be > 0\\\");\\r\\n\\r\\n        uint256 balanceA = tokenA.balanceOf(address(this));\\r\\n        uint256 balanceB = tokenB.balanceOf(address(this));\\r\\n        require(balanceA > 0 && balanceB > 0, \\\"Insufficient liquidity\\\");\\r\\n\\r\\n        uint256 amountAOut = getAmountOut(amountBIn, balanceB, balanceA);\\r\\n\\r\\n        tokenB.transferFrom(msg.sender, address(this), amountBIn);\\r\\n        tokenA.transfer(msg.sender, amountAOut);\\r\\n\\r\\n        emit TokenSwapped(msg.sender, amountBIn, amountAOut);\\r\\n    }\\r\\n\\r\\n    /// @notice Calcula el precio relativo de un token\\r\\n    /// @param _token Direcci\\u00f3n del token a evaluar\\r\\n    /// @return Precio relativo en t\\u00e9rminos del otro token\\r\\n    function getPrice(address _token) external view returns (uint256) {\\r\\n        require(_token == address(tokenA) || _token == address(tokenB), \\\"Invalid token address\\\");\\r\\n\\r\\n        uint256 balanceA = tokenA.balanceOf(address(this));\\r\\n        uint256 balanceB = tokenB.balanceOf(address(this));\\r\\n        return _token == address(tokenA)\\r\\n            ? (balanceB * 1e18) / balanceA\\r\\n            : (balanceA * 1e18) / balanceB;\\r\\n    }\\r\\n\\r\\n    /// @notice Calcula la cantidad de tokens de salida bas\\u00e1ndose en la f\\u00f3rmula de producto constante\\r\\n    /// @param amountIn Cantidad de tokens de entrada\\r\\n    /// @param reserveIn Reserva del token de entrada\\r\\n    /// @param reserveOut Reserva del token de salida\\r\\n    /// @return Cantidad de tokens de salida\\r\\n    function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) private pure returns (uint256) {\\r\\n        require(reserveIn > 0 && reserveOut > 0, \\\"Insufficient reserves\\\");\\r\\n        return (amountIn * reserveOut) / (reserveIn + amountIn);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3f488ec5724e99c54e40f79d07d28a94c8bfb2cb6ff8c41f21d41f033574ac2a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"contracts/SimpleDEX.sol:SimpleDEX","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":944,"contract":"contracts/SimpleDEX.sol:SimpleDEX","label":"tokenA","offset":0,"slot":"1","type":"t_contract(IERC20)877"},{"astId":948,"contract":"contracts/SimpleDEX.sol:SimpleDEX","label":"tokenB","offset":0,"slot":"2","type":"t_contract(IERC20)877"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IERC20)877":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"}}},"userdoc":{"events":{"LiquidityAdded(uint256,uint256)":{"notice":"Evento emitido al agregar liquidez"},"LiquidityRemoved(uint256,uint256)":{"notice":"Evento emitido al remover liquidez"},"TokenSwapped(address,uint256,uint256)":{"notice":"Evento emitido al realizar un intercambio"}},"kind":"user","methods":{"addLiquidity(uint256,uint256)":{"notice":"Agrega liquidez al pool"},"constructor":{"notice":"Constructor para inicializar el contrato con los tokens"},"getPrice(address)":{"notice":"Calcula el precio relativo de un token"},"removeLiquidity(uint256,uint256)":{"notice":"Remueve liquidez del pool"},"swapAforB(uint256)":{"notice":"Intercambia token A por token B"},"swapBforA(uint256)":{"notice":"Intercambia token B por token A"},"tokenA()":{"notice":"Token A en el pool de liquidez"},"tokenB()":{"notice":"Token B en el pool de liquidez"}},"notice":"Contrato para intercambiar tokens y gestionar liquidez","version":1}}},"contracts/TokenA.sol":{"TokenA":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1416":{"entryPoint":null,"id":1416,"parameterSlots":1,"returnSlots":0},"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_mint_639":{"entryPoint":226,"id":639,"parameterSlots":2,"returnSlots":0},"@_update_606":{"entryPoint":367,"id":606,"parameterSlots":3,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1948,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2100,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2117,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2178,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1199,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1041,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2041,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1510,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1928,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1896,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":932,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1471,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1345,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1665,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1220,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1146,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1635,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1335,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1603,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1994,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1099,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1052,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1385,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":927,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1236,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1590,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1443,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1249,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1395,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1438,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:7961:9","nodeType":"YulBlock","src":"0:7961:9","statements":[{"body":{"nativeSrc":"47:35:9","nodeType":"YulBlock","src":"47:35:9","statements":[{"nativeSrc":"57:19:9","nodeType":"YulAssignment","src":"57:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:9","nodeType":"YulLiteral","src":"73:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:9","nodeType":"YulIdentifier","src":"67:5:9"},"nativeSrc":"67:9:9","nodeType":"YulFunctionCall","src":"67:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:9","nodeType":"YulIdentifier","src":"57:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:9","nodeType":"YulTypedName","src":"40:6:9","type":""}],"src":"7:75:9"},{"body":{"nativeSrc":"177:28:9","nodeType":"YulBlock","src":"177:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:9","nodeType":"YulLiteral","src":"194:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:9","nodeType":"YulLiteral","src":"197:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:9","nodeType":"YulIdentifier","src":"187:6:9"},"nativeSrc":"187:12:9","nodeType":"YulFunctionCall","src":"187:12:9"},"nativeSrc":"187:12:9","nodeType":"YulExpressionStatement","src":"187:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:9","nodeType":"YulFunctionDefinition","src":"88:117:9"},{"body":{"nativeSrc":"300:28:9","nodeType":"YulBlock","src":"300:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:9","nodeType":"YulLiteral","src":"317:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:9","nodeType":"YulLiteral","src":"320:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:9","nodeType":"YulIdentifier","src":"310:6:9"},"nativeSrc":"310:12:9","nodeType":"YulFunctionCall","src":"310:12:9"},"nativeSrc":"310:12:9","nodeType":"YulExpressionStatement","src":"310:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:9","nodeType":"YulFunctionDefinition","src":"211:117:9"},{"body":{"nativeSrc":"379:32:9","nodeType":"YulBlock","src":"379:32:9","statements":[{"nativeSrc":"389:16:9","nodeType":"YulAssignment","src":"389:16:9","value":{"name":"value","nativeSrc":"400:5:9","nodeType":"YulIdentifier","src":"400:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:9","nodeType":"YulIdentifier","src":"389:7:9"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:9","nodeType":"YulTypedName","src":"361:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:9","nodeType":"YulTypedName","src":"371:7:9","type":""}],"src":"334:77:9"},{"body":{"nativeSrc":"460:79:9","nodeType":"YulBlock","src":"460:79:9","statements":[{"body":{"nativeSrc":"517:16:9","nodeType":"YulBlock","src":"517:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:9","nodeType":"YulLiteral","src":"526:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:9","nodeType":"YulLiteral","src":"529:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:9","nodeType":"YulIdentifier","src":"519:6:9"},"nativeSrc":"519:12:9","nodeType":"YulFunctionCall","src":"519:12:9"},"nativeSrc":"519:12:9","nodeType":"YulExpressionStatement","src":"519:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:9","nodeType":"YulIdentifier","src":"483:5:9"},{"arguments":[{"name":"value","nativeSrc":"508:5:9","nodeType":"YulIdentifier","src":"508:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:9","nodeType":"YulIdentifier","src":"490:17:9"},"nativeSrc":"490:24:9","nodeType":"YulFunctionCall","src":"490:24:9"}],"functionName":{"name":"eq","nativeSrc":"480:2:9","nodeType":"YulIdentifier","src":"480:2:9"},"nativeSrc":"480:35:9","nodeType":"YulFunctionCall","src":"480:35:9"}],"functionName":{"name":"iszero","nativeSrc":"473:6:9","nodeType":"YulIdentifier","src":"473:6:9"},"nativeSrc":"473:43:9","nodeType":"YulFunctionCall","src":"473:43:9"},"nativeSrc":"470:63:9","nodeType":"YulIf","src":"470:63:9"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:9","nodeType":"YulTypedName","src":"453:5:9","type":""}],"src":"417:122:9"},{"body":{"nativeSrc":"608:80:9","nodeType":"YulBlock","src":"608:80:9","statements":[{"nativeSrc":"618:22:9","nodeType":"YulAssignment","src":"618:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:9","nodeType":"YulIdentifier","src":"633:6:9"}],"functionName":{"name":"mload","nativeSrc":"627:5:9","nodeType":"YulIdentifier","src":"627:5:9"},"nativeSrc":"627:13:9","nodeType":"YulFunctionCall","src":"627:13:9"},"variableNames":[{"name":"value","nativeSrc":"618:5:9","nodeType":"YulIdentifier","src":"618:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:9","nodeType":"YulIdentifier","src":"676:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:9","nodeType":"YulIdentifier","src":"649:26:9"},"nativeSrc":"649:33:9","nodeType":"YulFunctionCall","src":"649:33:9"},"nativeSrc":"649:33:9","nodeType":"YulExpressionStatement","src":"649:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:9","nodeType":"YulTypedName","src":"586:6:9","type":""},{"name":"end","nativeSrc":"594:3:9","nodeType":"YulTypedName","src":"594:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:9","nodeType":"YulTypedName","src":"602:5:9","type":""}],"src":"545:143:9"},{"body":{"nativeSrc":"771:274:9","nodeType":"YulBlock","src":"771:274:9","statements":[{"body":{"nativeSrc":"817:83:9","nodeType":"YulBlock","src":"817:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"819:77:9","nodeType":"YulIdentifier","src":"819:77:9"},"nativeSrc":"819:79:9","nodeType":"YulFunctionCall","src":"819:79:9"},"nativeSrc":"819:79:9","nodeType":"YulExpressionStatement","src":"819:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"792:7:9","nodeType":"YulIdentifier","src":"792:7:9"},{"name":"headStart","nativeSrc":"801:9:9","nodeType":"YulIdentifier","src":"801:9:9"}],"functionName":{"name":"sub","nativeSrc":"788:3:9","nodeType":"YulIdentifier","src":"788:3:9"},"nativeSrc":"788:23:9","nodeType":"YulFunctionCall","src":"788:23:9"},{"kind":"number","nativeSrc":"813:2:9","nodeType":"YulLiteral","src":"813:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"784:3:9","nodeType":"YulIdentifier","src":"784:3:9"},"nativeSrc":"784:32:9","nodeType":"YulFunctionCall","src":"784:32:9"},"nativeSrc":"781:119:9","nodeType":"YulIf","src":"781:119:9"},{"nativeSrc":"910:128:9","nodeType":"YulBlock","src":"910:128:9","statements":[{"nativeSrc":"925:15:9","nodeType":"YulVariableDeclaration","src":"925:15:9","value":{"kind":"number","nativeSrc":"939:1:9","nodeType":"YulLiteral","src":"939:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"929:6:9","nodeType":"YulTypedName","src":"929:6:9","type":""}]},{"nativeSrc":"954:74:9","nodeType":"YulAssignment","src":"954:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1000:9:9","nodeType":"YulIdentifier","src":"1000:9:9"},{"name":"offset","nativeSrc":"1011:6:9","nodeType":"YulIdentifier","src":"1011:6:9"}],"functionName":{"name":"add","nativeSrc":"996:3:9","nodeType":"YulIdentifier","src":"996:3:9"},"nativeSrc":"996:22:9","nodeType":"YulFunctionCall","src":"996:22:9"},{"name":"dataEnd","nativeSrc":"1020:7:9","nodeType":"YulIdentifier","src":"1020:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"964:31:9","nodeType":"YulIdentifier","src":"964:31:9"},"nativeSrc":"964:64:9","nodeType":"YulFunctionCall","src":"964:64:9"},"variableNames":[{"name":"value0","nativeSrc":"954:6:9","nodeType":"YulIdentifier","src":"954:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"694:351:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"741:9:9","nodeType":"YulTypedName","src":"741:9:9","type":""},{"name":"dataEnd","nativeSrc":"752:7:9","nodeType":"YulTypedName","src":"752:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"764:6:9","nodeType":"YulTypedName","src":"764:6:9","type":""}],"src":"694:351:9"},{"body":{"nativeSrc":"1110:40:9","nodeType":"YulBlock","src":"1110:40:9","statements":[{"nativeSrc":"1121:22:9","nodeType":"YulAssignment","src":"1121:22:9","value":{"arguments":[{"name":"value","nativeSrc":"1137:5:9","nodeType":"YulIdentifier","src":"1137:5:9"}],"functionName":{"name":"mload","nativeSrc":"1131:5:9","nodeType":"YulIdentifier","src":"1131:5:9"},"nativeSrc":"1131:12:9","nodeType":"YulFunctionCall","src":"1131:12:9"},"variableNames":[{"name":"length","nativeSrc":"1121:6:9","nodeType":"YulIdentifier","src":"1121:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1051:99:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1093:5:9","nodeType":"YulTypedName","src":"1093:5:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1103:6:9","nodeType":"YulTypedName","src":"1103:6:9","type":""}],"src":"1051:99:9"},{"body":{"nativeSrc":"1184:152:9","nodeType":"YulBlock","src":"1184:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1201:1:9","nodeType":"YulLiteral","src":"1201:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1204:77:9","nodeType":"YulLiteral","src":"1204:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:9","nodeType":"YulIdentifier","src":"1194:6:9"},"nativeSrc":"1194:88:9","nodeType":"YulFunctionCall","src":"1194:88:9"},"nativeSrc":"1194:88:9","nodeType":"YulExpressionStatement","src":"1194:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1298:1:9","nodeType":"YulLiteral","src":"1298:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"1301:4:9","nodeType":"YulLiteral","src":"1301:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1291:6:9","nodeType":"YulIdentifier","src":"1291:6:9"},"nativeSrc":"1291:15:9","nodeType":"YulFunctionCall","src":"1291:15:9"},"nativeSrc":"1291:15:9","nodeType":"YulExpressionStatement","src":"1291:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1322:1:9","nodeType":"YulLiteral","src":"1322:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1325:4:9","nodeType":"YulLiteral","src":"1325:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1315:6:9","nodeType":"YulIdentifier","src":"1315:6:9"},"nativeSrc":"1315:15:9","nodeType":"YulFunctionCall","src":"1315:15:9"},"nativeSrc":"1315:15:9","nodeType":"YulExpressionStatement","src":"1315:15:9"}]},"name":"panic_error_0x41","nativeSrc":"1156:180:9","nodeType":"YulFunctionDefinition","src":"1156:180:9"},{"body":{"nativeSrc":"1370:152:9","nodeType":"YulBlock","src":"1370:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1387:1:9","nodeType":"YulLiteral","src":"1387:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1390:77:9","nodeType":"YulLiteral","src":"1390:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1380:6:9","nodeType":"YulIdentifier","src":"1380:6:9"},"nativeSrc":"1380:88:9","nodeType":"YulFunctionCall","src":"1380:88:9"},"nativeSrc":"1380:88:9","nodeType":"YulExpressionStatement","src":"1380:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1484:1:9","nodeType":"YulLiteral","src":"1484:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"1487:4:9","nodeType":"YulLiteral","src":"1487:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1477:6:9","nodeType":"YulIdentifier","src":"1477:6:9"},"nativeSrc":"1477:15:9","nodeType":"YulFunctionCall","src":"1477:15:9"},"nativeSrc":"1477:15:9","nodeType":"YulExpressionStatement","src":"1477:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:9","nodeType":"YulLiteral","src":"1508:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:4:9","nodeType":"YulLiteral","src":"1511:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1501:6:9","nodeType":"YulIdentifier","src":"1501:6:9"},"nativeSrc":"1501:15:9","nodeType":"YulFunctionCall","src":"1501:15:9"},"nativeSrc":"1501:15:9","nodeType":"YulExpressionStatement","src":"1501:15:9"}]},"name":"panic_error_0x22","nativeSrc":"1342:180:9","nodeType":"YulFunctionDefinition","src":"1342:180:9"},{"body":{"nativeSrc":"1579:269:9","nodeType":"YulBlock","src":"1579:269:9","statements":[{"nativeSrc":"1589:22:9","nodeType":"YulAssignment","src":"1589:22:9","value":{"arguments":[{"name":"data","nativeSrc":"1603:4:9","nodeType":"YulIdentifier","src":"1603:4:9"},{"kind":"number","nativeSrc":"1609:1:9","nodeType":"YulLiteral","src":"1609:1:9","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1599:3:9","nodeType":"YulIdentifier","src":"1599:3:9"},"nativeSrc":"1599:12:9","nodeType":"YulFunctionCall","src":"1599:12:9"},"variableNames":[{"name":"length","nativeSrc":"1589:6:9","nodeType":"YulIdentifier","src":"1589:6:9"}]},{"nativeSrc":"1620:38:9","nodeType":"YulVariableDeclaration","src":"1620:38:9","value":{"arguments":[{"name":"data","nativeSrc":"1650:4:9","nodeType":"YulIdentifier","src":"1650:4:9"},{"kind":"number","nativeSrc":"1656:1:9","nodeType":"YulLiteral","src":"1656:1:9","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1646:3:9","nodeType":"YulIdentifier","src":"1646:3:9"},"nativeSrc":"1646:12:9","nodeType":"YulFunctionCall","src":"1646:12:9"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1624:18:9","nodeType":"YulTypedName","src":"1624:18:9","type":""}]},{"body":{"nativeSrc":"1697:51:9","nodeType":"YulBlock","src":"1697:51:9","statements":[{"nativeSrc":"1711:27:9","nodeType":"YulAssignment","src":"1711:27:9","value":{"arguments":[{"name":"length","nativeSrc":"1725:6:9","nodeType":"YulIdentifier","src":"1725:6:9"},{"kind":"number","nativeSrc":"1733:4:9","nodeType":"YulLiteral","src":"1733:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1721:3:9","nodeType":"YulIdentifier","src":"1721:3:9"},"nativeSrc":"1721:17:9","nodeType":"YulFunctionCall","src":"1721:17:9"},"variableNames":[{"name":"length","nativeSrc":"1711:6:9","nodeType":"YulIdentifier","src":"1711:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1677:18:9","nodeType":"YulIdentifier","src":"1677:18:9"}],"functionName":{"name":"iszero","nativeSrc":"1670:6:9","nodeType":"YulIdentifier","src":"1670:6:9"},"nativeSrc":"1670:26:9","nodeType":"YulFunctionCall","src":"1670:26:9"},"nativeSrc":"1667:81:9","nodeType":"YulIf","src":"1667:81:9"},{"body":{"nativeSrc":"1800:42:9","nodeType":"YulBlock","src":"1800:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"1814:16:9","nodeType":"YulIdentifier","src":"1814:16:9"},"nativeSrc":"1814:18:9","nodeType":"YulFunctionCall","src":"1814:18:9"},"nativeSrc":"1814:18:9","nodeType":"YulExpressionStatement","src":"1814:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1764:18:9","nodeType":"YulIdentifier","src":"1764:18:9"},{"arguments":[{"name":"length","nativeSrc":"1787:6:9","nodeType":"YulIdentifier","src":"1787:6:9"},{"kind":"number","nativeSrc":"1795:2:9","nodeType":"YulLiteral","src":"1795:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1784:2:9","nodeType":"YulIdentifier","src":"1784:2:9"},"nativeSrc":"1784:14:9","nodeType":"YulFunctionCall","src":"1784:14:9"}],"functionName":{"name":"eq","nativeSrc":"1761:2:9","nodeType":"YulIdentifier","src":"1761:2:9"},"nativeSrc":"1761:38:9","nodeType":"YulFunctionCall","src":"1761:38:9"},"nativeSrc":"1758:84:9","nodeType":"YulIf","src":"1758:84:9"}]},"name":"extract_byte_array_length","nativeSrc":"1528:320:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1563:4:9","nodeType":"YulTypedName","src":"1563:4:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1572:6:9","nodeType":"YulTypedName","src":"1572:6:9","type":""}],"src":"1528:320:9"},{"body":{"nativeSrc":"1908:87:9","nodeType":"YulBlock","src":"1908:87:9","statements":[{"nativeSrc":"1918:11:9","nodeType":"YulAssignment","src":"1918:11:9","value":{"name":"ptr","nativeSrc":"1926:3:9","nodeType":"YulIdentifier","src":"1926:3:9"},"variableNames":[{"name":"data","nativeSrc":"1918:4:9","nodeType":"YulIdentifier","src":"1918:4:9"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1946:1:9","nodeType":"YulLiteral","src":"1946:1:9","type":"","value":"0"},{"name":"ptr","nativeSrc":"1949:3:9","nodeType":"YulIdentifier","src":"1949:3:9"}],"functionName":{"name":"mstore","nativeSrc":"1939:6:9","nodeType":"YulIdentifier","src":"1939:6:9"},"nativeSrc":"1939:14:9","nodeType":"YulFunctionCall","src":"1939:14:9"},"nativeSrc":"1939:14:9","nodeType":"YulExpressionStatement","src":"1939:14:9"},{"nativeSrc":"1962:26:9","nodeType":"YulAssignment","src":"1962:26:9","value":{"arguments":[{"kind":"number","nativeSrc":"1980:1:9","nodeType":"YulLiteral","src":"1980:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1983:4:9","nodeType":"YulLiteral","src":"1983:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1970:9:9","nodeType":"YulIdentifier","src":"1970:9:9"},"nativeSrc":"1970:18:9","nodeType":"YulFunctionCall","src":"1970:18:9"},"variableNames":[{"name":"data","nativeSrc":"1962:4:9","nodeType":"YulIdentifier","src":"1962:4:9"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"1854:141:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1895:3:9","nodeType":"YulTypedName","src":"1895:3:9","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1903:4:9","nodeType":"YulTypedName","src":"1903:4:9","type":""}],"src":"1854:141:9"},{"body":{"nativeSrc":"2045:49:9","nodeType":"YulBlock","src":"2045:49:9","statements":[{"nativeSrc":"2055:33:9","nodeType":"YulAssignment","src":"2055:33:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2073:5:9","nodeType":"YulIdentifier","src":"2073:5:9"},{"kind":"number","nativeSrc":"2080:2:9","nodeType":"YulLiteral","src":"2080:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2069:3:9","nodeType":"YulIdentifier","src":"2069:3:9"},"nativeSrc":"2069:14:9","nodeType":"YulFunctionCall","src":"2069:14:9"},{"kind":"number","nativeSrc":"2085:2:9","nodeType":"YulLiteral","src":"2085:2:9","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2065:3:9","nodeType":"YulIdentifier","src":"2065:3:9"},"nativeSrc":"2065:23:9","nodeType":"YulFunctionCall","src":"2065:23:9"},"variableNames":[{"name":"result","nativeSrc":"2055:6:9","nodeType":"YulIdentifier","src":"2055:6:9"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2001:93:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2028:5:9","nodeType":"YulTypedName","src":"2028:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2038:6:9","nodeType":"YulTypedName","src":"2038:6:9","type":""}],"src":"2001:93:9"},{"body":{"nativeSrc":"2153:54:9","nodeType":"YulBlock","src":"2153:54:9","statements":[{"nativeSrc":"2163:37:9","nodeType":"YulAssignment","src":"2163:37:9","value":{"arguments":[{"name":"bits","nativeSrc":"2188:4:9","nodeType":"YulIdentifier","src":"2188:4:9"},{"name":"value","nativeSrc":"2194:5:9","nodeType":"YulIdentifier","src":"2194:5:9"}],"functionName":{"name":"shl","nativeSrc":"2184:3:9","nodeType":"YulIdentifier","src":"2184:3:9"},"nativeSrc":"2184:16:9","nodeType":"YulFunctionCall","src":"2184:16:9"},"variableNames":[{"name":"newValue","nativeSrc":"2163:8:9","nodeType":"YulIdentifier","src":"2163:8:9"}]}]},"name":"shift_left_dynamic","nativeSrc":"2100:107:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2128:4:9","nodeType":"YulTypedName","src":"2128:4:9","type":""},{"name":"value","nativeSrc":"2134:5:9","nodeType":"YulTypedName","src":"2134:5:9","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2144:8:9","nodeType":"YulTypedName","src":"2144:8:9","type":""}],"src":"2100:107:9"},{"body":{"nativeSrc":"2289:317:9","nodeType":"YulBlock","src":"2289:317:9","statements":[{"nativeSrc":"2299:35:9","nodeType":"YulVariableDeclaration","src":"2299:35:9","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2320:10:9","nodeType":"YulIdentifier","src":"2320:10:9"},{"kind":"number","nativeSrc":"2332:1:9","nodeType":"YulLiteral","src":"2332:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2316:3:9","nodeType":"YulIdentifier","src":"2316:3:9"},"nativeSrc":"2316:18:9","nodeType":"YulFunctionCall","src":"2316:18:9"},"variables":[{"name":"shiftBits","nativeSrc":"2303:9:9","nodeType":"YulTypedName","src":"2303:9:9","type":""}]},{"nativeSrc":"2343:109:9","nodeType":"YulVariableDeclaration","src":"2343:109:9","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2374:9:9","nodeType":"YulIdentifier","src":"2374:9:9"},{"kind":"number","nativeSrc":"2385:66:9","nodeType":"YulLiteral","src":"2385:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2355:18:9","nodeType":"YulIdentifier","src":"2355:18:9"},"nativeSrc":"2355:97:9","nodeType":"YulFunctionCall","src":"2355:97:9"},"variables":[{"name":"mask","nativeSrc":"2347:4:9","nodeType":"YulTypedName","src":"2347:4:9","type":""}]},{"nativeSrc":"2461:51:9","nodeType":"YulAssignment","src":"2461:51:9","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2492:9:9","nodeType":"YulIdentifier","src":"2492:9:9"},{"name":"toInsert","nativeSrc":"2503:8:9","nodeType":"YulIdentifier","src":"2503:8:9"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2473:18:9","nodeType":"YulIdentifier","src":"2473:18:9"},"nativeSrc":"2473:39:9","nodeType":"YulFunctionCall","src":"2473:39:9"},"variableNames":[{"name":"toInsert","nativeSrc":"2461:8:9","nodeType":"YulIdentifier","src":"2461:8:9"}]},{"nativeSrc":"2521:30:9","nodeType":"YulAssignment","src":"2521:30:9","value":{"arguments":[{"name":"value","nativeSrc":"2534:5:9","nodeType":"YulIdentifier","src":"2534:5:9"},{"arguments":[{"name":"mask","nativeSrc":"2545:4:9","nodeType":"YulIdentifier","src":"2545:4:9"}],"functionName":{"name":"not","nativeSrc":"2541:3:9","nodeType":"YulIdentifier","src":"2541:3:9"},"nativeSrc":"2541:9:9","nodeType":"YulFunctionCall","src":"2541:9:9"}],"functionName":{"name":"and","nativeSrc":"2530:3:9","nodeType":"YulIdentifier","src":"2530:3:9"},"nativeSrc":"2530:21:9","nodeType":"YulFunctionCall","src":"2530:21:9"},"variableNames":[{"name":"value","nativeSrc":"2521:5:9","nodeType":"YulIdentifier","src":"2521:5:9"}]},{"nativeSrc":"2560:40:9","nodeType":"YulAssignment","src":"2560:40:9","value":{"arguments":[{"name":"value","nativeSrc":"2573:5:9","nodeType":"YulIdentifier","src":"2573:5:9"},{"arguments":[{"name":"toInsert","nativeSrc":"2584:8:9","nodeType":"YulIdentifier","src":"2584:8:9"},{"name":"mask","nativeSrc":"2594:4:9","nodeType":"YulIdentifier","src":"2594:4:9"}],"functionName":{"name":"and","nativeSrc":"2580:3:9","nodeType":"YulIdentifier","src":"2580:3:9"},"nativeSrc":"2580:19:9","nodeType":"YulFunctionCall","src":"2580:19:9"}],"functionName":{"name":"or","nativeSrc":"2570:2:9","nodeType":"YulIdentifier","src":"2570:2:9"},"nativeSrc":"2570:30:9","nodeType":"YulFunctionCall","src":"2570:30:9"},"variableNames":[{"name":"result","nativeSrc":"2560:6:9","nodeType":"YulIdentifier","src":"2560:6:9"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2213:393:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2250:5:9","nodeType":"YulTypedName","src":"2250:5:9","type":""},{"name":"shiftBytes","nativeSrc":"2257:10:9","nodeType":"YulTypedName","src":"2257:10:9","type":""},{"name":"toInsert","nativeSrc":"2269:8:9","nodeType":"YulTypedName","src":"2269:8:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2282:6:9","nodeType":"YulTypedName","src":"2282:6:9","type":""}],"src":"2213:393:9"},{"body":{"nativeSrc":"2644:28:9","nodeType":"YulBlock","src":"2644:28:9","statements":[{"nativeSrc":"2654:12:9","nodeType":"YulAssignment","src":"2654:12:9","value":{"name":"value","nativeSrc":"2661:5:9","nodeType":"YulIdentifier","src":"2661:5:9"},"variableNames":[{"name":"ret","nativeSrc":"2654:3:9","nodeType":"YulIdentifier","src":"2654:3:9"}]}]},"name":"identity","nativeSrc":"2612:60:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2630:5:9","nodeType":"YulTypedName","src":"2630:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2640:3:9","nodeType":"YulTypedName","src":"2640:3:9","type":""}],"src":"2612:60:9"},{"body":{"nativeSrc":"2738:82:9","nodeType":"YulBlock","src":"2738:82:9","statements":[{"nativeSrc":"2748:66:9","nodeType":"YulAssignment","src":"2748:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2806:5:9","nodeType":"YulIdentifier","src":"2806:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2788:17:9","nodeType":"YulIdentifier","src":"2788:17:9"},"nativeSrc":"2788:24:9","nodeType":"YulFunctionCall","src":"2788:24:9"}],"functionName":{"name":"identity","nativeSrc":"2779:8:9","nodeType":"YulIdentifier","src":"2779:8:9"},"nativeSrc":"2779:34:9","nodeType":"YulFunctionCall","src":"2779:34:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2761:17:9","nodeType":"YulIdentifier","src":"2761:17:9"},"nativeSrc":"2761:53:9","nodeType":"YulFunctionCall","src":"2761:53:9"},"variableNames":[{"name":"converted","nativeSrc":"2748:9:9","nodeType":"YulIdentifier","src":"2748:9:9"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2678:142:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2718:5:9","nodeType":"YulTypedName","src":"2718:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2728:9:9","nodeType":"YulTypedName","src":"2728:9:9","type":""}],"src":"2678:142:9"},{"body":{"nativeSrc":"2873:28:9","nodeType":"YulBlock","src":"2873:28:9","statements":[{"nativeSrc":"2883:12:9","nodeType":"YulAssignment","src":"2883:12:9","value":{"name":"value","nativeSrc":"2890:5:9","nodeType":"YulIdentifier","src":"2890:5:9"},"variableNames":[{"name":"ret","nativeSrc":"2883:3:9","nodeType":"YulIdentifier","src":"2883:3:9"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"2826:75:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2859:5:9","nodeType":"YulTypedName","src":"2859:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2869:3:9","nodeType":"YulTypedName","src":"2869:3:9","type":""}],"src":"2826:75:9"},{"body":{"nativeSrc":"2983:193:9","nodeType":"YulBlock","src":"2983:193:9","statements":[{"nativeSrc":"2993:63:9","nodeType":"YulVariableDeclaration","src":"2993:63:9","value":{"arguments":[{"name":"value_0","nativeSrc":"3048:7:9","nodeType":"YulIdentifier","src":"3048:7:9"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3017:30:9","nodeType":"YulIdentifier","src":"3017:30:9"},"nativeSrc":"3017:39:9","nodeType":"YulFunctionCall","src":"3017:39:9"},"variables":[{"name":"convertedValue_0","nativeSrc":"2997:16:9","nodeType":"YulTypedName","src":"2997:16:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3072:4:9","nodeType":"YulIdentifier","src":"3072:4:9"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3112:4:9","nodeType":"YulIdentifier","src":"3112:4:9"}],"functionName":{"name":"sload","nativeSrc":"3106:5:9","nodeType":"YulIdentifier","src":"3106:5:9"},"nativeSrc":"3106:11:9","nodeType":"YulFunctionCall","src":"3106:11:9"},{"name":"offset","nativeSrc":"3119:6:9","nodeType":"YulIdentifier","src":"3119:6:9"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3151:16:9","nodeType":"YulIdentifier","src":"3151:16:9"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3127:23:9","nodeType":"YulIdentifier","src":"3127:23:9"},"nativeSrc":"3127:41:9","nodeType":"YulFunctionCall","src":"3127:41:9"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3078:27:9","nodeType":"YulIdentifier","src":"3078:27:9"},"nativeSrc":"3078:91:9","nodeType":"YulFunctionCall","src":"3078:91:9"}],"functionName":{"name":"sstore","nativeSrc":"3065:6:9","nodeType":"YulIdentifier","src":"3065:6:9"},"nativeSrc":"3065:105:9","nodeType":"YulFunctionCall","src":"3065:105:9"},"nativeSrc":"3065:105:9","nodeType":"YulExpressionStatement","src":"3065:105:9"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2907:269:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2960:4:9","nodeType":"YulTypedName","src":"2960:4:9","type":""},{"name":"offset","nativeSrc":"2966:6:9","nodeType":"YulTypedName","src":"2966:6:9","type":""},{"name":"value_0","nativeSrc":"2974:7:9","nodeType":"YulTypedName","src":"2974:7:9","type":""}],"src":"2907:269:9"},{"body":{"nativeSrc":"3231:24:9","nodeType":"YulBlock","src":"3231:24:9","statements":[{"nativeSrc":"3241:8:9","nodeType":"YulAssignment","src":"3241:8:9","value":{"kind":"number","nativeSrc":"3248:1:9","nodeType":"YulLiteral","src":"3248:1:9","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3241:3:9","nodeType":"YulIdentifier","src":"3241:3:9"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3182:73:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3227:3:9","nodeType":"YulTypedName","src":"3227:3:9","type":""}],"src":"3182:73:9"},{"body":{"nativeSrc":"3314:136:9","nodeType":"YulBlock","src":"3314:136:9","statements":[{"nativeSrc":"3324:46:9","nodeType":"YulVariableDeclaration","src":"3324:46:9","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3338:30:9","nodeType":"YulIdentifier","src":"3338:30:9"},"nativeSrc":"3338:32:9","nodeType":"YulFunctionCall","src":"3338:32:9"},"variables":[{"name":"zero_0","nativeSrc":"3328:6:9","nodeType":"YulTypedName","src":"3328:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3423:4:9","nodeType":"YulIdentifier","src":"3423:4:9"},{"name":"offset","nativeSrc":"3429:6:9","nodeType":"YulIdentifier","src":"3429:6:9"},{"name":"zero_0","nativeSrc":"3437:6:9","nodeType":"YulIdentifier","src":"3437:6:9"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3379:43:9","nodeType":"YulIdentifier","src":"3379:43:9"},"nativeSrc":"3379:65:9","nodeType":"YulFunctionCall","src":"3379:65:9"},"nativeSrc":"3379:65:9","nodeType":"YulExpressionStatement","src":"3379:65:9"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3261:189:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3300:4:9","nodeType":"YulTypedName","src":"3300:4:9","type":""},{"name":"offset","nativeSrc":"3306:6:9","nodeType":"YulTypedName","src":"3306:6:9","type":""}],"src":"3261:189:9"},{"body":{"nativeSrc":"3506:136:9","nodeType":"YulBlock","src":"3506:136:9","statements":[{"body":{"nativeSrc":"3573:63:9","nodeType":"YulBlock","src":"3573:63:9","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3617:5:9","nodeType":"YulIdentifier","src":"3617:5:9"},{"kind":"number","nativeSrc":"3624:1:9","nodeType":"YulLiteral","src":"3624:1:9","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3587:29:9","nodeType":"YulIdentifier","src":"3587:29:9"},"nativeSrc":"3587:39:9","nodeType":"YulFunctionCall","src":"3587:39:9"},"nativeSrc":"3587:39:9","nodeType":"YulExpressionStatement","src":"3587:39:9"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3526:5:9","nodeType":"YulIdentifier","src":"3526:5:9"},{"name":"end","nativeSrc":"3533:3:9","nodeType":"YulIdentifier","src":"3533:3:9"}],"functionName":{"name":"lt","nativeSrc":"3523:2:9","nodeType":"YulIdentifier","src":"3523:2:9"},"nativeSrc":"3523:14:9","nodeType":"YulFunctionCall","src":"3523:14:9"},"nativeSrc":"3516:120:9","nodeType":"YulForLoop","post":{"nativeSrc":"3538:26:9","nodeType":"YulBlock","src":"3538:26:9","statements":[{"nativeSrc":"3540:22:9","nodeType":"YulAssignment","src":"3540:22:9","value":{"arguments":[{"name":"start","nativeSrc":"3553:5:9","nodeType":"YulIdentifier","src":"3553:5:9"},{"kind":"number","nativeSrc":"3560:1:9","nodeType":"YulLiteral","src":"3560:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3549:3:9","nodeType":"YulIdentifier","src":"3549:3:9"},"nativeSrc":"3549:13:9","nodeType":"YulFunctionCall","src":"3549:13:9"},"variableNames":[{"name":"start","nativeSrc":"3540:5:9","nodeType":"YulIdentifier","src":"3540:5:9"}]}]},"pre":{"nativeSrc":"3520:2:9","nodeType":"YulBlock","src":"3520:2:9","statements":[]},"src":"3516:120:9"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3456:186:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3494:5:9","nodeType":"YulTypedName","src":"3494:5:9","type":""},{"name":"end","nativeSrc":"3501:3:9","nodeType":"YulTypedName","src":"3501:3:9","type":""}],"src":"3456:186:9"},{"body":{"nativeSrc":"3727:464:9","nodeType":"YulBlock","src":"3727:464:9","statements":[{"body":{"nativeSrc":"3753:431:9","nodeType":"YulBlock","src":"3753:431:9","statements":[{"nativeSrc":"3767:54:9","nodeType":"YulVariableDeclaration","src":"3767:54:9","value":{"arguments":[{"name":"array","nativeSrc":"3815:5:9","nodeType":"YulIdentifier","src":"3815:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"3783:31:9","nodeType":"YulIdentifier","src":"3783:31:9"},"nativeSrc":"3783:38:9","nodeType":"YulFunctionCall","src":"3783:38:9"},"variables":[{"name":"dataArea","nativeSrc":"3771:8:9","nodeType":"YulTypedName","src":"3771:8:9","type":""}]},{"nativeSrc":"3834:63:9","nodeType":"YulVariableDeclaration","src":"3834:63:9","value":{"arguments":[{"name":"dataArea","nativeSrc":"3857:8:9","nodeType":"YulIdentifier","src":"3857:8:9"},{"arguments":[{"name":"startIndex","nativeSrc":"3885:10:9","nodeType":"YulIdentifier","src":"3885:10:9"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3867:17:9","nodeType":"YulIdentifier","src":"3867:17:9"},"nativeSrc":"3867:29:9","nodeType":"YulFunctionCall","src":"3867:29:9"}],"functionName":{"name":"add","nativeSrc":"3853:3:9","nodeType":"YulIdentifier","src":"3853:3:9"},"nativeSrc":"3853:44:9","nodeType":"YulFunctionCall","src":"3853:44:9"},"variables":[{"name":"deleteStart","nativeSrc":"3838:11:9","nodeType":"YulTypedName","src":"3838:11:9","type":""}]},{"body":{"nativeSrc":"4054:27:9","nodeType":"YulBlock","src":"4054:27:9","statements":[{"nativeSrc":"4056:23:9","nodeType":"YulAssignment","src":"4056:23:9","value":{"name":"dataArea","nativeSrc":"4071:8:9","nodeType":"YulIdentifier","src":"4071:8:9"},"variableNames":[{"name":"deleteStart","nativeSrc":"4056:11:9","nodeType":"YulIdentifier","src":"4056:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4038:10:9","nodeType":"YulIdentifier","src":"4038:10:9"},{"kind":"number","nativeSrc":"4050:2:9","nodeType":"YulLiteral","src":"4050:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4035:2:9","nodeType":"YulIdentifier","src":"4035:2:9"},"nativeSrc":"4035:18:9","nodeType":"YulFunctionCall","src":"4035:18:9"},"nativeSrc":"4032:49:9","nodeType":"YulIf","src":"4032:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4123:11:9","nodeType":"YulIdentifier","src":"4123:11:9"},{"arguments":[{"name":"dataArea","nativeSrc":"4140:8:9","nodeType":"YulIdentifier","src":"4140:8:9"},{"arguments":[{"name":"len","nativeSrc":"4168:3:9","nodeType":"YulIdentifier","src":"4168:3:9"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4150:17:9","nodeType":"YulIdentifier","src":"4150:17:9"},"nativeSrc":"4150:22:9","nodeType":"YulFunctionCall","src":"4150:22:9"}],"functionName":{"name":"add","nativeSrc":"4136:3:9","nodeType":"YulIdentifier","src":"4136:3:9"},"nativeSrc":"4136:37:9","nodeType":"YulFunctionCall","src":"4136:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4094:28:9","nodeType":"YulIdentifier","src":"4094:28:9"},"nativeSrc":"4094:80:9","nodeType":"YulFunctionCall","src":"4094:80:9"},"nativeSrc":"4094:80:9","nodeType":"YulExpressionStatement","src":"4094:80:9"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3744:3:9","nodeType":"YulIdentifier","src":"3744:3:9"},{"kind":"number","nativeSrc":"3749:2:9","nodeType":"YulLiteral","src":"3749:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3741:2:9","nodeType":"YulIdentifier","src":"3741:2:9"},"nativeSrc":"3741:11:9","nodeType":"YulFunctionCall","src":"3741:11:9"},"nativeSrc":"3738:446:9","nodeType":"YulIf","src":"3738:446:9"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"3648:543:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3703:5:9","nodeType":"YulTypedName","src":"3703:5:9","type":""},{"name":"len","nativeSrc":"3710:3:9","nodeType":"YulTypedName","src":"3710:3:9","type":""},{"name":"startIndex","nativeSrc":"3715:10:9","nodeType":"YulTypedName","src":"3715:10:9","type":""}],"src":"3648:543:9"},{"body":{"nativeSrc":"4260:54:9","nodeType":"YulBlock","src":"4260:54:9","statements":[{"nativeSrc":"4270:37:9","nodeType":"YulAssignment","src":"4270:37:9","value":{"arguments":[{"name":"bits","nativeSrc":"4295:4:9","nodeType":"YulIdentifier","src":"4295:4:9"},{"name":"value","nativeSrc":"4301:5:9","nodeType":"YulIdentifier","src":"4301:5:9"}],"functionName":{"name":"shr","nativeSrc":"4291:3:9","nodeType":"YulIdentifier","src":"4291:3:9"},"nativeSrc":"4291:16:9","nodeType":"YulFunctionCall","src":"4291:16:9"},"variableNames":[{"name":"newValue","nativeSrc":"4270:8:9","nodeType":"YulIdentifier","src":"4270:8:9"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4197:117:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4235:4:9","nodeType":"YulTypedName","src":"4235:4:9","type":""},{"name":"value","nativeSrc":"4241:5:9","nodeType":"YulTypedName","src":"4241:5:9","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4251:8:9","nodeType":"YulTypedName","src":"4251:8:9","type":""}],"src":"4197:117:9"},{"body":{"nativeSrc":"4371:118:9","nodeType":"YulBlock","src":"4371:118:9","statements":[{"nativeSrc":"4381:68:9","nodeType":"YulVariableDeclaration","src":"4381:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4430:1:9","nodeType":"YulLiteral","src":"4430:1:9","type":"","value":"8"},{"name":"bytes","nativeSrc":"4433:5:9","nodeType":"YulIdentifier","src":"4433:5:9"}],"functionName":{"name":"mul","nativeSrc":"4426:3:9","nodeType":"YulIdentifier","src":"4426:3:9"},"nativeSrc":"4426:13:9","nodeType":"YulFunctionCall","src":"4426:13:9"},{"arguments":[{"kind":"number","nativeSrc":"4445:1:9","nodeType":"YulLiteral","src":"4445:1:9","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4441:3:9","nodeType":"YulIdentifier","src":"4441:3:9"},"nativeSrc":"4441:6:9","nodeType":"YulFunctionCall","src":"4441:6:9"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4397:28:9","nodeType":"YulIdentifier","src":"4397:28:9"},"nativeSrc":"4397:51:9","nodeType":"YulFunctionCall","src":"4397:51:9"}],"functionName":{"name":"not","nativeSrc":"4393:3:9","nodeType":"YulIdentifier","src":"4393:3:9"},"nativeSrc":"4393:56:9","nodeType":"YulFunctionCall","src":"4393:56:9"},"variables":[{"name":"mask","nativeSrc":"4385:4:9","nodeType":"YulTypedName","src":"4385:4:9","type":""}]},{"nativeSrc":"4458:25:9","nodeType":"YulAssignment","src":"4458:25:9","value":{"arguments":[{"name":"data","nativeSrc":"4472:4:9","nodeType":"YulIdentifier","src":"4472:4:9"},{"name":"mask","nativeSrc":"4478:4:9","nodeType":"YulIdentifier","src":"4478:4:9"}],"functionName":{"name":"and","nativeSrc":"4468:3:9","nodeType":"YulIdentifier","src":"4468:3:9"},"nativeSrc":"4468:15:9","nodeType":"YulFunctionCall","src":"4468:15:9"},"variableNames":[{"name":"result","nativeSrc":"4458:6:9","nodeType":"YulIdentifier","src":"4458:6:9"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4320:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4348:4:9","nodeType":"YulTypedName","src":"4348:4:9","type":""},{"name":"bytes","nativeSrc":"4354:5:9","nodeType":"YulTypedName","src":"4354:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4364:6:9","nodeType":"YulTypedName","src":"4364:6:9","type":""}],"src":"4320:169:9"},{"body":{"nativeSrc":"4575:214:9","nodeType":"YulBlock","src":"4575:214:9","statements":[{"nativeSrc":"4708:37:9","nodeType":"YulAssignment","src":"4708:37:9","value":{"arguments":[{"name":"data","nativeSrc":"4735:4:9","nodeType":"YulIdentifier","src":"4735:4:9"},{"name":"len","nativeSrc":"4741:3:9","nodeType":"YulIdentifier","src":"4741:3:9"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4716:18:9","nodeType":"YulIdentifier","src":"4716:18:9"},"nativeSrc":"4716:29:9","nodeType":"YulFunctionCall","src":"4716:29:9"},"variableNames":[{"name":"data","nativeSrc":"4708:4:9","nodeType":"YulIdentifier","src":"4708:4:9"}]},{"nativeSrc":"4754:29:9","nodeType":"YulAssignment","src":"4754:29:9","value":{"arguments":[{"name":"data","nativeSrc":"4765:4:9","nodeType":"YulIdentifier","src":"4765:4:9"},{"arguments":[{"kind":"number","nativeSrc":"4775:1:9","nodeType":"YulLiteral","src":"4775:1:9","type":"","value":"2"},{"name":"len","nativeSrc":"4778:3:9","nodeType":"YulIdentifier","src":"4778:3:9"}],"functionName":{"name":"mul","nativeSrc":"4771:3:9","nodeType":"YulIdentifier","src":"4771:3:9"},"nativeSrc":"4771:11:9","nodeType":"YulFunctionCall","src":"4771:11:9"}],"functionName":{"name":"or","nativeSrc":"4762:2:9","nodeType":"YulIdentifier","src":"4762:2:9"},"nativeSrc":"4762:21:9","nodeType":"YulFunctionCall","src":"4762:21:9"},"variableNames":[{"name":"used","nativeSrc":"4754:4:9","nodeType":"YulIdentifier","src":"4754:4:9"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4494:295:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4556:4:9","nodeType":"YulTypedName","src":"4556:4:9","type":""},{"name":"len","nativeSrc":"4562:3:9","nodeType":"YulTypedName","src":"4562:3:9","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4570:4:9","nodeType":"YulTypedName","src":"4570:4:9","type":""}],"src":"4494:295:9"},{"body":{"nativeSrc":"4886:1303:9","nodeType":"YulBlock","src":"4886:1303:9","statements":[{"nativeSrc":"4897:51:9","nodeType":"YulVariableDeclaration","src":"4897:51:9","value":{"arguments":[{"name":"src","nativeSrc":"4944:3:9","nodeType":"YulIdentifier","src":"4944:3:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"4911:32:9","nodeType":"YulIdentifier","src":"4911:32:9"},"nativeSrc":"4911:37:9","nodeType":"YulFunctionCall","src":"4911:37:9"},"variables":[{"name":"newLen","nativeSrc":"4901:6:9","nodeType":"YulTypedName","src":"4901:6:9","type":""}]},{"body":{"nativeSrc":"5033:22:9","nodeType":"YulBlock","src":"5033:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5035:16:9","nodeType":"YulIdentifier","src":"5035:16:9"},"nativeSrc":"5035:18:9","nodeType":"YulFunctionCall","src":"5035:18:9"},"nativeSrc":"5035:18:9","nodeType":"YulExpressionStatement","src":"5035:18:9"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5005:6:9","nodeType":"YulIdentifier","src":"5005:6:9"},{"kind":"number","nativeSrc":"5013:18:9","nodeType":"YulLiteral","src":"5013:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5002:2:9","nodeType":"YulIdentifier","src":"5002:2:9"},"nativeSrc":"5002:30:9","nodeType":"YulFunctionCall","src":"5002:30:9"},"nativeSrc":"4999:56:9","nodeType":"YulIf","src":"4999:56:9"},{"nativeSrc":"5065:52:9","nodeType":"YulVariableDeclaration","src":"5065:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5111:4:9","nodeType":"YulIdentifier","src":"5111:4:9"}],"functionName":{"name":"sload","nativeSrc":"5105:5:9","nodeType":"YulIdentifier","src":"5105:5:9"},"nativeSrc":"5105:11:9","nodeType":"YulFunctionCall","src":"5105:11:9"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5079:25:9","nodeType":"YulIdentifier","src":"5079:25:9"},"nativeSrc":"5079:38:9","nodeType":"YulFunctionCall","src":"5079:38:9"},"variables":[{"name":"oldLen","nativeSrc":"5069:6:9","nodeType":"YulTypedName","src":"5069:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5210:4:9","nodeType":"YulIdentifier","src":"5210:4:9"},{"name":"oldLen","nativeSrc":"5216:6:9","nodeType":"YulIdentifier","src":"5216:6:9"},{"name":"newLen","nativeSrc":"5224:6:9","nodeType":"YulIdentifier","src":"5224:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5164:45:9","nodeType":"YulIdentifier","src":"5164:45:9"},"nativeSrc":"5164:67:9","nodeType":"YulFunctionCall","src":"5164:67:9"},"nativeSrc":"5164:67:9","nodeType":"YulExpressionStatement","src":"5164:67:9"},{"nativeSrc":"5241:18:9","nodeType":"YulVariableDeclaration","src":"5241:18:9","value":{"kind":"number","nativeSrc":"5258:1:9","nodeType":"YulLiteral","src":"5258:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5245:9:9","nodeType":"YulTypedName","src":"5245:9:9","type":""}]},{"nativeSrc":"5269:17:9","nodeType":"YulAssignment","src":"5269:17:9","value":{"kind":"number","nativeSrc":"5282:4:9","nodeType":"YulLiteral","src":"5282:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5269:9:9","nodeType":"YulIdentifier","src":"5269:9:9"}]},{"cases":[{"body":{"nativeSrc":"5333:611:9","nodeType":"YulBlock","src":"5333:611:9","statements":[{"nativeSrc":"5347:37:9","nodeType":"YulVariableDeclaration","src":"5347:37:9","value":{"arguments":[{"name":"newLen","nativeSrc":"5366:6:9","nodeType":"YulIdentifier","src":"5366:6:9"},{"arguments":[{"kind":"number","nativeSrc":"5378:4:9","nodeType":"YulLiteral","src":"5378:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5374:3:9","nodeType":"YulIdentifier","src":"5374:3:9"},"nativeSrc":"5374:9:9","nodeType":"YulFunctionCall","src":"5374:9:9"}],"functionName":{"name":"and","nativeSrc":"5362:3:9","nodeType":"YulIdentifier","src":"5362:3:9"},"nativeSrc":"5362:22:9","nodeType":"YulFunctionCall","src":"5362:22:9"},"variables":[{"name":"loopEnd","nativeSrc":"5351:7:9","nodeType":"YulTypedName","src":"5351:7:9","type":""}]},{"nativeSrc":"5398:51:9","nodeType":"YulVariableDeclaration","src":"5398:51:9","value":{"arguments":[{"name":"slot","nativeSrc":"5444:4:9","nodeType":"YulIdentifier","src":"5444:4:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5412:31:9","nodeType":"YulIdentifier","src":"5412:31:9"},"nativeSrc":"5412:37:9","nodeType":"YulFunctionCall","src":"5412:37:9"},"variables":[{"name":"dstPtr","nativeSrc":"5402:6:9","nodeType":"YulTypedName","src":"5402:6:9","type":""}]},{"nativeSrc":"5462:10:9","nodeType":"YulVariableDeclaration","src":"5462:10:9","value":{"kind":"number","nativeSrc":"5471:1:9","nodeType":"YulLiteral","src":"5471:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5466:1:9","nodeType":"YulTypedName","src":"5466:1:9","type":""}]},{"body":{"nativeSrc":"5530:163:9","nodeType":"YulBlock","src":"5530:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5555:6:9","nodeType":"YulIdentifier","src":"5555:6:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5573:3:9","nodeType":"YulIdentifier","src":"5573:3:9"},{"name":"srcOffset","nativeSrc":"5578:9:9","nodeType":"YulIdentifier","src":"5578:9:9"}],"functionName":{"name":"add","nativeSrc":"5569:3:9","nodeType":"YulIdentifier","src":"5569:3:9"},"nativeSrc":"5569:19:9","nodeType":"YulFunctionCall","src":"5569:19:9"}],"functionName":{"name":"mload","nativeSrc":"5563:5:9","nodeType":"YulIdentifier","src":"5563:5:9"},"nativeSrc":"5563:26:9","nodeType":"YulFunctionCall","src":"5563:26:9"}],"functionName":{"name":"sstore","nativeSrc":"5548:6:9","nodeType":"YulIdentifier","src":"5548:6:9"},"nativeSrc":"5548:42:9","nodeType":"YulFunctionCall","src":"5548:42:9"},"nativeSrc":"5548:42:9","nodeType":"YulExpressionStatement","src":"5548:42:9"},{"nativeSrc":"5607:24:9","nodeType":"YulAssignment","src":"5607:24:9","value":{"arguments":[{"name":"dstPtr","nativeSrc":"5621:6:9","nodeType":"YulIdentifier","src":"5621:6:9"},{"kind":"number","nativeSrc":"5629:1:9","nodeType":"YulLiteral","src":"5629:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5617:3:9","nodeType":"YulIdentifier","src":"5617:3:9"},"nativeSrc":"5617:14:9","nodeType":"YulFunctionCall","src":"5617:14:9"},"variableNames":[{"name":"dstPtr","nativeSrc":"5607:6:9","nodeType":"YulIdentifier","src":"5607:6:9"}]},{"nativeSrc":"5648:31:9","nodeType":"YulAssignment","src":"5648:31:9","value":{"arguments":[{"name":"srcOffset","nativeSrc":"5665:9:9","nodeType":"YulIdentifier","src":"5665:9:9"},{"kind":"number","nativeSrc":"5676:2:9","nodeType":"YulLiteral","src":"5676:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5661:3:9","nodeType":"YulIdentifier","src":"5661:3:9"},"nativeSrc":"5661:18:9","nodeType":"YulFunctionCall","src":"5661:18:9"},"variableNames":[{"name":"srcOffset","nativeSrc":"5648:9:9","nodeType":"YulIdentifier","src":"5648:9:9"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5496:1:9","nodeType":"YulIdentifier","src":"5496:1:9"},{"name":"loopEnd","nativeSrc":"5499:7:9","nodeType":"YulIdentifier","src":"5499:7:9"}],"functionName":{"name":"lt","nativeSrc":"5493:2:9","nodeType":"YulIdentifier","src":"5493:2:9"},"nativeSrc":"5493:14:9","nodeType":"YulFunctionCall","src":"5493:14:9"},"nativeSrc":"5485:208:9","nodeType":"YulForLoop","post":{"nativeSrc":"5508:21:9","nodeType":"YulBlock","src":"5508:21:9","statements":[{"nativeSrc":"5510:17:9","nodeType":"YulAssignment","src":"5510:17:9","value":{"arguments":[{"name":"i","nativeSrc":"5519:1:9","nodeType":"YulIdentifier","src":"5519:1:9"},{"kind":"number","nativeSrc":"5522:4:9","nodeType":"YulLiteral","src":"5522:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5515:3:9","nodeType":"YulIdentifier","src":"5515:3:9"},"nativeSrc":"5515:12:9","nodeType":"YulFunctionCall","src":"5515:12:9"},"variableNames":[{"name":"i","nativeSrc":"5510:1:9","nodeType":"YulIdentifier","src":"5510:1:9"}]}]},"pre":{"nativeSrc":"5489:3:9","nodeType":"YulBlock","src":"5489:3:9","statements":[]},"src":"5485:208:9"},{"body":{"nativeSrc":"5729:156:9","nodeType":"YulBlock","src":"5729:156:9","statements":[{"nativeSrc":"5747:43:9","nodeType":"YulVariableDeclaration","src":"5747:43:9","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5774:3:9","nodeType":"YulIdentifier","src":"5774:3:9"},{"name":"srcOffset","nativeSrc":"5779:9:9","nodeType":"YulIdentifier","src":"5779:9:9"}],"functionName":{"name":"add","nativeSrc":"5770:3:9","nodeType":"YulIdentifier","src":"5770:3:9"},"nativeSrc":"5770:19:9","nodeType":"YulFunctionCall","src":"5770:19:9"}],"functionName":{"name":"mload","nativeSrc":"5764:5:9","nodeType":"YulIdentifier","src":"5764:5:9"},"nativeSrc":"5764:26:9","nodeType":"YulFunctionCall","src":"5764:26:9"},"variables":[{"name":"lastValue","nativeSrc":"5751:9:9","nodeType":"YulTypedName","src":"5751:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5814:6:9","nodeType":"YulIdentifier","src":"5814:6:9"},{"arguments":[{"name":"lastValue","nativeSrc":"5841:9:9","nodeType":"YulIdentifier","src":"5841:9:9"},{"arguments":[{"name":"newLen","nativeSrc":"5856:6:9","nodeType":"YulIdentifier","src":"5856:6:9"},{"kind":"number","nativeSrc":"5864:4:9","nodeType":"YulLiteral","src":"5864:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"5852:3:9","nodeType":"YulIdentifier","src":"5852:3:9"},"nativeSrc":"5852:17:9","nodeType":"YulFunctionCall","src":"5852:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5822:18:9","nodeType":"YulIdentifier","src":"5822:18:9"},"nativeSrc":"5822:48:9","nodeType":"YulFunctionCall","src":"5822:48:9"}],"functionName":{"name":"sstore","nativeSrc":"5807:6:9","nodeType":"YulIdentifier","src":"5807:6:9"},"nativeSrc":"5807:64:9","nodeType":"YulFunctionCall","src":"5807:64:9"},"nativeSrc":"5807:64:9","nodeType":"YulExpressionStatement","src":"5807:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"5712:7:9","nodeType":"YulIdentifier","src":"5712:7:9"},{"name":"newLen","nativeSrc":"5721:6:9","nodeType":"YulIdentifier","src":"5721:6:9"}],"functionName":{"name":"lt","nativeSrc":"5709:2:9","nodeType":"YulIdentifier","src":"5709:2:9"},"nativeSrc":"5709:19:9","nodeType":"YulFunctionCall","src":"5709:19:9"},"nativeSrc":"5706:179:9","nodeType":"YulIf","src":"5706:179:9"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5905:4:9","nodeType":"YulIdentifier","src":"5905:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"5919:6:9","nodeType":"YulIdentifier","src":"5919:6:9"},{"kind":"number","nativeSrc":"5927:1:9","nodeType":"YulLiteral","src":"5927:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"5915:3:9","nodeType":"YulIdentifier","src":"5915:3:9"},"nativeSrc":"5915:14:9","nodeType":"YulFunctionCall","src":"5915:14:9"},{"kind":"number","nativeSrc":"5931:1:9","nodeType":"YulLiteral","src":"5931:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5911:3:9","nodeType":"YulIdentifier","src":"5911:3:9"},"nativeSrc":"5911:22:9","nodeType":"YulFunctionCall","src":"5911:22:9"}],"functionName":{"name":"sstore","nativeSrc":"5898:6:9","nodeType":"YulIdentifier","src":"5898:6:9"},"nativeSrc":"5898:36:9","nodeType":"YulFunctionCall","src":"5898:36:9"},"nativeSrc":"5898:36:9","nodeType":"YulExpressionStatement","src":"5898:36:9"}]},"nativeSrc":"5326:618:9","nodeType":"YulCase","src":"5326:618:9","value":{"kind":"number","nativeSrc":"5331:1:9","nodeType":"YulLiteral","src":"5331:1:9","type":"","value":"1"}},{"body":{"nativeSrc":"5961:222:9","nodeType":"YulBlock","src":"5961:222:9","statements":[{"nativeSrc":"5975:14:9","nodeType":"YulVariableDeclaration","src":"5975:14:9","value":{"kind":"number","nativeSrc":"5988:1:9","nodeType":"YulLiteral","src":"5988:1:9","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5979:5:9","nodeType":"YulTypedName","src":"5979:5:9","type":""}]},{"body":{"nativeSrc":"6012:67:9","nodeType":"YulBlock","src":"6012:67:9","statements":[{"nativeSrc":"6030:35:9","nodeType":"YulAssignment","src":"6030:35:9","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6049:3:9","nodeType":"YulIdentifier","src":"6049:3:9"},{"name":"srcOffset","nativeSrc":"6054:9:9","nodeType":"YulIdentifier","src":"6054:9:9"}],"functionName":{"name":"add","nativeSrc":"6045:3:9","nodeType":"YulIdentifier","src":"6045:3:9"},"nativeSrc":"6045:19:9","nodeType":"YulFunctionCall","src":"6045:19:9"}],"functionName":{"name":"mload","nativeSrc":"6039:5:9","nodeType":"YulIdentifier","src":"6039:5:9"},"nativeSrc":"6039:26:9","nodeType":"YulFunctionCall","src":"6039:26:9"},"variableNames":[{"name":"value","nativeSrc":"6030:5:9","nodeType":"YulIdentifier","src":"6030:5:9"}]}]},"condition":{"name":"newLen","nativeSrc":"6005:6:9","nodeType":"YulIdentifier","src":"6005:6:9"},"nativeSrc":"6002:77:9","nodeType":"YulIf","src":"6002:77:9"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6099:4:9","nodeType":"YulIdentifier","src":"6099:4:9"},{"arguments":[{"name":"value","nativeSrc":"6158:5:9","nodeType":"YulIdentifier","src":"6158:5:9"},{"name":"newLen","nativeSrc":"6165:6:9","nodeType":"YulIdentifier","src":"6165:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6105:52:9","nodeType":"YulIdentifier","src":"6105:52:9"},"nativeSrc":"6105:67:9","nodeType":"YulFunctionCall","src":"6105:67:9"}],"functionName":{"name":"sstore","nativeSrc":"6092:6:9","nodeType":"YulIdentifier","src":"6092:6:9"},"nativeSrc":"6092:81:9","nodeType":"YulFunctionCall","src":"6092:81:9"},"nativeSrc":"6092:81:9","nodeType":"YulExpressionStatement","src":"6092:81:9"}]},"nativeSrc":"5953:230:9","nodeType":"YulCase","src":"5953:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5306:6:9","nodeType":"YulIdentifier","src":"5306:6:9"},{"kind":"number","nativeSrc":"5314:2:9","nodeType":"YulLiteral","src":"5314:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5303:2:9","nodeType":"YulIdentifier","src":"5303:2:9"},"nativeSrc":"5303:14:9","nodeType":"YulFunctionCall","src":"5303:14:9"},"nativeSrc":"5296:887:9","nodeType":"YulSwitch","src":"5296:887:9"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"4794:1395:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"4875:4:9","nodeType":"YulTypedName","src":"4875:4:9","type":""},{"name":"src","nativeSrc":"4881:3:9","nodeType":"YulTypedName","src":"4881:3:9","type":""}],"src":"4794:1395:9"},{"body":{"nativeSrc":"6240:81:9","nodeType":"YulBlock","src":"6240:81:9","statements":[{"nativeSrc":"6250:65:9","nodeType":"YulAssignment","src":"6250:65:9","value":{"arguments":[{"name":"value","nativeSrc":"6265:5:9","nodeType":"YulIdentifier","src":"6265:5:9"},{"kind":"number","nativeSrc":"6272:42:9","nodeType":"YulLiteral","src":"6272:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6261:3:9","nodeType":"YulIdentifier","src":"6261:3:9"},"nativeSrc":"6261:54:9","nodeType":"YulFunctionCall","src":"6261:54:9"},"variableNames":[{"name":"cleaned","nativeSrc":"6250:7:9","nodeType":"YulIdentifier","src":"6250:7:9"}]}]},"name":"cleanup_t_uint160","nativeSrc":"6195:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6222:5:9","nodeType":"YulTypedName","src":"6222:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6232:7:9","nodeType":"YulTypedName","src":"6232:7:9","type":""}],"src":"6195:126:9"},{"body":{"nativeSrc":"6372:51:9","nodeType":"YulBlock","src":"6372:51:9","statements":[{"nativeSrc":"6382:35:9","nodeType":"YulAssignment","src":"6382:35:9","value":{"arguments":[{"name":"value","nativeSrc":"6411:5:9","nodeType":"YulIdentifier","src":"6411:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"6393:17:9","nodeType":"YulIdentifier","src":"6393:17:9"},"nativeSrc":"6393:24:9","nodeType":"YulFunctionCall","src":"6393:24:9"},"variableNames":[{"name":"cleaned","nativeSrc":"6382:7:9","nodeType":"YulIdentifier","src":"6382:7:9"}]}]},"name":"cleanup_t_address","nativeSrc":"6327:96:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6354:5:9","nodeType":"YulTypedName","src":"6354:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6364:7:9","nodeType":"YulTypedName","src":"6364:7:9","type":""}],"src":"6327:96:9"},{"body":{"nativeSrc":"6494:53:9","nodeType":"YulBlock","src":"6494:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6511:3:9","nodeType":"YulIdentifier","src":"6511:3:9"},{"arguments":[{"name":"value","nativeSrc":"6534:5:9","nodeType":"YulIdentifier","src":"6534:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6516:17:9","nodeType":"YulIdentifier","src":"6516:17:9"},"nativeSrc":"6516:24:9","nodeType":"YulFunctionCall","src":"6516:24:9"}],"functionName":{"name":"mstore","nativeSrc":"6504:6:9","nodeType":"YulIdentifier","src":"6504:6:9"},"nativeSrc":"6504:37:9","nodeType":"YulFunctionCall","src":"6504:37:9"},"nativeSrc":"6504:37:9","nodeType":"YulExpressionStatement","src":"6504:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6429:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6482:5:9","nodeType":"YulTypedName","src":"6482:5:9","type":""},{"name":"pos","nativeSrc":"6489:3:9","nodeType":"YulTypedName","src":"6489:3:9","type":""}],"src":"6429:118:9"},{"body":{"nativeSrc":"6651:124:9","nodeType":"YulBlock","src":"6651:124:9","statements":[{"nativeSrc":"6661:26:9","nodeType":"YulAssignment","src":"6661:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"6673:9:9","nodeType":"YulIdentifier","src":"6673:9:9"},{"kind":"number","nativeSrc":"6684:2:9","nodeType":"YulLiteral","src":"6684:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6669:3:9","nodeType":"YulIdentifier","src":"6669:3:9"},"nativeSrc":"6669:18:9","nodeType":"YulFunctionCall","src":"6669:18:9"},"variableNames":[{"name":"tail","nativeSrc":"6661:4:9","nodeType":"YulIdentifier","src":"6661:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6741:6:9","nodeType":"YulIdentifier","src":"6741:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6754:9:9","nodeType":"YulIdentifier","src":"6754:9:9"},{"kind":"number","nativeSrc":"6765:1:9","nodeType":"YulLiteral","src":"6765:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6750:3:9","nodeType":"YulIdentifier","src":"6750:3:9"},"nativeSrc":"6750:17:9","nodeType":"YulFunctionCall","src":"6750:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6697:43:9","nodeType":"YulIdentifier","src":"6697:43:9"},"nativeSrc":"6697:71:9","nodeType":"YulFunctionCall","src":"6697:71:9"},"nativeSrc":"6697:71:9","nodeType":"YulExpressionStatement","src":"6697:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6553:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6623:9:9","nodeType":"YulTypedName","src":"6623:9:9","type":""},{"name":"value0","nativeSrc":"6635:6:9","nodeType":"YulTypedName","src":"6635:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6646:4:9","nodeType":"YulTypedName","src":"6646:4:9","type":""}],"src":"6553:222:9"},{"body":{"nativeSrc":"6809:152:9","nodeType":"YulBlock","src":"6809:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6826:1:9","nodeType":"YulLiteral","src":"6826:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6829:77:9","nodeType":"YulLiteral","src":"6829:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6819:6:9","nodeType":"YulIdentifier","src":"6819:6:9"},"nativeSrc":"6819:88:9","nodeType":"YulFunctionCall","src":"6819:88:9"},"nativeSrc":"6819:88:9","nodeType":"YulExpressionStatement","src":"6819:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6923:1:9","nodeType":"YulLiteral","src":"6923:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"6926:4:9","nodeType":"YulLiteral","src":"6926:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6916:6:9","nodeType":"YulIdentifier","src":"6916:6:9"},"nativeSrc":"6916:15:9","nodeType":"YulFunctionCall","src":"6916:15:9"},"nativeSrc":"6916:15:9","nodeType":"YulExpressionStatement","src":"6916:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6947:1:9","nodeType":"YulLiteral","src":"6947:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6950:4:9","nodeType":"YulLiteral","src":"6950:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6940:6:9","nodeType":"YulIdentifier","src":"6940:6:9"},"nativeSrc":"6940:15:9","nodeType":"YulFunctionCall","src":"6940:15:9"},"nativeSrc":"6940:15:9","nodeType":"YulExpressionStatement","src":"6940:15:9"}]},"name":"panic_error_0x11","nativeSrc":"6781:180:9","nodeType":"YulFunctionDefinition","src":"6781:180:9"},{"body":{"nativeSrc":"7011:147:9","nodeType":"YulBlock","src":"7011:147:9","statements":[{"nativeSrc":"7021:25:9","nodeType":"YulAssignment","src":"7021:25:9","value":{"arguments":[{"name":"x","nativeSrc":"7044:1:9","nodeType":"YulIdentifier","src":"7044:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7026:17:9","nodeType":"YulIdentifier","src":"7026:17:9"},"nativeSrc":"7026:20:9","nodeType":"YulFunctionCall","src":"7026:20:9"},"variableNames":[{"name":"x","nativeSrc":"7021:1:9","nodeType":"YulIdentifier","src":"7021:1:9"}]},{"nativeSrc":"7055:25:9","nodeType":"YulAssignment","src":"7055:25:9","value":{"arguments":[{"name":"y","nativeSrc":"7078:1:9","nodeType":"YulIdentifier","src":"7078:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7060:17:9","nodeType":"YulIdentifier","src":"7060:17:9"},"nativeSrc":"7060:20:9","nodeType":"YulFunctionCall","src":"7060:20:9"},"variableNames":[{"name":"y","nativeSrc":"7055:1:9","nodeType":"YulIdentifier","src":"7055:1:9"}]},{"nativeSrc":"7089:16:9","nodeType":"YulAssignment","src":"7089:16:9","value":{"arguments":[{"name":"x","nativeSrc":"7100:1:9","nodeType":"YulIdentifier","src":"7100:1:9"},{"name":"y","nativeSrc":"7103:1:9","nodeType":"YulIdentifier","src":"7103:1:9"}],"functionName":{"name":"add","nativeSrc":"7096:3:9","nodeType":"YulIdentifier","src":"7096:3:9"},"nativeSrc":"7096:9:9","nodeType":"YulFunctionCall","src":"7096:9:9"},"variableNames":[{"name":"sum","nativeSrc":"7089:3:9","nodeType":"YulIdentifier","src":"7089:3:9"}]},{"body":{"nativeSrc":"7129:22:9","nodeType":"YulBlock","src":"7129:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7131:16:9","nodeType":"YulIdentifier","src":"7131:16:9"},"nativeSrc":"7131:18:9","nodeType":"YulFunctionCall","src":"7131:18:9"},"nativeSrc":"7131:18:9","nodeType":"YulExpressionStatement","src":"7131:18:9"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7121:1:9","nodeType":"YulIdentifier","src":"7121:1:9"},{"name":"sum","nativeSrc":"7124:3:9","nodeType":"YulIdentifier","src":"7124:3:9"}],"functionName":{"name":"gt","nativeSrc":"7118:2:9","nodeType":"YulIdentifier","src":"7118:2:9"},"nativeSrc":"7118:10:9","nodeType":"YulFunctionCall","src":"7118:10:9"},"nativeSrc":"7115:36:9","nodeType":"YulIf","src":"7115:36:9"}]},"name":"checked_add_t_uint256","nativeSrc":"6967:191:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6998:1:9","nodeType":"YulTypedName","src":"6998:1:9","type":""},{"name":"y","nativeSrc":"7001:1:9","nodeType":"YulTypedName","src":"7001:1:9","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7007:3:9","nodeType":"YulTypedName","src":"7007:3:9","type":""}],"src":"6967:191:9"},{"body":{"nativeSrc":"7229:53:9","nodeType":"YulBlock","src":"7229:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7246:3:9","nodeType":"YulIdentifier","src":"7246:3:9"},{"arguments":[{"name":"value","nativeSrc":"7269:5:9","nodeType":"YulIdentifier","src":"7269:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7251:17:9","nodeType":"YulIdentifier","src":"7251:17:9"},"nativeSrc":"7251:24:9","nodeType":"YulFunctionCall","src":"7251:24:9"}],"functionName":{"name":"mstore","nativeSrc":"7239:6:9","nodeType":"YulIdentifier","src":"7239:6:9"},"nativeSrc":"7239:37:9","nodeType":"YulFunctionCall","src":"7239:37:9"},"nativeSrc":"7239:37:9","nodeType":"YulExpressionStatement","src":"7239:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7164:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7217:5:9","nodeType":"YulTypedName","src":"7217:5:9","type":""},{"name":"pos","nativeSrc":"7224:3:9","nodeType":"YulTypedName","src":"7224:3:9","type":""}],"src":"7164:118:9"},{"body":{"nativeSrc":"7442:288:9","nodeType":"YulBlock","src":"7442:288:9","statements":[{"nativeSrc":"7452:26:9","nodeType":"YulAssignment","src":"7452:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"7464:9:9","nodeType":"YulIdentifier","src":"7464:9:9"},{"kind":"number","nativeSrc":"7475:2:9","nodeType":"YulLiteral","src":"7475:2:9","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7460:3:9","nodeType":"YulIdentifier","src":"7460:3:9"},"nativeSrc":"7460:18:9","nodeType":"YulFunctionCall","src":"7460:18:9"},"variableNames":[{"name":"tail","nativeSrc":"7452:4:9","nodeType":"YulIdentifier","src":"7452:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7532:6:9","nodeType":"YulIdentifier","src":"7532:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7545:9:9","nodeType":"YulIdentifier","src":"7545:9:9"},{"kind":"number","nativeSrc":"7556:1:9","nodeType":"YulLiteral","src":"7556:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7541:3:9","nodeType":"YulIdentifier","src":"7541:3:9"},"nativeSrc":"7541:17:9","nodeType":"YulFunctionCall","src":"7541:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7488:43:9","nodeType":"YulIdentifier","src":"7488:43:9"},"nativeSrc":"7488:71:9","nodeType":"YulFunctionCall","src":"7488:71:9"},"nativeSrc":"7488:71:9","nodeType":"YulExpressionStatement","src":"7488:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7613:6:9","nodeType":"YulIdentifier","src":"7613:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7626:9:9","nodeType":"YulIdentifier","src":"7626:9:9"},{"kind":"number","nativeSrc":"7637:2:9","nodeType":"YulLiteral","src":"7637:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7622:3:9","nodeType":"YulIdentifier","src":"7622:3:9"},"nativeSrc":"7622:18:9","nodeType":"YulFunctionCall","src":"7622:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7569:43:9","nodeType":"YulIdentifier","src":"7569:43:9"},"nativeSrc":"7569:72:9","nodeType":"YulFunctionCall","src":"7569:72:9"},"nativeSrc":"7569:72:9","nodeType":"YulExpressionStatement","src":"7569:72:9"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7695:6:9","nodeType":"YulIdentifier","src":"7695:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7708:9:9","nodeType":"YulIdentifier","src":"7708:9:9"},{"kind":"number","nativeSrc":"7719:2:9","nodeType":"YulLiteral","src":"7719:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7704:3:9","nodeType":"YulIdentifier","src":"7704:3:9"},"nativeSrc":"7704:18:9","nodeType":"YulFunctionCall","src":"7704:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7651:43:9","nodeType":"YulIdentifier","src":"7651:43:9"},"nativeSrc":"7651:72:9","nodeType":"YulFunctionCall","src":"7651:72:9"},"nativeSrc":"7651:72:9","nodeType":"YulExpressionStatement","src":"7651:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7288:442:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7398:9:9","nodeType":"YulTypedName","src":"7398:9:9","type":""},{"name":"value2","nativeSrc":"7410:6:9","nodeType":"YulTypedName","src":"7410:6:9","type":""},{"name":"value1","nativeSrc":"7418:6:9","nodeType":"YulTypedName","src":"7418:6:9","type":""},{"name":"value0","nativeSrc":"7426:6:9","nodeType":"YulTypedName","src":"7426:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7437:4:9","nodeType":"YulTypedName","src":"7437:4:9","type":""}],"src":"7288:442:9"},{"body":{"nativeSrc":"7834:124:9","nodeType":"YulBlock","src":"7834:124:9","statements":[{"nativeSrc":"7844:26:9","nodeType":"YulAssignment","src":"7844:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"7856:9:9","nodeType":"YulIdentifier","src":"7856:9:9"},{"kind":"number","nativeSrc":"7867:2:9","nodeType":"YulLiteral","src":"7867:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7852:3:9","nodeType":"YulIdentifier","src":"7852:3:9"},"nativeSrc":"7852:18:9","nodeType":"YulFunctionCall","src":"7852:18:9"},"variableNames":[{"name":"tail","nativeSrc":"7844:4:9","nodeType":"YulIdentifier","src":"7844:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7924:6:9","nodeType":"YulIdentifier","src":"7924:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7937:9:9","nodeType":"YulIdentifier","src":"7937:9:9"},{"kind":"number","nativeSrc":"7948:1:9","nodeType":"YulLiteral","src":"7948:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7933:3:9","nodeType":"YulIdentifier","src":"7933:3:9"},"nativeSrc":"7933:17:9","nodeType":"YulFunctionCall","src":"7933:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7880:43:9","nodeType":"YulIdentifier","src":"7880:43:9"},"nativeSrc":"7880:71:9","nodeType":"YulFunctionCall","src":"7880:71:9"},"nativeSrc":"7880:71:9","nodeType":"YulExpressionStatement","src":"7880:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"7736:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7806:9:9","nodeType":"YulTypedName","src":"7806:9:9","type":""},{"name":"value0","nativeSrc":"7818:6:9","nodeType":"YulTypedName","src":"7818:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7829:4:9","nodeType":"YulTypedName","src":"7829:4:9","type":""}],"src":"7736:222:9"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001704380380620017048339818101604052810190620000379190620003df565b6040518060400160405280600681526020017f546f6b656e4100000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4100000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000681565b508060049081620000c6919062000681565b505050620000db3382620000e260201b60201c565b506200089f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001575760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200014e9190620007ad565b60405180910390fd5b6200016b600083836200016f60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001c5578060026000828254620001b89190620007f9565b925050819055506200029b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000254578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200024b9392919062000845565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002e6578060026000828254039250508190555062000333565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000392919062000882565b60405180910390a3505050565b600080fd5b6000819050919050565b620003b981620003a4565b8114620003c557600080fd5b50565b600081519050620003d981620003ae565b92915050565b600060208284031215620003f857620003f76200039f565b5b60006200040884828501620003c8565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049357607f821691505b602082108103620004a957620004a86200044b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004d4565b6200051f8683620004d4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005626200055c6200055684620003a4565b62000537565b620003a4565b9050919050565b6000819050919050565b6200057e8362000541565b620005966200058d8262000569565b848454620004e1565b825550505050565b600090565b620005ad6200059e565b620005ba81848462000573565b505050565b5b81811015620005e257620005d6600082620005a3565b600181019050620005c0565b5050565b601f8211156200063157620005fb81620004af565b6200060684620004c4565b8101602085101562000616578190505b6200062e6200062585620004c4565b830182620005bf565b50505b505050565b600082821c905092915050565b6000620006566000198460080262000636565b1980831691505092915050565b600062000671838362000643565b9150826002028217905092915050565b6200068c8262000411565b67ffffffffffffffff811115620006a857620006a76200041c565b5b620006b482546200047a565b620006c1828285620005e6565b600060209050601f831160018114620006f95760008415620006e4578287015190505b620006f0858262000663565b86555062000760565b601f1984166200070986620004af565b60005b8281101562000733578489015182556001820191506020850194506020810190506200070c565b868310156200075357848901516200074f601f89168262000643565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007958262000768565b9050919050565b620007a78162000788565b82525050565b6000602082019050620007c460008301846200079c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200080682620003a4565b91506200081383620003a4565b92508282019050808211156200082e576200082d620007ca565b5b92915050565b6200083f81620003a4565b82525050565b60006060820190506200085c60008301866200079c565b6200086b602083018562000834565b6200087a604083018462000834565b949350505050565b600060208201905062000899600083018462000834565b92915050565b610e5580620008af6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aa9565b60405180910390f35b6100d060048036038101906100cb9190610b64565b610292565b6040516100dd9190610bbf565b60405180910390f35b6100ee6102b5565b6040516100fb9190610be9565b60405180910390f35b61011e60048036038101906101199190610c04565b6102bf565b60405161012b9190610bbf565b60405180910390f35b61013c6102ee565b6040516101499190610c73565b60405180910390f35b61016c60048036038101906101679190610c8e565b6102f7565b6040516101799190610be9565b60405180910390f35b61018a61033f565b6040516101979190610aa9565b60405180910390f35b6101ba60048036038101906101b59190610b64565b6103d1565b6040516101c79190610bbf565b60405180910390f35b6101ea60048036038101906101e59190610cbb565b6103f4565b6040516101f79190610be9565b60405180910390f35b60606003805461020f90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2a565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e2858585610529565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e9818585610529565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061d565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105235781811015610513578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050a93929190610d6a565b60405180910390fd5b6105228484848403600061061d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105929190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106049190610da1565b60405180910390fd5b6106188383836107f4565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361068f5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106869190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107015760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f89190610da1565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e59190610be9565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084657806002600082825461083a9190610deb565b92505081905550610919565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108c993929190610d6a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096257806002600082825403925050819055506109af565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0c9190610be9565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a53578082015181840152602081019050610a38565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7b82610a19565b610a858185610a24565b9350610a95818560208601610a35565b610a9e81610a5f565b840191505092915050565b60006020820190508181036000830152610ac38184610a70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afb82610ad0565b9050919050565b610b0b81610af0565b8114610b1657600080fd5b50565b600081359050610b2881610b02565b92915050565b6000819050919050565b610b4181610b2e565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b60008060408385031215610b7b57610b7a610acb565b5b6000610b8985828601610b19565b9250506020610b9a85828601610b4f565b9150509250929050565b60008115159050919050565b610bb981610ba4565b82525050565b6000602082019050610bd46000830184610bb0565b92915050565b610be381610b2e565b82525050565b6000602082019050610bfe6000830184610bda565b92915050565b600080600060608486031215610c1d57610c1c610acb565b5b6000610c2b86828701610b19565b9350506020610c3c86828701610b19565b9250506040610c4d86828701610b4f565b9150509250925092565b600060ff82169050919050565b610c6d81610c57565b82525050565b6000602082019050610c886000830184610c64565b92915050565b600060208284031215610ca457610ca3610acb565b5b6000610cb284828501610b19565b91505092915050565b60008060408385031215610cd257610cd1610acb565b5b6000610ce085828601610b19565b9250506020610cf185828601610b19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4257607f821691505b602082108103610d5557610d54610cfb565b5b50919050565b610d6481610af0565b82525050565b6000606082019050610d7f6000830186610d5b565b610d8c6020830185610bda565b610d996040830184610bda565b949350505050565b6000602082019050610db66000830184610d5b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df682610b2e565b9150610e0183610b2e565b9250828201905080821115610e1957610e18610dbc565b5b9291505056fea2646970667358221220500789728d3ea455a3acf8db4fc4480ac7c7ab919f99e34bdf0f2cae9769e4de64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1704 CODESIZE SUB DUP1 PUSH3 0x1704 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E410000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544B410000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x681 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x681 JUMP JUMPDEST POP POP POP PUSH3 0xDB CALLER DUP3 PUSH3 0xE2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x89F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x157 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14E SWAP2 SWAP1 PUSH3 0x7AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x16B PUSH1 0x0 DUP4 DUP4 PUSH3 0x16F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1C5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1B8 SWAP2 SWAP1 PUSH3 0x7F9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x29B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x254 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2E6 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x333 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x392 SWAP2 SWAP1 PUSH3 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B9 DUP2 PUSH3 0x3A4 JUMP JUMPDEST DUP2 EQ PUSH3 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3D9 DUP2 PUSH3 0x3AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3F8 JUMPI PUSH3 0x3F7 PUSH3 0x39F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x408 DUP5 DUP3 DUP6 ADD PUSH3 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x493 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A9 JUMPI PUSH3 0x4A8 PUSH3 0x44B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x513 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4D4 JUMP JUMPDEST PUSH3 0x51F DUP7 DUP4 PUSH3 0x4D4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x562 PUSH3 0x55C PUSH3 0x556 DUP5 PUSH3 0x3A4 JUMP JUMPDEST PUSH3 0x537 JUMP JUMPDEST PUSH3 0x3A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x57E DUP4 PUSH3 0x541 JUMP JUMPDEST PUSH3 0x596 PUSH3 0x58D DUP3 PUSH3 0x569 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4E1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5AD PUSH3 0x59E JUMP JUMPDEST PUSH3 0x5BA DUP2 DUP5 DUP5 PUSH3 0x573 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5E2 JUMPI PUSH3 0x5D6 PUSH1 0x0 DUP3 PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x631 JUMPI PUSH3 0x5FB DUP2 PUSH3 0x4AF JUMP JUMPDEST PUSH3 0x606 DUP5 PUSH3 0x4C4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x616 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x62E PUSH3 0x625 DUP6 PUSH3 0x4C4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x656 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x636 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x671 DUP4 DUP4 PUSH3 0x643 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x68C DUP3 PUSH3 0x411 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A8 JUMPI PUSH3 0x6A7 PUSH3 0x41C JUMP JUMPDEST JUMPDEST PUSH3 0x6B4 DUP3 SLOAD PUSH3 0x47A JUMP JUMPDEST PUSH3 0x6C1 DUP3 DUP3 DUP6 PUSH3 0x5E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6F0 DUP6 DUP3 PUSH3 0x663 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x760 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x709 DUP7 PUSH3 0x4AF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x733 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x70C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x753 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x74F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x643 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x795 DUP3 PUSH3 0x768 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7A7 DUP2 PUSH3 0x788 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x79C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x806 DUP3 PUSH3 0x3A4 JUMP JUMPDEST SWAP2 POP PUSH3 0x813 DUP4 PUSH3 0x3A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x82E JUMPI PUSH3 0x82D PUSH3 0x7CA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x83F DUP2 PUSH3 0x3A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x85C PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x79C JUMP JUMPDEST PUSH3 0x86B PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x834 JUMP JUMPDEST PUSH3 0x87A PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x834 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x899 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE55 DUP1 PUSH3 0x8AF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x523 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x522 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x618 DUP4 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x846 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x962 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9AF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xA85 DUP2 DUP6 PUSH2 0xA24 JUMP JUMPDEST SWAP4 POP PUSH2 0xA95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0xA5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC3 DUP2 DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB28 DUP2 PUSH2 0xB02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP2 EQ PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5E DUP2 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB89 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9A DUP6 DUP3 DUP7 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB9 DUP2 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3C DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4D DUP7 DUP3 DUP8 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA4 JUMPI PUSH2 0xCA3 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB2 DUP5 DUP3 DUP6 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF1 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD55 JUMPI PUSH2 0xD54 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD64 DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP3 PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP4 PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0xDBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP SMOD DUP10 PUSH19 0x8D3EA455A3ACF8DB4FC4480AC7C7AB919F99E3 0x4B 0xDF 0xF 0x2C 0xAE SWAP8 PUSH10 0xE4DE64736F6C63430008 XOR STOP CALLER ","sourceMap":"170:144:7:-:0;;;202:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;271:32:7::1;277:10;289:13;271:5;;;:32;;:::i;:::-;202:109:::0;170:144;;7458:208:2;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;170:144:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_690":{"entryPoint":1155,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":1565,"id":750,"parameterSlots":4,"returnSlots":0},"@_msgSender_915":{"entryPoint":1147,"id":915,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_798":{"entryPoint":1173,"id":798,"parameterSlots":3,"returnSlots":0},"@_transfer_529":{"entryPoint":1321,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":2036,"id":606,"parameterSlots":3,"returnSlots":0},"@allowance_426":{"entryPoint":1012,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":658,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":759,"id":385,"parameterSlots":1,"returnSlots":1},"@decimals_363":{"entryPoint":750,"id":363,"parameterSlots":0,"returnSlots":1},"@name_345":{"entryPoint":512,"id":345,"parameterSlots":0,"returnSlots":1},"@symbol_354":{"entryPoint":831,"id":354,"parameterSlots":0,"returnSlots":1},"@totalSupply_372":{"entryPoint":693,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":703,"id":482,"parameterSlots":3,"returnSlots":1},"@transfer_409":{"entryPoint":977,"id":409,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3259,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3076,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2916,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3419,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2992,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3034,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3172,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3434,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3187,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2585,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2596,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3563,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2800,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2980,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2768,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2862,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3159,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2613,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3370,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3516,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3323,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2763,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2655,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2818,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2872,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7360:9","nodeType":"YulBlock","src":"0:7360:9","statements":[{"body":{"nativeSrc":"66:40:9","nodeType":"YulBlock","src":"66:40:9","statements":[{"nativeSrc":"77:22:9","nodeType":"YulAssignment","src":"77:22:9","value":{"arguments":[{"name":"value","nativeSrc":"93:5:9","nodeType":"YulIdentifier","src":"93:5:9"}],"functionName":{"name":"mload","nativeSrc":"87:5:9","nodeType":"YulIdentifier","src":"87:5:9"},"nativeSrc":"87:12:9","nodeType":"YulFunctionCall","src":"87:12:9"},"variableNames":[{"name":"length","nativeSrc":"77:6:9","nodeType":"YulIdentifier","src":"77:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:9","nodeType":"YulTypedName","src":"49:5:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:9","nodeType":"YulTypedName","src":"59:6:9","type":""}],"src":"7:99:9"},{"body":{"nativeSrc":"208:73:9","nodeType":"YulBlock","src":"208:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:9","nodeType":"YulIdentifier","src":"225:3:9"},{"name":"length","nativeSrc":"230:6:9","nodeType":"YulIdentifier","src":"230:6:9"}],"functionName":{"name":"mstore","nativeSrc":"218:6:9","nodeType":"YulIdentifier","src":"218:6:9"},"nativeSrc":"218:19:9","nodeType":"YulFunctionCall","src":"218:19:9"},"nativeSrc":"218:19:9","nodeType":"YulExpressionStatement","src":"218:19:9"},{"nativeSrc":"246:29:9","nodeType":"YulAssignment","src":"246:29:9","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:9","nodeType":"YulIdentifier","src":"265:3:9"},{"kind":"number","nativeSrc":"270:4:9","nodeType":"YulLiteral","src":"270:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:9","nodeType":"YulIdentifier","src":"261:3:9"},"nativeSrc":"261:14:9","nodeType":"YulFunctionCall","src":"261:14:9"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:9","nodeType":"YulIdentifier","src":"246:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:9","nodeType":"YulTypedName","src":"180:3:9","type":""},{"name":"length","nativeSrc":"185:6:9","nodeType":"YulTypedName","src":"185:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:9","nodeType":"YulTypedName","src":"196:11:9","type":""}],"src":"112:169:9"},{"body":{"nativeSrc":"349:184:9","nodeType":"YulBlock","src":"349:184:9","statements":[{"nativeSrc":"359:10:9","nodeType":"YulVariableDeclaration","src":"359:10:9","value":{"kind":"number","nativeSrc":"368:1:9","nodeType":"YulLiteral","src":"368:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:9","nodeType":"YulTypedName","src":"363:1:9","type":""}]},{"body":{"nativeSrc":"428:63:9","nodeType":"YulBlock","src":"428:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:9","nodeType":"YulIdentifier","src":"453:3:9"},{"name":"i","nativeSrc":"458:1:9","nodeType":"YulIdentifier","src":"458:1:9"}],"functionName":{"name":"add","nativeSrc":"449:3:9","nodeType":"YulIdentifier","src":"449:3:9"},"nativeSrc":"449:11:9","nodeType":"YulFunctionCall","src":"449:11:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:9","nodeType":"YulIdentifier","src":"472:3:9"},{"name":"i","nativeSrc":"477:1:9","nodeType":"YulIdentifier","src":"477:1:9"}],"functionName":{"name":"add","nativeSrc":"468:3:9","nodeType":"YulIdentifier","src":"468:3:9"},"nativeSrc":"468:11:9","nodeType":"YulFunctionCall","src":"468:11:9"}],"functionName":{"name":"mload","nativeSrc":"462:5:9","nodeType":"YulIdentifier","src":"462:5:9"},"nativeSrc":"462:18:9","nodeType":"YulFunctionCall","src":"462:18:9"}],"functionName":{"name":"mstore","nativeSrc":"442:6:9","nodeType":"YulIdentifier","src":"442:6:9"},"nativeSrc":"442:39:9","nodeType":"YulFunctionCall","src":"442:39:9"},"nativeSrc":"442:39:9","nodeType":"YulExpressionStatement","src":"442:39:9"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:9","nodeType":"YulIdentifier","src":"389:1:9"},{"name":"length","nativeSrc":"392:6:9","nodeType":"YulIdentifier","src":"392:6:9"}],"functionName":{"name":"lt","nativeSrc":"386:2:9","nodeType":"YulIdentifier","src":"386:2:9"},"nativeSrc":"386:13:9","nodeType":"YulFunctionCall","src":"386:13:9"},"nativeSrc":"378:113:9","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:9","nodeType":"YulBlock","src":"400:19:9","statements":[{"nativeSrc":"402:15:9","nodeType":"YulAssignment","src":"402:15:9","value":{"arguments":[{"name":"i","nativeSrc":"411:1:9","nodeType":"YulIdentifier","src":"411:1:9"},{"kind":"number","nativeSrc":"414:2:9","nodeType":"YulLiteral","src":"414:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:9","nodeType":"YulIdentifier","src":"407:3:9"},"nativeSrc":"407:10:9","nodeType":"YulFunctionCall","src":"407:10:9"},"variableNames":[{"name":"i","nativeSrc":"402:1:9","nodeType":"YulIdentifier","src":"402:1:9"}]}]},"pre":{"nativeSrc":"382:3:9","nodeType":"YulBlock","src":"382:3:9","statements":[]},"src":"378:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:9","nodeType":"YulIdentifier","src":"511:3:9"},{"name":"length","nativeSrc":"516:6:9","nodeType":"YulIdentifier","src":"516:6:9"}],"functionName":{"name":"add","nativeSrc":"507:3:9","nodeType":"YulIdentifier","src":"507:3:9"},"nativeSrc":"507:16:9","nodeType":"YulFunctionCall","src":"507:16:9"},{"kind":"number","nativeSrc":"525:1:9","nodeType":"YulLiteral","src":"525:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:9","nodeType":"YulIdentifier","src":"500:6:9"},"nativeSrc":"500:27:9","nodeType":"YulFunctionCall","src":"500:27:9"},"nativeSrc":"500:27:9","nodeType":"YulExpressionStatement","src":"500:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:9","nodeType":"YulTypedName","src":"331:3:9","type":""},{"name":"dst","nativeSrc":"336:3:9","nodeType":"YulTypedName","src":"336:3:9","type":""},{"name":"length","nativeSrc":"341:6:9","nodeType":"YulTypedName","src":"341:6:9","type":""}],"src":"287:246:9"},{"body":{"nativeSrc":"587:54:9","nodeType":"YulBlock","src":"587:54:9","statements":[{"nativeSrc":"597:38:9","nodeType":"YulAssignment","src":"597:38:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:9","nodeType":"YulIdentifier","src":"615:5:9"},{"kind":"number","nativeSrc":"622:2:9","nodeType":"YulLiteral","src":"622:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:9","nodeType":"YulIdentifier","src":"611:3:9"},"nativeSrc":"611:14:9","nodeType":"YulFunctionCall","src":"611:14:9"},{"arguments":[{"kind":"number","nativeSrc":"631:2:9","nodeType":"YulLiteral","src":"631:2:9","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:9","nodeType":"YulIdentifier","src":"627:3:9"},"nativeSrc":"627:7:9","nodeType":"YulFunctionCall","src":"627:7:9"}],"functionName":{"name":"and","nativeSrc":"607:3:9","nodeType":"YulIdentifier","src":"607:3:9"},"nativeSrc":"607:28:9","nodeType":"YulFunctionCall","src":"607:28:9"},"variableNames":[{"name":"result","nativeSrc":"597:6:9","nodeType":"YulIdentifier","src":"597:6:9"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:9","nodeType":"YulTypedName","src":"570:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:9","nodeType":"YulTypedName","src":"580:6:9","type":""}],"src":"539:102:9"},{"body":{"nativeSrc":"739:285:9","nodeType":"YulBlock","src":"739:285:9","statements":[{"nativeSrc":"749:53:9","nodeType":"YulVariableDeclaration","src":"749:53:9","value":{"arguments":[{"name":"value","nativeSrc":"796:5:9","nodeType":"YulIdentifier","src":"796:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:9","nodeType":"YulIdentifier","src":"763:32:9"},"nativeSrc":"763:39:9","nodeType":"YulFunctionCall","src":"763:39:9"},"variables":[{"name":"length","nativeSrc":"753:6:9","nodeType":"YulTypedName","src":"753:6:9","type":""}]},{"nativeSrc":"811:78:9","nodeType":"YulAssignment","src":"811:78:9","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:9","nodeType":"YulIdentifier","src":"877:3:9"},{"name":"length","nativeSrc":"882:6:9","nodeType":"YulIdentifier","src":"882:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:9","nodeType":"YulIdentifier","src":"818:58:9"},"nativeSrc":"818:71:9","nodeType":"YulFunctionCall","src":"818:71:9"},"variableNames":[{"name":"pos","nativeSrc":"811:3:9","nodeType":"YulIdentifier","src":"811:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:9","nodeType":"YulIdentifier","src":"937:5:9"},{"kind":"number","nativeSrc":"944:4:9","nodeType":"YulLiteral","src":"944:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:9","nodeType":"YulIdentifier","src":"933:3:9"},"nativeSrc":"933:16:9","nodeType":"YulFunctionCall","src":"933:16:9"},{"name":"pos","nativeSrc":"951:3:9","nodeType":"YulIdentifier","src":"951:3:9"},{"name":"length","nativeSrc":"956:6:9","nodeType":"YulIdentifier","src":"956:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:9","nodeType":"YulIdentifier","src":"898:34:9"},"nativeSrc":"898:65:9","nodeType":"YulFunctionCall","src":"898:65:9"},"nativeSrc":"898:65:9","nodeType":"YulExpressionStatement","src":"898:65:9"},{"nativeSrc":"972:46:9","nodeType":"YulAssignment","src":"972:46:9","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:9","nodeType":"YulIdentifier","src":"983:3:9"},{"arguments":[{"name":"length","nativeSrc":"1010:6:9","nodeType":"YulIdentifier","src":"1010:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:9","nodeType":"YulIdentifier","src":"988:21:9"},"nativeSrc":"988:29:9","nodeType":"YulFunctionCall","src":"988:29:9"}],"functionName":{"name":"add","nativeSrc":"979:3:9","nodeType":"YulIdentifier","src":"979:3:9"},"nativeSrc":"979:39:9","nodeType":"YulFunctionCall","src":"979:39:9"},"variableNames":[{"name":"end","nativeSrc":"972:3:9","nodeType":"YulIdentifier","src":"972:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:9","nodeType":"YulTypedName","src":"720:5:9","type":""},{"name":"pos","nativeSrc":"727:3:9","nodeType":"YulTypedName","src":"727:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:9","nodeType":"YulTypedName","src":"735:3:9","type":""}],"src":"647:377:9"},{"body":{"nativeSrc":"1148:195:9","nodeType":"YulBlock","src":"1148:195:9","statements":[{"nativeSrc":"1158:26:9","nodeType":"YulAssignment","src":"1158:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:9","nodeType":"YulIdentifier","src":"1170:9:9"},{"kind":"number","nativeSrc":"1181:2:9","nodeType":"YulLiteral","src":"1181:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:9","nodeType":"YulIdentifier","src":"1166:3:9"},"nativeSrc":"1166:18:9","nodeType":"YulFunctionCall","src":"1166:18:9"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:9","nodeType":"YulIdentifier","src":"1158:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:9","nodeType":"YulIdentifier","src":"1205:9:9"},{"kind":"number","nativeSrc":"1216:1:9","nodeType":"YulLiteral","src":"1216:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:9","nodeType":"YulIdentifier","src":"1201:3:9"},"nativeSrc":"1201:17:9","nodeType":"YulFunctionCall","src":"1201:17:9"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:9","nodeType":"YulIdentifier","src":"1224:4:9"},{"name":"headStart","nativeSrc":"1230:9:9","nodeType":"YulIdentifier","src":"1230:9:9"}],"functionName":{"name":"sub","nativeSrc":"1220:3:9","nodeType":"YulIdentifier","src":"1220:3:9"},"nativeSrc":"1220:20:9","nodeType":"YulFunctionCall","src":"1220:20:9"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:9","nodeType":"YulIdentifier","src":"1194:6:9"},"nativeSrc":"1194:47:9","nodeType":"YulFunctionCall","src":"1194:47:9"},"nativeSrc":"1194:47:9","nodeType":"YulExpressionStatement","src":"1194:47:9"},{"nativeSrc":"1250:86:9","nodeType":"YulAssignment","src":"1250:86:9","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:9","nodeType":"YulIdentifier","src":"1322:6:9"},{"name":"tail","nativeSrc":"1331:4:9","nodeType":"YulIdentifier","src":"1331:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:9","nodeType":"YulIdentifier","src":"1258:63:9"},"nativeSrc":"1258:78:9","nodeType":"YulFunctionCall","src":"1258:78:9"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:9","nodeType":"YulIdentifier","src":"1250:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:9","nodeType":"YulTypedName","src":"1120:9:9","type":""},{"name":"value0","nativeSrc":"1132:6:9","nodeType":"YulTypedName","src":"1132:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:9","nodeType":"YulTypedName","src":"1143:4:9","type":""}],"src":"1030:313:9"},{"body":{"nativeSrc":"1389:35:9","nodeType":"YulBlock","src":"1389:35:9","statements":[{"nativeSrc":"1399:19:9","nodeType":"YulAssignment","src":"1399:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:9","nodeType":"YulLiteral","src":"1415:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:9","nodeType":"YulIdentifier","src":"1409:5:9"},"nativeSrc":"1409:9:9","nodeType":"YulFunctionCall","src":"1409:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:9","nodeType":"YulIdentifier","src":"1399:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:9","nodeType":"YulTypedName","src":"1382:6:9","type":""}],"src":"1349:75:9"},{"body":{"nativeSrc":"1519:28:9","nodeType":"YulBlock","src":"1519:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:9","nodeType":"YulLiteral","src":"1536:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:9","nodeType":"YulLiteral","src":"1539:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:9","nodeType":"YulIdentifier","src":"1529:6:9"},"nativeSrc":"1529:12:9","nodeType":"YulFunctionCall","src":"1529:12:9"},"nativeSrc":"1529:12:9","nodeType":"YulExpressionStatement","src":"1529:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:9","nodeType":"YulFunctionDefinition","src":"1430:117:9"},{"body":{"nativeSrc":"1642:28:9","nodeType":"YulBlock","src":"1642:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:9","nodeType":"YulLiteral","src":"1659:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:9","nodeType":"YulLiteral","src":"1662:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:9","nodeType":"YulIdentifier","src":"1652:6:9"},"nativeSrc":"1652:12:9","nodeType":"YulFunctionCall","src":"1652:12:9"},"nativeSrc":"1652:12:9","nodeType":"YulExpressionStatement","src":"1652:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:9","nodeType":"YulFunctionDefinition","src":"1553:117:9"},{"body":{"nativeSrc":"1721:81:9","nodeType":"YulBlock","src":"1721:81:9","statements":[{"nativeSrc":"1731:65:9","nodeType":"YulAssignment","src":"1731:65:9","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:9","nodeType":"YulIdentifier","src":"1746:5:9"},{"kind":"number","nativeSrc":"1753:42:9","nodeType":"YulLiteral","src":"1753:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:9","nodeType":"YulIdentifier","src":"1742:3:9"},"nativeSrc":"1742:54:9","nodeType":"YulFunctionCall","src":"1742:54:9"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:9","nodeType":"YulIdentifier","src":"1731:7:9"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:9","nodeType":"YulTypedName","src":"1703:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:9","nodeType":"YulTypedName","src":"1713:7:9","type":""}],"src":"1676:126:9"},{"body":{"nativeSrc":"1853:51:9","nodeType":"YulBlock","src":"1853:51:9","statements":[{"nativeSrc":"1863:35:9","nodeType":"YulAssignment","src":"1863:35:9","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:9","nodeType":"YulIdentifier","src":"1892:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:9","nodeType":"YulIdentifier","src":"1874:17:9"},"nativeSrc":"1874:24:9","nodeType":"YulFunctionCall","src":"1874:24:9"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:9","nodeType":"YulIdentifier","src":"1863:7:9"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:9","nodeType":"YulTypedName","src":"1835:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:9","nodeType":"YulTypedName","src":"1845:7:9","type":""}],"src":"1808:96:9"},{"body":{"nativeSrc":"1953:79:9","nodeType":"YulBlock","src":"1953:79:9","statements":[{"body":{"nativeSrc":"2010:16:9","nodeType":"YulBlock","src":"2010:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:9","nodeType":"YulLiteral","src":"2019:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:9","nodeType":"YulLiteral","src":"2022:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:9","nodeType":"YulIdentifier","src":"2012:6:9"},"nativeSrc":"2012:12:9","nodeType":"YulFunctionCall","src":"2012:12:9"},"nativeSrc":"2012:12:9","nodeType":"YulExpressionStatement","src":"2012:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:9","nodeType":"YulIdentifier","src":"1976:5:9"},{"arguments":[{"name":"value","nativeSrc":"2001:5:9","nodeType":"YulIdentifier","src":"2001:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:9","nodeType":"YulIdentifier","src":"1983:17:9"},"nativeSrc":"1983:24:9","nodeType":"YulFunctionCall","src":"1983:24:9"}],"functionName":{"name":"eq","nativeSrc":"1973:2:9","nodeType":"YulIdentifier","src":"1973:2:9"},"nativeSrc":"1973:35:9","nodeType":"YulFunctionCall","src":"1973:35:9"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:9","nodeType":"YulIdentifier","src":"1966:6:9"},"nativeSrc":"1966:43:9","nodeType":"YulFunctionCall","src":"1966:43:9"},"nativeSrc":"1963:63:9","nodeType":"YulIf","src":"1963:63:9"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:9","nodeType":"YulTypedName","src":"1946:5:9","type":""}],"src":"1910:122:9"},{"body":{"nativeSrc":"2090:87:9","nodeType":"YulBlock","src":"2090:87:9","statements":[{"nativeSrc":"2100:29:9","nodeType":"YulAssignment","src":"2100:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:9","nodeType":"YulIdentifier","src":"2122:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:9","nodeType":"YulIdentifier","src":"2109:12:9"},"nativeSrc":"2109:20:9","nodeType":"YulFunctionCall","src":"2109:20:9"},"variableNames":[{"name":"value","nativeSrc":"2100:5:9","nodeType":"YulIdentifier","src":"2100:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:9","nodeType":"YulIdentifier","src":"2165:5:9"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:9","nodeType":"YulIdentifier","src":"2138:26:9"},"nativeSrc":"2138:33:9","nodeType":"YulFunctionCall","src":"2138:33:9"},"nativeSrc":"2138:33:9","nodeType":"YulExpressionStatement","src":"2138:33:9"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:9","nodeType":"YulTypedName","src":"2068:6:9","type":""},{"name":"end","nativeSrc":"2076:3:9","nodeType":"YulTypedName","src":"2076:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:9","nodeType":"YulTypedName","src":"2084:5:9","type":""}],"src":"2038:139:9"},{"body":{"nativeSrc":"2228:32:9","nodeType":"YulBlock","src":"2228:32:9","statements":[{"nativeSrc":"2238:16:9","nodeType":"YulAssignment","src":"2238:16:9","value":{"name":"value","nativeSrc":"2249:5:9","nodeType":"YulIdentifier","src":"2249:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:9","nodeType":"YulIdentifier","src":"2238:7:9"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:9","nodeType":"YulTypedName","src":"2210:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:9","nodeType":"YulTypedName","src":"2220:7:9","type":""}],"src":"2183:77:9"},{"body":{"nativeSrc":"2309:79:9","nodeType":"YulBlock","src":"2309:79:9","statements":[{"body":{"nativeSrc":"2366:16:9","nodeType":"YulBlock","src":"2366:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:9","nodeType":"YulLiteral","src":"2375:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:9","nodeType":"YulLiteral","src":"2378:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:9","nodeType":"YulIdentifier","src":"2368:6:9"},"nativeSrc":"2368:12:9","nodeType":"YulFunctionCall","src":"2368:12:9"},"nativeSrc":"2368:12:9","nodeType":"YulExpressionStatement","src":"2368:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:9","nodeType":"YulIdentifier","src":"2332:5:9"},{"arguments":[{"name":"value","nativeSrc":"2357:5:9","nodeType":"YulIdentifier","src":"2357:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:9","nodeType":"YulIdentifier","src":"2339:17:9"},"nativeSrc":"2339:24:9","nodeType":"YulFunctionCall","src":"2339:24:9"}],"functionName":{"name":"eq","nativeSrc":"2329:2:9","nodeType":"YulIdentifier","src":"2329:2:9"},"nativeSrc":"2329:35:9","nodeType":"YulFunctionCall","src":"2329:35:9"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:9","nodeType":"YulIdentifier","src":"2322:6:9"},"nativeSrc":"2322:43:9","nodeType":"YulFunctionCall","src":"2322:43:9"},"nativeSrc":"2319:63:9","nodeType":"YulIf","src":"2319:63:9"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:9","nodeType":"YulTypedName","src":"2302:5:9","type":""}],"src":"2266:122:9"},{"body":{"nativeSrc":"2446:87:9","nodeType":"YulBlock","src":"2446:87:9","statements":[{"nativeSrc":"2456:29:9","nodeType":"YulAssignment","src":"2456:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:9","nodeType":"YulIdentifier","src":"2478:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:9","nodeType":"YulIdentifier","src":"2465:12:9"},"nativeSrc":"2465:20:9","nodeType":"YulFunctionCall","src":"2465:20:9"},"variableNames":[{"name":"value","nativeSrc":"2456:5:9","nodeType":"YulIdentifier","src":"2456:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:9","nodeType":"YulIdentifier","src":"2521:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:9","nodeType":"YulIdentifier","src":"2494:26:9"},"nativeSrc":"2494:33:9","nodeType":"YulFunctionCall","src":"2494:33:9"},"nativeSrc":"2494:33:9","nodeType":"YulExpressionStatement","src":"2494:33:9"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:9","nodeType":"YulTypedName","src":"2424:6:9","type":""},{"name":"end","nativeSrc":"2432:3:9","nodeType":"YulTypedName","src":"2432:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:9","nodeType":"YulTypedName","src":"2440:5:9","type":""}],"src":"2394:139:9"},{"body":{"nativeSrc":"2622:391:9","nodeType":"YulBlock","src":"2622:391:9","statements":[{"body":{"nativeSrc":"2668:83:9","nodeType":"YulBlock","src":"2668:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:9","nodeType":"YulIdentifier","src":"2670:77:9"},"nativeSrc":"2670:79:9","nodeType":"YulFunctionCall","src":"2670:79:9"},"nativeSrc":"2670:79:9","nodeType":"YulExpressionStatement","src":"2670:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:9","nodeType":"YulIdentifier","src":"2643:7:9"},{"name":"headStart","nativeSrc":"2652:9:9","nodeType":"YulIdentifier","src":"2652:9:9"}],"functionName":{"name":"sub","nativeSrc":"2639:3:9","nodeType":"YulIdentifier","src":"2639:3:9"},"nativeSrc":"2639:23:9","nodeType":"YulFunctionCall","src":"2639:23:9"},{"kind":"number","nativeSrc":"2664:2:9","nodeType":"YulLiteral","src":"2664:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:9","nodeType":"YulIdentifier","src":"2635:3:9"},"nativeSrc":"2635:32:9","nodeType":"YulFunctionCall","src":"2635:32:9"},"nativeSrc":"2632:119:9","nodeType":"YulIf","src":"2632:119:9"},{"nativeSrc":"2761:117:9","nodeType":"YulBlock","src":"2761:117:9","statements":[{"nativeSrc":"2776:15:9","nodeType":"YulVariableDeclaration","src":"2776:15:9","value":{"kind":"number","nativeSrc":"2790:1:9","nodeType":"YulLiteral","src":"2790:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:9","nodeType":"YulTypedName","src":"2780:6:9","type":""}]},{"nativeSrc":"2805:63:9","nodeType":"YulAssignment","src":"2805:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:9","nodeType":"YulIdentifier","src":"2840:9:9"},{"name":"offset","nativeSrc":"2851:6:9","nodeType":"YulIdentifier","src":"2851:6:9"}],"functionName":{"name":"add","nativeSrc":"2836:3:9","nodeType":"YulIdentifier","src":"2836:3:9"},"nativeSrc":"2836:22:9","nodeType":"YulFunctionCall","src":"2836:22:9"},{"name":"dataEnd","nativeSrc":"2860:7:9","nodeType":"YulIdentifier","src":"2860:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:9","nodeType":"YulIdentifier","src":"2815:20:9"},"nativeSrc":"2815:53:9","nodeType":"YulFunctionCall","src":"2815:53:9"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:9","nodeType":"YulIdentifier","src":"2805:6:9"}]}]},{"nativeSrc":"2888:118:9","nodeType":"YulBlock","src":"2888:118:9","statements":[{"nativeSrc":"2903:16:9","nodeType":"YulVariableDeclaration","src":"2903:16:9","value":{"kind":"number","nativeSrc":"2917:2:9","nodeType":"YulLiteral","src":"2917:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:9","nodeType":"YulTypedName","src":"2907:6:9","type":""}]},{"nativeSrc":"2933:63:9","nodeType":"YulAssignment","src":"2933:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:9","nodeType":"YulIdentifier","src":"2968:9:9"},{"name":"offset","nativeSrc":"2979:6:9","nodeType":"YulIdentifier","src":"2979:6:9"}],"functionName":{"name":"add","nativeSrc":"2964:3:9","nodeType":"YulIdentifier","src":"2964:3:9"},"nativeSrc":"2964:22:9","nodeType":"YulFunctionCall","src":"2964:22:9"},{"name":"dataEnd","nativeSrc":"2988:7:9","nodeType":"YulIdentifier","src":"2988:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:9","nodeType":"YulIdentifier","src":"2943:20:9"},"nativeSrc":"2943:53:9","nodeType":"YulFunctionCall","src":"2943:53:9"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:9","nodeType":"YulIdentifier","src":"2933:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:9","nodeType":"YulTypedName","src":"2584:9:9","type":""},{"name":"dataEnd","nativeSrc":"2595:7:9","nodeType":"YulTypedName","src":"2595:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:9","nodeType":"YulTypedName","src":"2607:6:9","type":""},{"name":"value1","nativeSrc":"2615:6:9","nodeType":"YulTypedName","src":"2615:6:9","type":""}],"src":"2539:474:9"},{"body":{"nativeSrc":"3061:48:9","nodeType":"YulBlock","src":"3061:48:9","statements":[{"nativeSrc":"3071:32:9","nodeType":"YulAssignment","src":"3071:32:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:9","nodeType":"YulIdentifier","src":"3096:5:9"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:9","nodeType":"YulIdentifier","src":"3089:6:9"},"nativeSrc":"3089:13:9","nodeType":"YulFunctionCall","src":"3089:13:9"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:9","nodeType":"YulIdentifier","src":"3082:6:9"},"nativeSrc":"3082:21:9","nodeType":"YulFunctionCall","src":"3082:21:9"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:9","nodeType":"YulIdentifier","src":"3071:7:9"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:9","nodeType":"YulTypedName","src":"3043:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:9","nodeType":"YulTypedName","src":"3053:7:9","type":""}],"src":"3019:90:9"},{"body":{"nativeSrc":"3174:50:9","nodeType":"YulBlock","src":"3174:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:9","nodeType":"YulIdentifier","src":"3191:3:9"},{"arguments":[{"name":"value","nativeSrc":"3211:5:9","nodeType":"YulIdentifier","src":"3211:5:9"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:9","nodeType":"YulIdentifier","src":"3196:14:9"},"nativeSrc":"3196:21:9","nodeType":"YulFunctionCall","src":"3196:21:9"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:9","nodeType":"YulIdentifier","src":"3184:6:9"},"nativeSrc":"3184:34:9","nodeType":"YulFunctionCall","src":"3184:34:9"},"nativeSrc":"3184:34:9","nodeType":"YulExpressionStatement","src":"3184:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:9","nodeType":"YulTypedName","src":"3162:5:9","type":""},{"name":"pos","nativeSrc":"3169:3:9","nodeType":"YulTypedName","src":"3169:3:9","type":""}],"src":"3115:109:9"},{"body":{"nativeSrc":"3322:118:9","nodeType":"YulBlock","src":"3322:118:9","statements":[{"nativeSrc":"3332:26:9","nodeType":"YulAssignment","src":"3332:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:9","nodeType":"YulIdentifier","src":"3344:9:9"},{"kind":"number","nativeSrc":"3355:2:9","nodeType":"YulLiteral","src":"3355:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:9","nodeType":"YulIdentifier","src":"3340:3:9"},"nativeSrc":"3340:18:9","nodeType":"YulFunctionCall","src":"3340:18:9"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:9","nodeType":"YulIdentifier","src":"3332:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:9","nodeType":"YulIdentifier","src":"3406:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:9","nodeType":"YulIdentifier","src":"3419:9:9"},{"kind":"number","nativeSrc":"3430:1:9","nodeType":"YulLiteral","src":"3430:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:9","nodeType":"YulIdentifier","src":"3415:3:9"},"nativeSrc":"3415:17:9","nodeType":"YulFunctionCall","src":"3415:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:9","nodeType":"YulIdentifier","src":"3368:37:9"},"nativeSrc":"3368:65:9","nodeType":"YulFunctionCall","src":"3368:65:9"},"nativeSrc":"3368:65:9","nodeType":"YulExpressionStatement","src":"3368:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:9","nodeType":"YulTypedName","src":"3294:9:9","type":""},{"name":"value0","nativeSrc":"3306:6:9","nodeType":"YulTypedName","src":"3306:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:9","nodeType":"YulTypedName","src":"3317:4:9","type":""}],"src":"3230:210:9"},{"body":{"nativeSrc":"3511:53:9","nodeType":"YulBlock","src":"3511:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:9","nodeType":"YulIdentifier","src":"3528:3:9"},{"arguments":[{"name":"value","nativeSrc":"3551:5:9","nodeType":"YulIdentifier","src":"3551:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:9","nodeType":"YulIdentifier","src":"3533:17:9"},"nativeSrc":"3533:24:9","nodeType":"YulFunctionCall","src":"3533:24:9"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:9","nodeType":"YulIdentifier","src":"3521:6:9"},"nativeSrc":"3521:37:9","nodeType":"YulFunctionCall","src":"3521:37:9"},"nativeSrc":"3521:37:9","nodeType":"YulExpressionStatement","src":"3521:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:9","nodeType":"YulTypedName","src":"3499:5:9","type":""},{"name":"pos","nativeSrc":"3506:3:9","nodeType":"YulTypedName","src":"3506:3:9","type":""}],"src":"3446:118:9"},{"body":{"nativeSrc":"3668:124:9","nodeType":"YulBlock","src":"3668:124:9","statements":[{"nativeSrc":"3678:26:9","nodeType":"YulAssignment","src":"3678:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:9","nodeType":"YulIdentifier","src":"3690:9:9"},{"kind":"number","nativeSrc":"3701:2:9","nodeType":"YulLiteral","src":"3701:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:9","nodeType":"YulIdentifier","src":"3686:3:9"},"nativeSrc":"3686:18:9","nodeType":"YulFunctionCall","src":"3686:18:9"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:9","nodeType":"YulIdentifier","src":"3678:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:9","nodeType":"YulIdentifier","src":"3758:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:9","nodeType":"YulIdentifier","src":"3771:9:9"},{"kind":"number","nativeSrc":"3782:1:9","nodeType":"YulLiteral","src":"3782:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:9","nodeType":"YulIdentifier","src":"3767:3:9"},"nativeSrc":"3767:17:9","nodeType":"YulFunctionCall","src":"3767:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:9","nodeType":"YulIdentifier","src":"3714:43:9"},"nativeSrc":"3714:71:9","nodeType":"YulFunctionCall","src":"3714:71:9"},"nativeSrc":"3714:71:9","nodeType":"YulExpressionStatement","src":"3714:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:9","nodeType":"YulTypedName","src":"3640:9:9","type":""},{"name":"value0","nativeSrc":"3652:6:9","nodeType":"YulTypedName","src":"3652:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:9","nodeType":"YulTypedName","src":"3663:4:9","type":""}],"src":"3570:222:9"},{"body":{"nativeSrc":"3898:519:9","nodeType":"YulBlock","src":"3898:519:9","statements":[{"body":{"nativeSrc":"3944:83:9","nodeType":"YulBlock","src":"3944:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:9","nodeType":"YulIdentifier","src":"3946:77:9"},"nativeSrc":"3946:79:9","nodeType":"YulFunctionCall","src":"3946:79:9"},"nativeSrc":"3946:79:9","nodeType":"YulExpressionStatement","src":"3946:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:9","nodeType":"YulIdentifier","src":"3919:7:9"},{"name":"headStart","nativeSrc":"3928:9:9","nodeType":"YulIdentifier","src":"3928:9:9"}],"functionName":{"name":"sub","nativeSrc":"3915:3:9","nodeType":"YulIdentifier","src":"3915:3:9"},"nativeSrc":"3915:23:9","nodeType":"YulFunctionCall","src":"3915:23:9"},{"kind":"number","nativeSrc":"3940:2:9","nodeType":"YulLiteral","src":"3940:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:9","nodeType":"YulIdentifier","src":"3911:3:9"},"nativeSrc":"3911:32:9","nodeType":"YulFunctionCall","src":"3911:32:9"},"nativeSrc":"3908:119:9","nodeType":"YulIf","src":"3908:119:9"},{"nativeSrc":"4037:117:9","nodeType":"YulBlock","src":"4037:117:9","statements":[{"nativeSrc":"4052:15:9","nodeType":"YulVariableDeclaration","src":"4052:15:9","value":{"kind":"number","nativeSrc":"4066:1:9","nodeType":"YulLiteral","src":"4066:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:9","nodeType":"YulTypedName","src":"4056:6:9","type":""}]},{"nativeSrc":"4081:63:9","nodeType":"YulAssignment","src":"4081:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:9","nodeType":"YulIdentifier","src":"4116:9:9"},{"name":"offset","nativeSrc":"4127:6:9","nodeType":"YulIdentifier","src":"4127:6:9"}],"functionName":{"name":"add","nativeSrc":"4112:3:9","nodeType":"YulIdentifier","src":"4112:3:9"},"nativeSrc":"4112:22:9","nodeType":"YulFunctionCall","src":"4112:22:9"},{"name":"dataEnd","nativeSrc":"4136:7:9","nodeType":"YulIdentifier","src":"4136:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:9","nodeType":"YulIdentifier","src":"4091:20:9"},"nativeSrc":"4091:53:9","nodeType":"YulFunctionCall","src":"4091:53:9"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:9","nodeType":"YulIdentifier","src":"4081:6:9"}]}]},{"nativeSrc":"4164:118:9","nodeType":"YulBlock","src":"4164:118:9","statements":[{"nativeSrc":"4179:16:9","nodeType":"YulVariableDeclaration","src":"4179:16:9","value":{"kind":"number","nativeSrc":"4193:2:9","nodeType":"YulLiteral","src":"4193:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:9","nodeType":"YulTypedName","src":"4183:6:9","type":""}]},{"nativeSrc":"4209:63:9","nodeType":"YulAssignment","src":"4209:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:9","nodeType":"YulIdentifier","src":"4244:9:9"},{"name":"offset","nativeSrc":"4255:6:9","nodeType":"YulIdentifier","src":"4255:6:9"}],"functionName":{"name":"add","nativeSrc":"4240:3:9","nodeType":"YulIdentifier","src":"4240:3:9"},"nativeSrc":"4240:22:9","nodeType":"YulFunctionCall","src":"4240:22:9"},{"name":"dataEnd","nativeSrc":"4264:7:9","nodeType":"YulIdentifier","src":"4264:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:9","nodeType":"YulIdentifier","src":"4219:20:9"},"nativeSrc":"4219:53:9","nodeType":"YulFunctionCall","src":"4219:53:9"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:9","nodeType":"YulIdentifier","src":"4209:6:9"}]}]},{"nativeSrc":"4292:118:9","nodeType":"YulBlock","src":"4292:118:9","statements":[{"nativeSrc":"4307:16:9","nodeType":"YulVariableDeclaration","src":"4307:16:9","value":{"kind":"number","nativeSrc":"4321:2:9","nodeType":"YulLiteral","src":"4321:2:9","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:9","nodeType":"YulTypedName","src":"4311:6:9","type":""}]},{"nativeSrc":"4337:63:9","nodeType":"YulAssignment","src":"4337:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:9","nodeType":"YulIdentifier","src":"4372:9:9"},{"name":"offset","nativeSrc":"4383:6:9","nodeType":"YulIdentifier","src":"4383:6:9"}],"functionName":{"name":"add","nativeSrc":"4368:3:9","nodeType":"YulIdentifier","src":"4368:3:9"},"nativeSrc":"4368:22:9","nodeType":"YulFunctionCall","src":"4368:22:9"},{"name":"dataEnd","nativeSrc":"4392:7:9","nodeType":"YulIdentifier","src":"4392:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:9","nodeType":"YulIdentifier","src":"4347:20:9"},"nativeSrc":"4347:53:9","nodeType":"YulFunctionCall","src":"4347:53:9"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:9","nodeType":"YulIdentifier","src":"4337:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:9","nodeType":"YulTypedName","src":"3852:9:9","type":""},{"name":"dataEnd","nativeSrc":"3863:7:9","nodeType":"YulTypedName","src":"3863:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:9","nodeType":"YulTypedName","src":"3875:6:9","type":""},{"name":"value1","nativeSrc":"3883:6:9","nodeType":"YulTypedName","src":"3883:6:9","type":""},{"name":"value2","nativeSrc":"3891:6:9","nodeType":"YulTypedName","src":"3891:6:9","type":""}],"src":"3798:619:9"},{"body":{"nativeSrc":"4466:43:9","nodeType":"YulBlock","src":"4466:43:9","statements":[{"nativeSrc":"4476:27:9","nodeType":"YulAssignment","src":"4476:27:9","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:9","nodeType":"YulIdentifier","src":"4491:5:9"},{"kind":"number","nativeSrc":"4498:4:9","nodeType":"YulLiteral","src":"4498:4:9","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:9","nodeType":"YulIdentifier","src":"4487:3:9"},"nativeSrc":"4487:16:9","nodeType":"YulFunctionCall","src":"4487:16:9"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:9","nodeType":"YulIdentifier","src":"4476:7:9"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:9","nodeType":"YulTypedName","src":"4448:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:9","nodeType":"YulTypedName","src":"4458:7:9","type":""}],"src":"4423:86:9"},{"body":{"nativeSrc":"4576:51:9","nodeType":"YulBlock","src":"4576:51:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:9","nodeType":"YulIdentifier","src":"4593:3:9"},{"arguments":[{"name":"value","nativeSrc":"4614:5:9","nodeType":"YulIdentifier","src":"4614:5:9"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:9","nodeType":"YulIdentifier","src":"4598:15:9"},"nativeSrc":"4598:22:9","nodeType":"YulFunctionCall","src":"4598:22:9"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:9","nodeType":"YulIdentifier","src":"4586:6:9"},"nativeSrc":"4586:35:9","nodeType":"YulFunctionCall","src":"4586:35:9"},"nativeSrc":"4586:35:9","nodeType":"YulExpressionStatement","src":"4586:35:9"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:9","nodeType":"YulTypedName","src":"4564:5:9","type":""},{"name":"pos","nativeSrc":"4571:3:9","nodeType":"YulTypedName","src":"4571:3:9","type":""}],"src":"4515:112:9"},{"body":{"nativeSrc":"4727:120:9","nodeType":"YulBlock","src":"4727:120:9","statements":[{"nativeSrc":"4737:26:9","nodeType":"YulAssignment","src":"4737:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:9","nodeType":"YulIdentifier","src":"4749:9:9"},{"kind":"number","nativeSrc":"4760:2:9","nodeType":"YulLiteral","src":"4760:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:9","nodeType":"YulIdentifier","src":"4745:3:9"},"nativeSrc":"4745:18:9","nodeType":"YulFunctionCall","src":"4745:18:9"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:9","nodeType":"YulIdentifier","src":"4737:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:9","nodeType":"YulIdentifier","src":"4813:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:9","nodeType":"YulIdentifier","src":"4826:9:9"},{"kind":"number","nativeSrc":"4837:1:9","nodeType":"YulLiteral","src":"4837:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:9","nodeType":"YulIdentifier","src":"4822:3:9"},"nativeSrc":"4822:17:9","nodeType":"YulFunctionCall","src":"4822:17:9"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:9","nodeType":"YulIdentifier","src":"4773:39:9"},"nativeSrc":"4773:67:9","nodeType":"YulFunctionCall","src":"4773:67:9"},"nativeSrc":"4773:67:9","nodeType":"YulExpressionStatement","src":"4773:67:9"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:9","nodeType":"YulTypedName","src":"4699:9:9","type":""},{"name":"value0","nativeSrc":"4711:6:9","nodeType":"YulTypedName","src":"4711:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:9","nodeType":"YulTypedName","src":"4722:4:9","type":""}],"src":"4633:214:9"},{"body":{"nativeSrc":"4919:263:9","nodeType":"YulBlock","src":"4919:263:9","statements":[{"body":{"nativeSrc":"4965:83:9","nodeType":"YulBlock","src":"4965:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4967:77:9","nodeType":"YulIdentifier","src":"4967:77:9"},"nativeSrc":"4967:79:9","nodeType":"YulFunctionCall","src":"4967:79:9"},"nativeSrc":"4967:79:9","nodeType":"YulExpressionStatement","src":"4967:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4940:7:9","nodeType":"YulIdentifier","src":"4940:7:9"},{"name":"headStart","nativeSrc":"4949:9:9","nodeType":"YulIdentifier","src":"4949:9:9"}],"functionName":{"name":"sub","nativeSrc":"4936:3:9","nodeType":"YulIdentifier","src":"4936:3:9"},"nativeSrc":"4936:23:9","nodeType":"YulFunctionCall","src":"4936:23:9"},{"kind":"number","nativeSrc":"4961:2:9","nodeType":"YulLiteral","src":"4961:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4932:3:9","nodeType":"YulIdentifier","src":"4932:3:9"},"nativeSrc":"4932:32:9","nodeType":"YulFunctionCall","src":"4932:32:9"},"nativeSrc":"4929:119:9","nodeType":"YulIf","src":"4929:119:9"},{"nativeSrc":"5058:117:9","nodeType":"YulBlock","src":"5058:117:9","statements":[{"nativeSrc":"5073:15:9","nodeType":"YulVariableDeclaration","src":"5073:15:9","value":{"kind":"number","nativeSrc":"5087:1:9","nodeType":"YulLiteral","src":"5087:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5077:6:9","nodeType":"YulTypedName","src":"5077:6:9","type":""}]},{"nativeSrc":"5102:63:9","nodeType":"YulAssignment","src":"5102:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5137:9:9","nodeType":"YulIdentifier","src":"5137:9:9"},{"name":"offset","nativeSrc":"5148:6:9","nodeType":"YulIdentifier","src":"5148:6:9"}],"functionName":{"name":"add","nativeSrc":"5133:3:9","nodeType":"YulIdentifier","src":"5133:3:9"},"nativeSrc":"5133:22:9","nodeType":"YulFunctionCall","src":"5133:22:9"},{"name":"dataEnd","nativeSrc":"5157:7:9","nodeType":"YulIdentifier","src":"5157:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5112:20:9","nodeType":"YulIdentifier","src":"5112:20:9"},"nativeSrc":"5112:53:9","nodeType":"YulFunctionCall","src":"5112:53:9"},"variableNames":[{"name":"value0","nativeSrc":"5102:6:9","nodeType":"YulIdentifier","src":"5102:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4853:329:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4889:9:9","nodeType":"YulTypedName","src":"4889:9:9","type":""},{"name":"dataEnd","nativeSrc":"4900:7:9","nodeType":"YulTypedName","src":"4900:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4912:6:9","nodeType":"YulTypedName","src":"4912:6:9","type":""}],"src":"4853:329:9"},{"body":{"nativeSrc":"5271:391:9","nodeType":"YulBlock","src":"5271:391:9","statements":[{"body":{"nativeSrc":"5317:83:9","nodeType":"YulBlock","src":"5317:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5319:77:9","nodeType":"YulIdentifier","src":"5319:77:9"},"nativeSrc":"5319:79:9","nodeType":"YulFunctionCall","src":"5319:79:9"},"nativeSrc":"5319:79:9","nodeType":"YulExpressionStatement","src":"5319:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5292:7:9","nodeType":"YulIdentifier","src":"5292:7:9"},{"name":"headStart","nativeSrc":"5301:9:9","nodeType":"YulIdentifier","src":"5301:9:9"}],"functionName":{"name":"sub","nativeSrc":"5288:3:9","nodeType":"YulIdentifier","src":"5288:3:9"},"nativeSrc":"5288:23:9","nodeType":"YulFunctionCall","src":"5288:23:9"},{"kind":"number","nativeSrc":"5313:2:9","nodeType":"YulLiteral","src":"5313:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5284:3:9","nodeType":"YulIdentifier","src":"5284:3:9"},"nativeSrc":"5284:32:9","nodeType":"YulFunctionCall","src":"5284:32:9"},"nativeSrc":"5281:119:9","nodeType":"YulIf","src":"5281:119:9"},{"nativeSrc":"5410:117:9","nodeType":"YulBlock","src":"5410:117:9","statements":[{"nativeSrc":"5425:15:9","nodeType":"YulVariableDeclaration","src":"5425:15:9","value":{"kind":"number","nativeSrc":"5439:1:9","nodeType":"YulLiteral","src":"5439:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5429:6:9","nodeType":"YulTypedName","src":"5429:6:9","type":""}]},{"nativeSrc":"5454:63:9","nodeType":"YulAssignment","src":"5454:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5489:9:9","nodeType":"YulIdentifier","src":"5489:9:9"},{"name":"offset","nativeSrc":"5500:6:9","nodeType":"YulIdentifier","src":"5500:6:9"}],"functionName":{"name":"add","nativeSrc":"5485:3:9","nodeType":"YulIdentifier","src":"5485:3:9"},"nativeSrc":"5485:22:9","nodeType":"YulFunctionCall","src":"5485:22:9"},{"name":"dataEnd","nativeSrc":"5509:7:9","nodeType":"YulIdentifier","src":"5509:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5464:20:9","nodeType":"YulIdentifier","src":"5464:20:9"},"nativeSrc":"5464:53:9","nodeType":"YulFunctionCall","src":"5464:53:9"},"variableNames":[{"name":"value0","nativeSrc":"5454:6:9","nodeType":"YulIdentifier","src":"5454:6:9"}]}]},{"nativeSrc":"5537:118:9","nodeType":"YulBlock","src":"5537:118:9","statements":[{"nativeSrc":"5552:16:9","nodeType":"YulVariableDeclaration","src":"5552:16:9","value":{"kind":"number","nativeSrc":"5566:2:9","nodeType":"YulLiteral","src":"5566:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5556:6:9","nodeType":"YulTypedName","src":"5556:6:9","type":""}]},{"nativeSrc":"5582:63:9","nodeType":"YulAssignment","src":"5582:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5617:9:9","nodeType":"YulIdentifier","src":"5617:9:9"},{"name":"offset","nativeSrc":"5628:6:9","nodeType":"YulIdentifier","src":"5628:6:9"}],"functionName":{"name":"add","nativeSrc":"5613:3:9","nodeType":"YulIdentifier","src":"5613:3:9"},"nativeSrc":"5613:22:9","nodeType":"YulFunctionCall","src":"5613:22:9"},{"name":"dataEnd","nativeSrc":"5637:7:9","nodeType":"YulIdentifier","src":"5637:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5592:20:9","nodeType":"YulIdentifier","src":"5592:20:9"},"nativeSrc":"5592:53:9","nodeType":"YulFunctionCall","src":"5592:53:9"},"variableNames":[{"name":"value1","nativeSrc":"5582:6:9","nodeType":"YulIdentifier","src":"5582:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5188:474:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5233:9:9","nodeType":"YulTypedName","src":"5233:9:9","type":""},{"name":"dataEnd","nativeSrc":"5244:7:9","nodeType":"YulTypedName","src":"5244:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5256:6:9","nodeType":"YulTypedName","src":"5256:6:9","type":""},{"name":"value1","nativeSrc":"5264:6:9","nodeType":"YulTypedName","src":"5264:6:9","type":""}],"src":"5188:474:9"},{"body":{"nativeSrc":"5696:152:9","nodeType":"YulBlock","src":"5696:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5713:1:9","nodeType":"YulLiteral","src":"5713:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"5716:77:9","nodeType":"YulLiteral","src":"5716:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5706:6:9","nodeType":"YulIdentifier","src":"5706:6:9"},"nativeSrc":"5706:88:9","nodeType":"YulFunctionCall","src":"5706:88:9"},"nativeSrc":"5706:88:9","nodeType":"YulExpressionStatement","src":"5706:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5810:1:9","nodeType":"YulLiteral","src":"5810:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"5813:4:9","nodeType":"YulLiteral","src":"5813:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5803:6:9","nodeType":"YulIdentifier","src":"5803:6:9"},"nativeSrc":"5803:15:9","nodeType":"YulFunctionCall","src":"5803:15:9"},"nativeSrc":"5803:15:9","nodeType":"YulExpressionStatement","src":"5803:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5834:1:9","nodeType":"YulLiteral","src":"5834:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"5837:4:9","nodeType":"YulLiteral","src":"5837:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5827:6:9","nodeType":"YulIdentifier","src":"5827:6:9"},"nativeSrc":"5827:15:9","nodeType":"YulFunctionCall","src":"5827:15:9"},"nativeSrc":"5827:15:9","nodeType":"YulExpressionStatement","src":"5827:15:9"}]},"name":"panic_error_0x22","nativeSrc":"5668:180:9","nodeType":"YulFunctionDefinition","src":"5668:180:9"},{"body":{"nativeSrc":"5905:269:9","nodeType":"YulBlock","src":"5905:269:9","statements":[{"nativeSrc":"5915:22:9","nodeType":"YulAssignment","src":"5915:22:9","value":{"arguments":[{"name":"data","nativeSrc":"5929:4:9","nodeType":"YulIdentifier","src":"5929:4:9"},{"kind":"number","nativeSrc":"5935:1:9","nodeType":"YulLiteral","src":"5935:1:9","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5925:3:9","nodeType":"YulIdentifier","src":"5925:3:9"},"nativeSrc":"5925:12:9","nodeType":"YulFunctionCall","src":"5925:12:9"},"variableNames":[{"name":"length","nativeSrc":"5915:6:9","nodeType":"YulIdentifier","src":"5915:6:9"}]},{"nativeSrc":"5946:38:9","nodeType":"YulVariableDeclaration","src":"5946:38:9","value":{"arguments":[{"name":"data","nativeSrc":"5976:4:9","nodeType":"YulIdentifier","src":"5976:4:9"},{"kind":"number","nativeSrc":"5982:1:9","nodeType":"YulLiteral","src":"5982:1:9","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5972:3:9","nodeType":"YulIdentifier","src":"5972:3:9"},"nativeSrc":"5972:12:9","nodeType":"YulFunctionCall","src":"5972:12:9"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5950:18:9","nodeType":"YulTypedName","src":"5950:18:9","type":""}]},{"body":{"nativeSrc":"6023:51:9","nodeType":"YulBlock","src":"6023:51:9","statements":[{"nativeSrc":"6037:27:9","nodeType":"YulAssignment","src":"6037:27:9","value":{"arguments":[{"name":"length","nativeSrc":"6051:6:9","nodeType":"YulIdentifier","src":"6051:6:9"},{"kind":"number","nativeSrc":"6059:4:9","nodeType":"YulLiteral","src":"6059:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6047:3:9","nodeType":"YulIdentifier","src":"6047:3:9"},"nativeSrc":"6047:17:9","nodeType":"YulFunctionCall","src":"6047:17:9"},"variableNames":[{"name":"length","nativeSrc":"6037:6:9","nodeType":"YulIdentifier","src":"6037:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6003:18:9","nodeType":"YulIdentifier","src":"6003:18:9"}],"functionName":{"name":"iszero","nativeSrc":"5996:6:9","nodeType":"YulIdentifier","src":"5996:6:9"},"nativeSrc":"5996:26:9","nodeType":"YulFunctionCall","src":"5996:26:9"},"nativeSrc":"5993:81:9","nodeType":"YulIf","src":"5993:81:9"},{"body":{"nativeSrc":"6126:42:9","nodeType":"YulBlock","src":"6126:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6140:16:9","nodeType":"YulIdentifier","src":"6140:16:9"},"nativeSrc":"6140:18:9","nodeType":"YulFunctionCall","src":"6140:18:9"},"nativeSrc":"6140:18:9","nodeType":"YulExpressionStatement","src":"6140:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6090:18:9","nodeType":"YulIdentifier","src":"6090:18:9"},{"arguments":[{"name":"length","nativeSrc":"6113:6:9","nodeType":"YulIdentifier","src":"6113:6:9"},{"kind":"number","nativeSrc":"6121:2:9","nodeType":"YulLiteral","src":"6121:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6110:2:9","nodeType":"YulIdentifier","src":"6110:2:9"},"nativeSrc":"6110:14:9","nodeType":"YulFunctionCall","src":"6110:14:9"}],"functionName":{"name":"eq","nativeSrc":"6087:2:9","nodeType":"YulIdentifier","src":"6087:2:9"},"nativeSrc":"6087:38:9","nodeType":"YulFunctionCall","src":"6087:38:9"},"nativeSrc":"6084:84:9","nodeType":"YulIf","src":"6084:84:9"}]},"name":"extract_byte_array_length","nativeSrc":"5854:320:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5889:4:9","nodeType":"YulTypedName","src":"5889:4:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5898:6:9","nodeType":"YulTypedName","src":"5898:6:9","type":""}],"src":"5854:320:9"},{"body":{"nativeSrc":"6245:53:9","nodeType":"YulBlock","src":"6245:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6262:3:9","nodeType":"YulIdentifier","src":"6262:3:9"},{"arguments":[{"name":"value","nativeSrc":"6285:5:9","nodeType":"YulIdentifier","src":"6285:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6267:17:9","nodeType":"YulIdentifier","src":"6267:17:9"},"nativeSrc":"6267:24:9","nodeType":"YulFunctionCall","src":"6267:24:9"}],"functionName":{"name":"mstore","nativeSrc":"6255:6:9","nodeType":"YulIdentifier","src":"6255:6:9"},"nativeSrc":"6255:37:9","nodeType":"YulFunctionCall","src":"6255:37:9"},"nativeSrc":"6255:37:9","nodeType":"YulExpressionStatement","src":"6255:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6180:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6233:5:9","nodeType":"YulTypedName","src":"6233:5:9","type":""},{"name":"pos","nativeSrc":"6240:3:9","nodeType":"YulTypedName","src":"6240:3:9","type":""}],"src":"6180:118:9"},{"body":{"nativeSrc":"6458:288:9","nodeType":"YulBlock","src":"6458:288:9","statements":[{"nativeSrc":"6468:26:9","nodeType":"YulAssignment","src":"6468:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"6480:9:9","nodeType":"YulIdentifier","src":"6480:9:9"},{"kind":"number","nativeSrc":"6491:2:9","nodeType":"YulLiteral","src":"6491:2:9","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6476:3:9","nodeType":"YulIdentifier","src":"6476:3:9"},"nativeSrc":"6476:18:9","nodeType":"YulFunctionCall","src":"6476:18:9"},"variableNames":[{"name":"tail","nativeSrc":"6468:4:9","nodeType":"YulIdentifier","src":"6468:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6548:6:9","nodeType":"YulIdentifier","src":"6548:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6561:9:9","nodeType":"YulIdentifier","src":"6561:9:9"},{"kind":"number","nativeSrc":"6572:1:9","nodeType":"YulLiteral","src":"6572:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6557:3:9","nodeType":"YulIdentifier","src":"6557:3:9"},"nativeSrc":"6557:17:9","nodeType":"YulFunctionCall","src":"6557:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6504:43:9","nodeType":"YulIdentifier","src":"6504:43:9"},"nativeSrc":"6504:71:9","nodeType":"YulFunctionCall","src":"6504:71:9"},"nativeSrc":"6504:71:9","nodeType":"YulExpressionStatement","src":"6504:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6629:6:9","nodeType":"YulIdentifier","src":"6629:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6642:9:9","nodeType":"YulIdentifier","src":"6642:9:9"},{"kind":"number","nativeSrc":"6653:2:9","nodeType":"YulLiteral","src":"6653:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6638:3:9","nodeType":"YulIdentifier","src":"6638:3:9"},"nativeSrc":"6638:18:9","nodeType":"YulFunctionCall","src":"6638:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6585:43:9","nodeType":"YulIdentifier","src":"6585:43:9"},"nativeSrc":"6585:72:9","nodeType":"YulFunctionCall","src":"6585:72:9"},"nativeSrc":"6585:72:9","nodeType":"YulExpressionStatement","src":"6585:72:9"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6711:6:9","nodeType":"YulIdentifier","src":"6711:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6724:9:9","nodeType":"YulIdentifier","src":"6724:9:9"},{"kind":"number","nativeSrc":"6735:2:9","nodeType":"YulLiteral","src":"6735:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6720:3:9","nodeType":"YulIdentifier","src":"6720:3:9"},"nativeSrc":"6720:18:9","nodeType":"YulFunctionCall","src":"6720:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6667:43:9","nodeType":"YulIdentifier","src":"6667:43:9"},"nativeSrc":"6667:72:9","nodeType":"YulFunctionCall","src":"6667:72:9"},"nativeSrc":"6667:72:9","nodeType":"YulExpressionStatement","src":"6667:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6304:442:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6414:9:9","nodeType":"YulTypedName","src":"6414:9:9","type":""},{"name":"value2","nativeSrc":"6426:6:9","nodeType":"YulTypedName","src":"6426:6:9","type":""},{"name":"value1","nativeSrc":"6434:6:9","nodeType":"YulTypedName","src":"6434:6:9","type":""},{"name":"value0","nativeSrc":"6442:6:9","nodeType":"YulTypedName","src":"6442:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6453:4:9","nodeType":"YulTypedName","src":"6453:4:9","type":""}],"src":"6304:442:9"},{"body":{"nativeSrc":"6850:124:9","nodeType":"YulBlock","src":"6850:124:9","statements":[{"nativeSrc":"6860:26:9","nodeType":"YulAssignment","src":"6860:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"6872:9:9","nodeType":"YulIdentifier","src":"6872:9:9"},{"kind":"number","nativeSrc":"6883:2:9","nodeType":"YulLiteral","src":"6883:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6868:3:9","nodeType":"YulIdentifier","src":"6868:3:9"},"nativeSrc":"6868:18:9","nodeType":"YulFunctionCall","src":"6868:18:9"},"variableNames":[{"name":"tail","nativeSrc":"6860:4:9","nodeType":"YulIdentifier","src":"6860:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6940:6:9","nodeType":"YulIdentifier","src":"6940:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6953:9:9","nodeType":"YulIdentifier","src":"6953:9:9"},{"kind":"number","nativeSrc":"6964:1:9","nodeType":"YulLiteral","src":"6964:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6949:3:9","nodeType":"YulIdentifier","src":"6949:3:9"},"nativeSrc":"6949:17:9","nodeType":"YulFunctionCall","src":"6949:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6896:43:9","nodeType":"YulIdentifier","src":"6896:43:9"},"nativeSrc":"6896:71:9","nodeType":"YulFunctionCall","src":"6896:71:9"},"nativeSrc":"6896:71:9","nodeType":"YulExpressionStatement","src":"6896:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6752:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6822:9:9","nodeType":"YulTypedName","src":"6822:9:9","type":""},{"name":"value0","nativeSrc":"6834:6:9","nodeType":"YulTypedName","src":"6834:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6845:4:9","nodeType":"YulTypedName","src":"6845:4:9","type":""}],"src":"6752:222:9"},{"body":{"nativeSrc":"7008:152:9","nodeType":"YulBlock","src":"7008:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7025:1:9","nodeType":"YulLiteral","src":"7025:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"7028:77:9","nodeType":"YulLiteral","src":"7028:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7018:6:9","nodeType":"YulIdentifier","src":"7018:6:9"},"nativeSrc":"7018:88:9","nodeType":"YulFunctionCall","src":"7018:88:9"},"nativeSrc":"7018:88:9","nodeType":"YulExpressionStatement","src":"7018:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7122:1:9","nodeType":"YulLiteral","src":"7122:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"7125:4:9","nodeType":"YulLiteral","src":"7125:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7115:6:9","nodeType":"YulIdentifier","src":"7115:6:9"},"nativeSrc":"7115:15:9","nodeType":"YulFunctionCall","src":"7115:15:9"},"nativeSrc":"7115:15:9","nodeType":"YulExpressionStatement","src":"7115:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7146:1:9","nodeType":"YulLiteral","src":"7146:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"7149:4:9","nodeType":"YulLiteral","src":"7149:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7139:6:9","nodeType":"YulIdentifier","src":"7139:6:9"},"nativeSrc":"7139:15:9","nodeType":"YulFunctionCall","src":"7139:15:9"},"nativeSrc":"7139:15:9","nodeType":"YulExpressionStatement","src":"7139:15:9"}]},"name":"panic_error_0x11","nativeSrc":"6980:180:9","nodeType":"YulFunctionDefinition","src":"6980:180:9"},{"body":{"nativeSrc":"7210:147:9","nodeType":"YulBlock","src":"7210:147:9","statements":[{"nativeSrc":"7220:25:9","nodeType":"YulAssignment","src":"7220:25:9","value":{"arguments":[{"name":"x","nativeSrc":"7243:1:9","nodeType":"YulIdentifier","src":"7243:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7225:17:9","nodeType":"YulIdentifier","src":"7225:17:9"},"nativeSrc":"7225:20:9","nodeType":"YulFunctionCall","src":"7225:20:9"},"variableNames":[{"name":"x","nativeSrc":"7220:1:9","nodeType":"YulIdentifier","src":"7220:1:9"}]},{"nativeSrc":"7254:25:9","nodeType":"YulAssignment","src":"7254:25:9","value":{"arguments":[{"name":"y","nativeSrc":"7277:1:9","nodeType":"YulIdentifier","src":"7277:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7259:17:9","nodeType":"YulIdentifier","src":"7259:17:9"},"nativeSrc":"7259:20:9","nodeType":"YulFunctionCall","src":"7259:20:9"},"variableNames":[{"name":"y","nativeSrc":"7254:1:9","nodeType":"YulIdentifier","src":"7254:1:9"}]},{"nativeSrc":"7288:16:9","nodeType":"YulAssignment","src":"7288:16:9","value":{"arguments":[{"name":"x","nativeSrc":"7299:1:9","nodeType":"YulIdentifier","src":"7299:1:9"},{"name":"y","nativeSrc":"7302:1:9","nodeType":"YulIdentifier","src":"7302:1:9"}],"functionName":{"name":"add","nativeSrc":"7295:3:9","nodeType":"YulIdentifier","src":"7295:3:9"},"nativeSrc":"7295:9:9","nodeType":"YulFunctionCall","src":"7295:9:9"},"variableNames":[{"name":"sum","nativeSrc":"7288:3:9","nodeType":"YulIdentifier","src":"7288:3:9"}]},{"body":{"nativeSrc":"7328:22:9","nodeType":"YulBlock","src":"7328:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7330:16:9","nodeType":"YulIdentifier","src":"7330:16:9"},"nativeSrc":"7330:18:9","nodeType":"YulFunctionCall","src":"7330:18:9"},"nativeSrc":"7330:18:9","nodeType":"YulExpressionStatement","src":"7330:18:9"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7320:1:9","nodeType":"YulIdentifier","src":"7320:1:9"},{"name":"sum","nativeSrc":"7323:3:9","nodeType":"YulIdentifier","src":"7323:3:9"}],"functionName":{"name":"gt","nativeSrc":"7317:2:9","nodeType":"YulIdentifier","src":"7317:2:9"},"nativeSrc":"7317:10:9","nodeType":"YulFunctionCall","src":"7317:10:9"},"nativeSrc":"7314:36:9","nodeType":"YulIf","src":"7314:36:9"}]},"name":"checked_add_t_uint256","nativeSrc":"7166:191:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7197:1:9","nodeType":"YulTypedName","src":"7197:1:9","type":""},{"name":"y","nativeSrc":"7200:1:9","nodeType":"YulTypedName","src":"7200:1:9","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7206:3:9","nodeType":"YulTypedName","src":"7206:3:9","type":""}],"src":"7166:191:9"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aa9565b60405180910390f35b6100d060048036038101906100cb9190610b64565b610292565b6040516100dd9190610bbf565b60405180910390f35b6100ee6102b5565b6040516100fb9190610be9565b60405180910390f35b61011e60048036038101906101199190610c04565b6102bf565b60405161012b9190610bbf565b60405180910390f35b61013c6102ee565b6040516101499190610c73565b60405180910390f35b61016c60048036038101906101679190610c8e565b6102f7565b6040516101799190610be9565b60405180910390f35b61018a61033f565b6040516101979190610aa9565b60405180910390f35b6101ba60048036038101906101b59190610b64565b6103d1565b6040516101c79190610bbf565b60405180910390f35b6101ea60048036038101906101e59190610cbb565b6103f4565b6040516101f79190610be9565b60405180910390f35b60606003805461020f90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2a565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e2858585610529565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e9818585610529565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061d565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105235781811015610513578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050a93929190610d6a565b60405180910390fd5b6105228484848403600061061d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105929190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106049190610da1565b60405180910390fd5b6106188383836107f4565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361068f5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106869190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107015760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f89190610da1565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e59190610be9565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084657806002600082825461083a9190610deb565b92505081905550610919565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108c993929190610d6a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096257806002600082825403925050819055506109af565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0c9190610be9565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a53578082015181840152602081019050610a38565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7b82610a19565b610a858185610a24565b9350610a95818560208601610a35565b610a9e81610a5f565b840191505092915050565b60006020820190508181036000830152610ac38184610a70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afb82610ad0565b9050919050565b610b0b81610af0565b8114610b1657600080fd5b50565b600081359050610b2881610b02565b92915050565b6000819050919050565b610b4181610b2e565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b60008060408385031215610b7b57610b7a610acb565b5b6000610b8985828601610b19565b9250506020610b9a85828601610b4f565b9150509250929050565b60008115159050919050565b610bb981610ba4565b82525050565b6000602082019050610bd46000830184610bb0565b92915050565b610be381610b2e565b82525050565b6000602082019050610bfe6000830184610bda565b92915050565b600080600060608486031215610c1d57610c1c610acb565b5b6000610c2b86828701610b19565b9350506020610c3c86828701610b19565b9250506040610c4d86828701610b4f565b9150509250925092565b600060ff82169050919050565b610c6d81610c57565b82525050565b6000602082019050610c886000830184610c64565b92915050565b600060208284031215610ca457610ca3610acb565b5b6000610cb284828501610b19565b91505092915050565b60008060408385031215610cd257610cd1610acb565b5b6000610ce085828601610b19565b9250506020610cf185828601610b19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4257607f821691505b602082108103610d5557610d54610cfb565b5b50919050565b610d6481610af0565b82525050565b6000606082019050610d7f6000830186610d5b565b610d8c6020830185610bda565b610d996040830184610bda565b949350505050565b6000602082019050610db66000830184610d5b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df682610b2e565b9150610e0183610b2e565b9250828201905080821115610e1957610e18610dbc565b5b9291505056fea2646970667358221220500789728d3ea455a3acf8db4fc4480ac7c7ab919f99e34bdf0f2cae9769e4de64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x523 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x522 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x618 DUP4 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x846 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x962 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9AF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xA85 DUP2 DUP6 PUSH2 0xA24 JUMP JUMPDEST SWAP4 POP PUSH2 0xA95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0xA5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC3 DUP2 DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB28 DUP2 PUSH2 0xB02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP2 EQ PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5E DUP2 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB89 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9A DUP6 DUP3 DUP7 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB9 DUP2 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3C DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4D DUP7 DUP3 DUP8 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA4 JUMPI PUSH2 0xCA3 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB2 DUP5 DUP3 DUP6 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF1 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD55 JUMPI PUSH2 0xD54 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD64 DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP3 PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP4 PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0xDBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP SMOD DUP10 PUSH19 0x8D3EA455A3ACF8DB4FC4480AC7C7AB919F99E3 0x4B 0xDF 0xF 0x2C 0xAE SWAP8 PUSH10 0xE4DE64736F6C63430008 XOR STOP CALLER ","sourceMap":"170:144:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"733800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"343","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenA.sol\":\"TokenA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/TokenA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\r\\npragma solidity ^0.8.22;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract TokenA is ERC20 {\\r\\n    constructor(uint256 initialSupply) ERC20(\\\"TokenA\\\", \\\"TKA\\\") {\\r\\n        _mint(msg.sender, initialSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xaed68b26246cfb68795f0bb6761760f5dcc1da2abeb2e98067600e9dba1682a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":307,"contract":"contracts/TokenA.sol:TokenA","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":313,"contract":"contracts/TokenA.sol:TokenA","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":315,"contract":"contracts/TokenA.sol:TokenA","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":317,"contract":"contracts/TokenA.sol:TokenA","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":319,"contract":"contracts/TokenA.sol:TokenA","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TokenB.sol":{"TokenB":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1438":{"entryPoint":null,"id":1438,"parameterSlots":1,"returnSlots":0},"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_mint_639":{"entryPoint":226,"id":639,"parameterSlots":2,"returnSlots":0},"@_update_606":{"entryPoint":367,"id":606,"parameterSlots":3,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1948,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2100,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2117,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2178,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1199,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1041,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2041,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1510,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1928,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1896,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":932,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1471,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1345,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1665,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1220,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1146,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1635,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1335,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1603,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1994,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1099,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1052,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1385,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":927,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1236,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1590,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1443,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1249,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1395,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1438,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:7961:9","nodeType":"YulBlock","src":"0:7961:9","statements":[{"body":{"nativeSrc":"47:35:9","nodeType":"YulBlock","src":"47:35:9","statements":[{"nativeSrc":"57:19:9","nodeType":"YulAssignment","src":"57:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:9","nodeType":"YulLiteral","src":"73:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:9","nodeType":"YulIdentifier","src":"67:5:9"},"nativeSrc":"67:9:9","nodeType":"YulFunctionCall","src":"67:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:9","nodeType":"YulIdentifier","src":"57:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:9","nodeType":"YulTypedName","src":"40:6:9","type":""}],"src":"7:75:9"},{"body":{"nativeSrc":"177:28:9","nodeType":"YulBlock","src":"177:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:9","nodeType":"YulLiteral","src":"194:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:9","nodeType":"YulLiteral","src":"197:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:9","nodeType":"YulIdentifier","src":"187:6:9"},"nativeSrc":"187:12:9","nodeType":"YulFunctionCall","src":"187:12:9"},"nativeSrc":"187:12:9","nodeType":"YulExpressionStatement","src":"187:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:9","nodeType":"YulFunctionDefinition","src":"88:117:9"},{"body":{"nativeSrc":"300:28:9","nodeType":"YulBlock","src":"300:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:9","nodeType":"YulLiteral","src":"317:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:9","nodeType":"YulLiteral","src":"320:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:9","nodeType":"YulIdentifier","src":"310:6:9"},"nativeSrc":"310:12:9","nodeType":"YulFunctionCall","src":"310:12:9"},"nativeSrc":"310:12:9","nodeType":"YulExpressionStatement","src":"310:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:9","nodeType":"YulFunctionDefinition","src":"211:117:9"},{"body":{"nativeSrc":"379:32:9","nodeType":"YulBlock","src":"379:32:9","statements":[{"nativeSrc":"389:16:9","nodeType":"YulAssignment","src":"389:16:9","value":{"name":"value","nativeSrc":"400:5:9","nodeType":"YulIdentifier","src":"400:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:9","nodeType":"YulIdentifier","src":"389:7:9"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:9","nodeType":"YulTypedName","src":"361:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:9","nodeType":"YulTypedName","src":"371:7:9","type":""}],"src":"334:77:9"},{"body":{"nativeSrc":"460:79:9","nodeType":"YulBlock","src":"460:79:9","statements":[{"body":{"nativeSrc":"517:16:9","nodeType":"YulBlock","src":"517:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:9","nodeType":"YulLiteral","src":"526:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:9","nodeType":"YulLiteral","src":"529:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:9","nodeType":"YulIdentifier","src":"519:6:9"},"nativeSrc":"519:12:9","nodeType":"YulFunctionCall","src":"519:12:9"},"nativeSrc":"519:12:9","nodeType":"YulExpressionStatement","src":"519:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:9","nodeType":"YulIdentifier","src":"483:5:9"},{"arguments":[{"name":"value","nativeSrc":"508:5:9","nodeType":"YulIdentifier","src":"508:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:9","nodeType":"YulIdentifier","src":"490:17:9"},"nativeSrc":"490:24:9","nodeType":"YulFunctionCall","src":"490:24:9"}],"functionName":{"name":"eq","nativeSrc":"480:2:9","nodeType":"YulIdentifier","src":"480:2:9"},"nativeSrc":"480:35:9","nodeType":"YulFunctionCall","src":"480:35:9"}],"functionName":{"name":"iszero","nativeSrc":"473:6:9","nodeType":"YulIdentifier","src":"473:6:9"},"nativeSrc":"473:43:9","nodeType":"YulFunctionCall","src":"473:43:9"},"nativeSrc":"470:63:9","nodeType":"YulIf","src":"470:63:9"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:9","nodeType":"YulTypedName","src":"453:5:9","type":""}],"src":"417:122:9"},{"body":{"nativeSrc":"608:80:9","nodeType":"YulBlock","src":"608:80:9","statements":[{"nativeSrc":"618:22:9","nodeType":"YulAssignment","src":"618:22:9","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:9","nodeType":"YulIdentifier","src":"633:6:9"}],"functionName":{"name":"mload","nativeSrc":"627:5:9","nodeType":"YulIdentifier","src":"627:5:9"},"nativeSrc":"627:13:9","nodeType":"YulFunctionCall","src":"627:13:9"},"variableNames":[{"name":"value","nativeSrc":"618:5:9","nodeType":"YulIdentifier","src":"618:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:9","nodeType":"YulIdentifier","src":"676:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:9","nodeType":"YulIdentifier","src":"649:26:9"},"nativeSrc":"649:33:9","nodeType":"YulFunctionCall","src":"649:33:9"},"nativeSrc":"649:33:9","nodeType":"YulExpressionStatement","src":"649:33:9"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:9","nodeType":"YulTypedName","src":"586:6:9","type":""},{"name":"end","nativeSrc":"594:3:9","nodeType":"YulTypedName","src":"594:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:9","nodeType":"YulTypedName","src":"602:5:9","type":""}],"src":"545:143:9"},{"body":{"nativeSrc":"771:274:9","nodeType":"YulBlock","src":"771:274:9","statements":[{"body":{"nativeSrc":"817:83:9","nodeType":"YulBlock","src":"817:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"819:77:9","nodeType":"YulIdentifier","src":"819:77:9"},"nativeSrc":"819:79:9","nodeType":"YulFunctionCall","src":"819:79:9"},"nativeSrc":"819:79:9","nodeType":"YulExpressionStatement","src":"819:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"792:7:9","nodeType":"YulIdentifier","src":"792:7:9"},{"name":"headStart","nativeSrc":"801:9:9","nodeType":"YulIdentifier","src":"801:9:9"}],"functionName":{"name":"sub","nativeSrc":"788:3:9","nodeType":"YulIdentifier","src":"788:3:9"},"nativeSrc":"788:23:9","nodeType":"YulFunctionCall","src":"788:23:9"},{"kind":"number","nativeSrc":"813:2:9","nodeType":"YulLiteral","src":"813:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"784:3:9","nodeType":"YulIdentifier","src":"784:3:9"},"nativeSrc":"784:32:9","nodeType":"YulFunctionCall","src":"784:32:9"},"nativeSrc":"781:119:9","nodeType":"YulIf","src":"781:119:9"},{"nativeSrc":"910:128:9","nodeType":"YulBlock","src":"910:128:9","statements":[{"nativeSrc":"925:15:9","nodeType":"YulVariableDeclaration","src":"925:15:9","value":{"kind":"number","nativeSrc":"939:1:9","nodeType":"YulLiteral","src":"939:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"929:6:9","nodeType":"YulTypedName","src":"929:6:9","type":""}]},{"nativeSrc":"954:74:9","nodeType":"YulAssignment","src":"954:74:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1000:9:9","nodeType":"YulIdentifier","src":"1000:9:9"},{"name":"offset","nativeSrc":"1011:6:9","nodeType":"YulIdentifier","src":"1011:6:9"}],"functionName":{"name":"add","nativeSrc":"996:3:9","nodeType":"YulIdentifier","src":"996:3:9"},"nativeSrc":"996:22:9","nodeType":"YulFunctionCall","src":"996:22:9"},{"name":"dataEnd","nativeSrc":"1020:7:9","nodeType":"YulIdentifier","src":"1020:7:9"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"964:31:9","nodeType":"YulIdentifier","src":"964:31:9"},"nativeSrc":"964:64:9","nodeType":"YulFunctionCall","src":"964:64:9"},"variableNames":[{"name":"value0","nativeSrc":"954:6:9","nodeType":"YulIdentifier","src":"954:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"694:351:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"741:9:9","nodeType":"YulTypedName","src":"741:9:9","type":""},{"name":"dataEnd","nativeSrc":"752:7:9","nodeType":"YulTypedName","src":"752:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"764:6:9","nodeType":"YulTypedName","src":"764:6:9","type":""}],"src":"694:351:9"},{"body":{"nativeSrc":"1110:40:9","nodeType":"YulBlock","src":"1110:40:9","statements":[{"nativeSrc":"1121:22:9","nodeType":"YulAssignment","src":"1121:22:9","value":{"arguments":[{"name":"value","nativeSrc":"1137:5:9","nodeType":"YulIdentifier","src":"1137:5:9"}],"functionName":{"name":"mload","nativeSrc":"1131:5:9","nodeType":"YulIdentifier","src":"1131:5:9"},"nativeSrc":"1131:12:9","nodeType":"YulFunctionCall","src":"1131:12:9"},"variableNames":[{"name":"length","nativeSrc":"1121:6:9","nodeType":"YulIdentifier","src":"1121:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1051:99:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1093:5:9","nodeType":"YulTypedName","src":"1093:5:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1103:6:9","nodeType":"YulTypedName","src":"1103:6:9","type":""}],"src":"1051:99:9"},{"body":{"nativeSrc":"1184:152:9","nodeType":"YulBlock","src":"1184:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1201:1:9","nodeType":"YulLiteral","src":"1201:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1204:77:9","nodeType":"YulLiteral","src":"1204:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:9","nodeType":"YulIdentifier","src":"1194:6:9"},"nativeSrc":"1194:88:9","nodeType":"YulFunctionCall","src":"1194:88:9"},"nativeSrc":"1194:88:9","nodeType":"YulExpressionStatement","src":"1194:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1298:1:9","nodeType":"YulLiteral","src":"1298:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"1301:4:9","nodeType":"YulLiteral","src":"1301:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1291:6:9","nodeType":"YulIdentifier","src":"1291:6:9"},"nativeSrc":"1291:15:9","nodeType":"YulFunctionCall","src":"1291:15:9"},"nativeSrc":"1291:15:9","nodeType":"YulExpressionStatement","src":"1291:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1322:1:9","nodeType":"YulLiteral","src":"1322:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1325:4:9","nodeType":"YulLiteral","src":"1325:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1315:6:9","nodeType":"YulIdentifier","src":"1315:6:9"},"nativeSrc":"1315:15:9","nodeType":"YulFunctionCall","src":"1315:15:9"},"nativeSrc":"1315:15:9","nodeType":"YulExpressionStatement","src":"1315:15:9"}]},"name":"panic_error_0x41","nativeSrc":"1156:180:9","nodeType":"YulFunctionDefinition","src":"1156:180:9"},{"body":{"nativeSrc":"1370:152:9","nodeType":"YulBlock","src":"1370:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1387:1:9","nodeType":"YulLiteral","src":"1387:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1390:77:9","nodeType":"YulLiteral","src":"1390:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1380:6:9","nodeType":"YulIdentifier","src":"1380:6:9"},"nativeSrc":"1380:88:9","nodeType":"YulFunctionCall","src":"1380:88:9"},"nativeSrc":"1380:88:9","nodeType":"YulExpressionStatement","src":"1380:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1484:1:9","nodeType":"YulLiteral","src":"1484:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"1487:4:9","nodeType":"YulLiteral","src":"1487:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1477:6:9","nodeType":"YulIdentifier","src":"1477:6:9"},"nativeSrc":"1477:15:9","nodeType":"YulFunctionCall","src":"1477:15:9"},"nativeSrc":"1477:15:9","nodeType":"YulExpressionStatement","src":"1477:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:9","nodeType":"YulLiteral","src":"1508:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:4:9","nodeType":"YulLiteral","src":"1511:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1501:6:9","nodeType":"YulIdentifier","src":"1501:6:9"},"nativeSrc":"1501:15:9","nodeType":"YulFunctionCall","src":"1501:15:9"},"nativeSrc":"1501:15:9","nodeType":"YulExpressionStatement","src":"1501:15:9"}]},"name":"panic_error_0x22","nativeSrc":"1342:180:9","nodeType":"YulFunctionDefinition","src":"1342:180:9"},{"body":{"nativeSrc":"1579:269:9","nodeType":"YulBlock","src":"1579:269:9","statements":[{"nativeSrc":"1589:22:9","nodeType":"YulAssignment","src":"1589:22:9","value":{"arguments":[{"name":"data","nativeSrc":"1603:4:9","nodeType":"YulIdentifier","src":"1603:4:9"},{"kind":"number","nativeSrc":"1609:1:9","nodeType":"YulLiteral","src":"1609:1:9","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1599:3:9","nodeType":"YulIdentifier","src":"1599:3:9"},"nativeSrc":"1599:12:9","nodeType":"YulFunctionCall","src":"1599:12:9"},"variableNames":[{"name":"length","nativeSrc":"1589:6:9","nodeType":"YulIdentifier","src":"1589:6:9"}]},{"nativeSrc":"1620:38:9","nodeType":"YulVariableDeclaration","src":"1620:38:9","value":{"arguments":[{"name":"data","nativeSrc":"1650:4:9","nodeType":"YulIdentifier","src":"1650:4:9"},{"kind":"number","nativeSrc":"1656:1:9","nodeType":"YulLiteral","src":"1656:1:9","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1646:3:9","nodeType":"YulIdentifier","src":"1646:3:9"},"nativeSrc":"1646:12:9","nodeType":"YulFunctionCall","src":"1646:12:9"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1624:18:9","nodeType":"YulTypedName","src":"1624:18:9","type":""}]},{"body":{"nativeSrc":"1697:51:9","nodeType":"YulBlock","src":"1697:51:9","statements":[{"nativeSrc":"1711:27:9","nodeType":"YulAssignment","src":"1711:27:9","value":{"arguments":[{"name":"length","nativeSrc":"1725:6:9","nodeType":"YulIdentifier","src":"1725:6:9"},{"kind":"number","nativeSrc":"1733:4:9","nodeType":"YulLiteral","src":"1733:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1721:3:9","nodeType":"YulIdentifier","src":"1721:3:9"},"nativeSrc":"1721:17:9","nodeType":"YulFunctionCall","src":"1721:17:9"},"variableNames":[{"name":"length","nativeSrc":"1711:6:9","nodeType":"YulIdentifier","src":"1711:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1677:18:9","nodeType":"YulIdentifier","src":"1677:18:9"}],"functionName":{"name":"iszero","nativeSrc":"1670:6:9","nodeType":"YulIdentifier","src":"1670:6:9"},"nativeSrc":"1670:26:9","nodeType":"YulFunctionCall","src":"1670:26:9"},"nativeSrc":"1667:81:9","nodeType":"YulIf","src":"1667:81:9"},{"body":{"nativeSrc":"1800:42:9","nodeType":"YulBlock","src":"1800:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"1814:16:9","nodeType":"YulIdentifier","src":"1814:16:9"},"nativeSrc":"1814:18:9","nodeType":"YulFunctionCall","src":"1814:18:9"},"nativeSrc":"1814:18:9","nodeType":"YulExpressionStatement","src":"1814:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1764:18:9","nodeType":"YulIdentifier","src":"1764:18:9"},{"arguments":[{"name":"length","nativeSrc":"1787:6:9","nodeType":"YulIdentifier","src":"1787:6:9"},{"kind":"number","nativeSrc":"1795:2:9","nodeType":"YulLiteral","src":"1795:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1784:2:9","nodeType":"YulIdentifier","src":"1784:2:9"},"nativeSrc":"1784:14:9","nodeType":"YulFunctionCall","src":"1784:14:9"}],"functionName":{"name":"eq","nativeSrc":"1761:2:9","nodeType":"YulIdentifier","src":"1761:2:9"},"nativeSrc":"1761:38:9","nodeType":"YulFunctionCall","src":"1761:38:9"},"nativeSrc":"1758:84:9","nodeType":"YulIf","src":"1758:84:9"}]},"name":"extract_byte_array_length","nativeSrc":"1528:320:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1563:4:9","nodeType":"YulTypedName","src":"1563:4:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1572:6:9","nodeType":"YulTypedName","src":"1572:6:9","type":""}],"src":"1528:320:9"},{"body":{"nativeSrc":"1908:87:9","nodeType":"YulBlock","src":"1908:87:9","statements":[{"nativeSrc":"1918:11:9","nodeType":"YulAssignment","src":"1918:11:9","value":{"name":"ptr","nativeSrc":"1926:3:9","nodeType":"YulIdentifier","src":"1926:3:9"},"variableNames":[{"name":"data","nativeSrc":"1918:4:9","nodeType":"YulIdentifier","src":"1918:4:9"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1946:1:9","nodeType":"YulLiteral","src":"1946:1:9","type":"","value":"0"},{"name":"ptr","nativeSrc":"1949:3:9","nodeType":"YulIdentifier","src":"1949:3:9"}],"functionName":{"name":"mstore","nativeSrc":"1939:6:9","nodeType":"YulIdentifier","src":"1939:6:9"},"nativeSrc":"1939:14:9","nodeType":"YulFunctionCall","src":"1939:14:9"},"nativeSrc":"1939:14:9","nodeType":"YulExpressionStatement","src":"1939:14:9"},{"nativeSrc":"1962:26:9","nodeType":"YulAssignment","src":"1962:26:9","value":{"arguments":[{"kind":"number","nativeSrc":"1980:1:9","nodeType":"YulLiteral","src":"1980:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1983:4:9","nodeType":"YulLiteral","src":"1983:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1970:9:9","nodeType":"YulIdentifier","src":"1970:9:9"},"nativeSrc":"1970:18:9","nodeType":"YulFunctionCall","src":"1970:18:9"},"variableNames":[{"name":"data","nativeSrc":"1962:4:9","nodeType":"YulIdentifier","src":"1962:4:9"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"1854:141:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1895:3:9","nodeType":"YulTypedName","src":"1895:3:9","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1903:4:9","nodeType":"YulTypedName","src":"1903:4:9","type":""}],"src":"1854:141:9"},{"body":{"nativeSrc":"2045:49:9","nodeType":"YulBlock","src":"2045:49:9","statements":[{"nativeSrc":"2055:33:9","nodeType":"YulAssignment","src":"2055:33:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2073:5:9","nodeType":"YulIdentifier","src":"2073:5:9"},{"kind":"number","nativeSrc":"2080:2:9","nodeType":"YulLiteral","src":"2080:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2069:3:9","nodeType":"YulIdentifier","src":"2069:3:9"},"nativeSrc":"2069:14:9","nodeType":"YulFunctionCall","src":"2069:14:9"},{"kind":"number","nativeSrc":"2085:2:9","nodeType":"YulLiteral","src":"2085:2:9","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2065:3:9","nodeType":"YulIdentifier","src":"2065:3:9"},"nativeSrc":"2065:23:9","nodeType":"YulFunctionCall","src":"2065:23:9"},"variableNames":[{"name":"result","nativeSrc":"2055:6:9","nodeType":"YulIdentifier","src":"2055:6:9"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2001:93:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2028:5:9","nodeType":"YulTypedName","src":"2028:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2038:6:9","nodeType":"YulTypedName","src":"2038:6:9","type":""}],"src":"2001:93:9"},{"body":{"nativeSrc":"2153:54:9","nodeType":"YulBlock","src":"2153:54:9","statements":[{"nativeSrc":"2163:37:9","nodeType":"YulAssignment","src":"2163:37:9","value":{"arguments":[{"name":"bits","nativeSrc":"2188:4:9","nodeType":"YulIdentifier","src":"2188:4:9"},{"name":"value","nativeSrc":"2194:5:9","nodeType":"YulIdentifier","src":"2194:5:9"}],"functionName":{"name":"shl","nativeSrc":"2184:3:9","nodeType":"YulIdentifier","src":"2184:3:9"},"nativeSrc":"2184:16:9","nodeType":"YulFunctionCall","src":"2184:16:9"},"variableNames":[{"name":"newValue","nativeSrc":"2163:8:9","nodeType":"YulIdentifier","src":"2163:8:9"}]}]},"name":"shift_left_dynamic","nativeSrc":"2100:107:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2128:4:9","nodeType":"YulTypedName","src":"2128:4:9","type":""},{"name":"value","nativeSrc":"2134:5:9","nodeType":"YulTypedName","src":"2134:5:9","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2144:8:9","nodeType":"YulTypedName","src":"2144:8:9","type":""}],"src":"2100:107:9"},{"body":{"nativeSrc":"2289:317:9","nodeType":"YulBlock","src":"2289:317:9","statements":[{"nativeSrc":"2299:35:9","nodeType":"YulVariableDeclaration","src":"2299:35:9","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2320:10:9","nodeType":"YulIdentifier","src":"2320:10:9"},{"kind":"number","nativeSrc":"2332:1:9","nodeType":"YulLiteral","src":"2332:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2316:3:9","nodeType":"YulIdentifier","src":"2316:3:9"},"nativeSrc":"2316:18:9","nodeType":"YulFunctionCall","src":"2316:18:9"},"variables":[{"name":"shiftBits","nativeSrc":"2303:9:9","nodeType":"YulTypedName","src":"2303:9:9","type":""}]},{"nativeSrc":"2343:109:9","nodeType":"YulVariableDeclaration","src":"2343:109:9","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2374:9:9","nodeType":"YulIdentifier","src":"2374:9:9"},{"kind":"number","nativeSrc":"2385:66:9","nodeType":"YulLiteral","src":"2385:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2355:18:9","nodeType":"YulIdentifier","src":"2355:18:9"},"nativeSrc":"2355:97:9","nodeType":"YulFunctionCall","src":"2355:97:9"},"variables":[{"name":"mask","nativeSrc":"2347:4:9","nodeType":"YulTypedName","src":"2347:4:9","type":""}]},{"nativeSrc":"2461:51:9","nodeType":"YulAssignment","src":"2461:51:9","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2492:9:9","nodeType":"YulIdentifier","src":"2492:9:9"},{"name":"toInsert","nativeSrc":"2503:8:9","nodeType":"YulIdentifier","src":"2503:8:9"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2473:18:9","nodeType":"YulIdentifier","src":"2473:18:9"},"nativeSrc":"2473:39:9","nodeType":"YulFunctionCall","src":"2473:39:9"},"variableNames":[{"name":"toInsert","nativeSrc":"2461:8:9","nodeType":"YulIdentifier","src":"2461:8:9"}]},{"nativeSrc":"2521:30:9","nodeType":"YulAssignment","src":"2521:30:9","value":{"arguments":[{"name":"value","nativeSrc":"2534:5:9","nodeType":"YulIdentifier","src":"2534:5:9"},{"arguments":[{"name":"mask","nativeSrc":"2545:4:9","nodeType":"YulIdentifier","src":"2545:4:9"}],"functionName":{"name":"not","nativeSrc":"2541:3:9","nodeType":"YulIdentifier","src":"2541:3:9"},"nativeSrc":"2541:9:9","nodeType":"YulFunctionCall","src":"2541:9:9"}],"functionName":{"name":"and","nativeSrc":"2530:3:9","nodeType":"YulIdentifier","src":"2530:3:9"},"nativeSrc":"2530:21:9","nodeType":"YulFunctionCall","src":"2530:21:9"},"variableNames":[{"name":"value","nativeSrc":"2521:5:9","nodeType":"YulIdentifier","src":"2521:5:9"}]},{"nativeSrc":"2560:40:9","nodeType":"YulAssignment","src":"2560:40:9","value":{"arguments":[{"name":"value","nativeSrc":"2573:5:9","nodeType":"YulIdentifier","src":"2573:5:9"},{"arguments":[{"name":"toInsert","nativeSrc":"2584:8:9","nodeType":"YulIdentifier","src":"2584:8:9"},{"name":"mask","nativeSrc":"2594:4:9","nodeType":"YulIdentifier","src":"2594:4:9"}],"functionName":{"name":"and","nativeSrc":"2580:3:9","nodeType":"YulIdentifier","src":"2580:3:9"},"nativeSrc":"2580:19:9","nodeType":"YulFunctionCall","src":"2580:19:9"}],"functionName":{"name":"or","nativeSrc":"2570:2:9","nodeType":"YulIdentifier","src":"2570:2:9"},"nativeSrc":"2570:30:9","nodeType":"YulFunctionCall","src":"2570:30:9"},"variableNames":[{"name":"result","nativeSrc":"2560:6:9","nodeType":"YulIdentifier","src":"2560:6:9"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2213:393:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2250:5:9","nodeType":"YulTypedName","src":"2250:5:9","type":""},{"name":"shiftBytes","nativeSrc":"2257:10:9","nodeType":"YulTypedName","src":"2257:10:9","type":""},{"name":"toInsert","nativeSrc":"2269:8:9","nodeType":"YulTypedName","src":"2269:8:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2282:6:9","nodeType":"YulTypedName","src":"2282:6:9","type":""}],"src":"2213:393:9"},{"body":{"nativeSrc":"2644:28:9","nodeType":"YulBlock","src":"2644:28:9","statements":[{"nativeSrc":"2654:12:9","nodeType":"YulAssignment","src":"2654:12:9","value":{"name":"value","nativeSrc":"2661:5:9","nodeType":"YulIdentifier","src":"2661:5:9"},"variableNames":[{"name":"ret","nativeSrc":"2654:3:9","nodeType":"YulIdentifier","src":"2654:3:9"}]}]},"name":"identity","nativeSrc":"2612:60:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2630:5:9","nodeType":"YulTypedName","src":"2630:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2640:3:9","nodeType":"YulTypedName","src":"2640:3:9","type":""}],"src":"2612:60:9"},{"body":{"nativeSrc":"2738:82:9","nodeType":"YulBlock","src":"2738:82:9","statements":[{"nativeSrc":"2748:66:9","nodeType":"YulAssignment","src":"2748:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2806:5:9","nodeType":"YulIdentifier","src":"2806:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2788:17:9","nodeType":"YulIdentifier","src":"2788:17:9"},"nativeSrc":"2788:24:9","nodeType":"YulFunctionCall","src":"2788:24:9"}],"functionName":{"name":"identity","nativeSrc":"2779:8:9","nodeType":"YulIdentifier","src":"2779:8:9"},"nativeSrc":"2779:34:9","nodeType":"YulFunctionCall","src":"2779:34:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2761:17:9","nodeType":"YulIdentifier","src":"2761:17:9"},"nativeSrc":"2761:53:9","nodeType":"YulFunctionCall","src":"2761:53:9"},"variableNames":[{"name":"converted","nativeSrc":"2748:9:9","nodeType":"YulIdentifier","src":"2748:9:9"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2678:142:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2718:5:9","nodeType":"YulTypedName","src":"2718:5:9","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2728:9:9","nodeType":"YulTypedName","src":"2728:9:9","type":""}],"src":"2678:142:9"},{"body":{"nativeSrc":"2873:28:9","nodeType":"YulBlock","src":"2873:28:9","statements":[{"nativeSrc":"2883:12:9","nodeType":"YulAssignment","src":"2883:12:9","value":{"name":"value","nativeSrc":"2890:5:9","nodeType":"YulIdentifier","src":"2890:5:9"},"variableNames":[{"name":"ret","nativeSrc":"2883:3:9","nodeType":"YulIdentifier","src":"2883:3:9"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"2826:75:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2859:5:9","nodeType":"YulTypedName","src":"2859:5:9","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2869:3:9","nodeType":"YulTypedName","src":"2869:3:9","type":""}],"src":"2826:75:9"},{"body":{"nativeSrc":"2983:193:9","nodeType":"YulBlock","src":"2983:193:9","statements":[{"nativeSrc":"2993:63:9","nodeType":"YulVariableDeclaration","src":"2993:63:9","value":{"arguments":[{"name":"value_0","nativeSrc":"3048:7:9","nodeType":"YulIdentifier","src":"3048:7:9"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3017:30:9","nodeType":"YulIdentifier","src":"3017:30:9"},"nativeSrc":"3017:39:9","nodeType":"YulFunctionCall","src":"3017:39:9"},"variables":[{"name":"convertedValue_0","nativeSrc":"2997:16:9","nodeType":"YulTypedName","src":"2997:16:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3072:4:9","nodeType":"YulIdentifier","src":"3072:4:9"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3112:4:9","nodeType":"YulIdentifier","src":"3112:4:9"}],"functionName":{"name":"sload","nativeSrc":"3106:5:9","nodeType":"YulIdentifier","src":"3106:5:9"},"nativeSrc":"3106:11:9","nodeType":"YulFunctionCall","src":"3106:11:9"},{"name":"offset","nativeSrc":"3119:6:9","nodeType":"YulIdentifier","src":"3119:6:9"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3151:16:9","nodeType":"YulIdentifier","src":"3151:16:9"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3127:23:9","nodeType":"YulIdentifier","src":"3127:23:9"},"nativeSrc":"3127:41:9","nodeType":"YulFunctionCall","src":"3127:41:9"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3078:27:9","nodeType":"YulIdentifier","src":"3078:27:9"},"nativeSrc":"3078:91:9","nodeType":"YulFunctionCall","src":"3078:91:9"}],"functionName":{"name":"sstore","nativeSrc":"3065:6:9","nodeType":"YulIdentifier","src":"3065:6:9"},"nativeSrc":"3065:105:9","nodeType":"YulFunctionCall","src":"3065:105:9"},"nativeSrc":"3065:105:9","nodeType":"YulExpressionStatement","src":"3065:105:9"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2907:269:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2960:4:9","nodeType":"YulTypedName","src":"2960:4:9","type":""},{"name":"offset","nativeSrc":"2966:6:9","nodeType":"YulTypedName","src":"2966:6:9","type":""},{"name":"value_0","nativeSrc":"2974:7:9","nodeType":"YulTypedName","src":"2974:7:9","type":""}],"src":"2907:269:9"},{"body":{"nativeSrc":"3231:24:9","nodeType":"YulBlock","src":"3231:24:9","statements":[{"nativeSrc":"3241:8:9","nodeType":"YulAssignment","src":"3241:8:9","value":{"kind":"number","nativeSrc":"3248:1:9","nodeType":"YulLiteral","src":"3248:1:9","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3241:3:9","nodeType":"YulIdentifier","src":"3241:3:9"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3182:73:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3227:3:9","nodeType":"YulTypedName","src":"3227:3:9","type":""}],"src":"3182:73:9"},{"body":{"nativeSrc":"3314:136:9","nodeType":"YulBlock","src":"3314:136:9","statements":[{"nativeSrc":"3324:46:9","nodeType":"YulVariableDeclaration","src":"3324:46:9","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3338:30:9","nodeType":"YulIdentifier","src":"3338:30:9"},"nativeSrc":"3338:32:9","nodeType":"YulFunctionCall","src":"3338:32:9"},"variables":[{"name":"zero_0","nativeSrc":"3328:6:9","nodeType":"YulTypedName","src":"3328:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3423:4:9","nodeType":"YulIdentifier","src":"3423:4:9"},{"name":"offset","nativeSrc":"3429:6:9","nodeType":"YulIdentifier","src":"3429:6:9"},{"name":"zero_0","nativeSrc":"3437:6:9","nodeType":"YulIdentifier","src":"3437:6:9"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3379:43:9","nodeType":"YulIdentifier","src":"3379:43:9"},"nativeSrc":"3379:65:9","nodeType":"YulFunctionCall","src":"3379:65:9"},"nativeSrc":"3379:65:9","nodeType":"YulExpressionStatement","src":"3379:65:9"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3261:189:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3300:4:9","nodeType":"YulTypedName","src":"3300:4:9","type":""},{"name":"offset","nativeSrc":"3306:6:9","nodeType":"YulTypedName","src":"3306:6:9","type":""}],"src":"3261:189:9"},{"body":{"nativeSrc":"3506:136:9","nodeType":"YulBlock","src":"3506:136:9","statements":[{"body":{"nativeSrc":"3573:63:9","nodeType":"YulBlock","src":"3573:63:9","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3617:5:9","nodeType":"YulIdentifier","src":"3617:5:9"},{"kind":"number","nativeSrc":"3624:1:9","nodeType":"YulLiteral","src":"3624:1:9","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3587:29:9","nodeType":"YulIdentifier","src":"3587:29:9"},"nativeSrc":"3587:39:9","nodeType":"YulFunctionCall","src":"3587:39:9"},"nativeSrc":"3587:39:9","nodeType":"YulExpressionStatement","src":"3587:39:9"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3526:5:9","nodeType":"YulIdentifier","src":"3526:5:9"},{"name":"end","nativeSrc":"3533:3:9","nodeType":"YulIdentifier","src":"3533:3:9"}],"functionName":{"name":"lt","nativeSrc":"3523:2:9","nodeType":"YulIdentifier","src":"3523:2:9"},"nativeSrc":"3523:14:9","nodeType":"YulFunctionCall","src":"3523:14:9"},"nativeSrc":"3516:120:9","nodeType":"YulForLoop","post":{"nativeSrc":"3538:26:9","nodeType":"YulBlock","src":"3538:26:9","statements":[{"nativeSrc":"3540:22:9","nodeType":"YulAssignment","src":"3540:22:9","value":{"arguments":[{"name":"start","nativeSrc":"3553:5:9","nodeType":"YulIdentifier","src":"3553:5:9"},{"kind":"number","nativeSrc":"3560:1:9","nodeType":"YulLiteral","src":"3560:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3549:3:9","nodeType":"YulIdentifier","src":"3549:3:9"},"nativeSrc":"3549:13:9","nodeType":"YulFunctionCall","src":"3549:13:9"},"variableNames":[{"name":"start","nativeSrc":"3540:5:9","nodeType":"YulIdentifier","src":"3540:5:9"}]}]},"pre":{"nativeSrc":"3520:2:9","nodeType":"YulBlock","src":"3520:2:9","statements":[]},"src":"3516:120:9"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3456:186:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3494:5:9","nodeType":"YulTypedName","src":"3494:5:9","type":""},{"name":"end","nativeSrc":"3501:3:9","nodeType":"YulTypedName","src":"3501:3:9","type":""}],"src":"3456:186:9"},{"body":{"nativeSrc":"3727:464:9","nodeType":"YulBlock","src":"3727:464:9","statements":[{"body":{"nativeSrc":"3753:431:9","nodeType":"YulBlock","src":"3753:431:9","statements":[{"nativeSrc":"3767:54:9","nodeType":"YulVariableDeclaration","src":"3767:54:9","value":{"arguments":[{"name":"array","nativeSrc":"3815:5:9","nodeType":"YulIdentifier","src":"3815:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"3783:31:9","nodeType":"YulIdentifier","src":"3783:31:9"},"nativeSrc":"3783:38:9","nodeType":"YulFunctionCall","src":"3783:38:9"},"variables":[{"name":"dataArea","nativeSrc":"3771:8:9","nodeType":"YulTypedName","src":"3771:8:9","type":""}]},{"nativeSrc":"3834:63:9","nodeType":"YulVariableDeclaration","src":"3834:63:9","value":{"arguments":[{"name":"dataArea","nativeSrc":"3857:8:9","nodeType":"YulIdentifier","src":"3857:8:9"},{"arguments":[{"name":"startIndex","nativeSrc":"3885:10:9","nodeType":"YulIdentifier","src":"3885:10:9"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3867:17:9","nodeType":"YulIdentifier","src":"3867:17:9"},"nativeSrc":"3867:29:9","nodeType":"YulFunctionCall","src":"3867:29:9"}],"functionName":{"name":"add","nativeSrc":"3853:3:9","nodeType":"YulIdentifier","src":"3853:3:9"},"nativeSrc":"3853:44:9","nodeType":"YulFunctionCall","src":"3853:44:9"},"variables":[{"name":"deleteStart","nativeSrc":"3838:11:9","nodeType":"YulTypedName","src":"3838:11:9","type":""}]},{"body":{"nativeSrc":"4054:27:9","nodeType":"YulBlock","src":"4054:27:9","statements":[{"nativeSrc":"4056:23:9","nodeType":"YulAssignment","src":"4056:23:9","value":{"name":"dataArea","nativeSrc":"4071:8:9","nodeType":"YulIdentifier","src":"4071:8:9"},"variableNames":[{"name":"deleteStart","nativeSrc":"4056:11:9","nodeType":"YulIdentifier","src":"4056:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4038:10:9","nodeType":"YulIdentifier","src":"4038:10:9"},{"kind":"number","nativeSrc":"4050:2:9","nodeType":"YulLiteral","src":"4050:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4035:2:9","nodeType":"YulIdentifier","src":"4035:2:9"},"nativeSrc":"4035:18:9","nodeType":"YulFunctionCall","src":"4035:18:9"},"nativeSrc":"4032:49:9","nodeType":"YulIf","src":"4032:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4123:11:9","nodeType":"YulIdentifier","src":"4123:11:9"},{"arguments":[{"name":"dataArea","nativeSrc":"4140:8:9","nodeType":"YulIdentifier","src":"4140:8:9"},{"arguments":[{"name":"len","nativeSrc":"4168:3:9","nodeType":"YulIdentifier","src":"4168:3:9"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4150:17:9","nodeType":"YulIdentifier","src":"4150:17:9"},"nativeSrc":"4150:22:9","nodeType":"YulFunctionCall","src":"4150:22:9"}],"functionName":{"name":"add","nativeSrc":"4136:3:9","nodeType":"YulIdentifier","src":"4136:3:9"},"nativeSrc":"4136:37:9","nodeType":"YulFunctionCall","src":"4136:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4094:28:9","nodeType":"YulIdentifier","src":"4094:28:9"},"nativeSrc":"4094:80:9","nodeType":"YulFunctionCall","src":"4094:80:9"},"nativeSrc":"4094:80:9","nodeType":"YulExpressionStatement","src":"4094:80:9"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3744:3:9","nodeType":"YulIdentifier","src":"3744:3:9"},{"kind":"number","nativeSrc":"3749:2:9","nodeType":"YulLiteral","src":"3749:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3741:2:9","nodeType":"YulIdentifier","src":"3741:2:9"},"nativeSrc":"3741:11:9","nodeType":"YulFunctionCall","src":"3741:11:9"},"nativeSrc":"3738:446:9","nodeType":"YulIf","src":"3738:446:9"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"3648:543:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3703:5:9","nodeType":"YulTypedName","src":"3703:5:9","type":""},{"name":"len","nativeSrc":"3710:3:9","nodeType":"YulTypedName","src":"3710:3:9","type":""},{"name":"startIndex","nativeSrc":"3715:10:9","nodeType":"YulTypedName","src":"3715:10:9","type":""}],"src":"3648:543:9"},{"body":{"nativeSrc":"4260:54:9","nodeType":"YulBlock","src":"4260:54:9","statements":[{"nativeSrc":"4270:37:9","nodeType":"YulAssignment","src":"4270:37:9","value":{"arguments":[{"name":"bits","nativeSrc":"4295:4:9","nodeType":"YulIdentifier","src":"4295:4:9"},{"name":"value","nativeSrc":"4301:5:9","nodeType":"YulIdentifier","src":"4301:5:9"}],"functionName":{"name":"shr","nativeSrc":"4291:3:9","nodeType":"YulIdentifier","src":"4291:3:9"},"nativeSrc":"4291:16:9","nodeType":"YulFunctionCall","src":"4291:16:9"},"variableNames":[{"name":"newValue","nativeSrc":"4270:8:9","nodeType":"YulIdentifier","src":"4270:8:9"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4197:117:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4235:4:9","nodeType":"YulTypedName","src":"4235:4:9","type":""},{"name":"value","nativeSrc":"4241:5:9","nodeType":"YulTypedName","src":"4241:5:9","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4251:8:9","nodeType":"YulTypedName","src":"4251:8:9","type":""}],"src":"4197:117:9"},{"body":{"nativeSrc":"4371:118:9","nodeType":"YulBlock","src":"4371:118:9","statements":[{"nativeSrc":"4381:68:9","nodeType":"YulVariableDeclaration","src":"4381:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4430:1:9","nodeType":"YulLiteral","src":"4430:1:9","type":"","value":"8"},{"name":"bytes","nativeSrc":"4433:5:9","nodeType":"YulIdentifier","src":"4433:5:9"}],"functionName":{"name":"mul","nativeSrc":"4426:3:9","nodeType":"YulIdentifier","src":"4426:3:9"},"nativeSrc":"4426:13:9","nodeType":"YulFunctionCall","src":"4426:13:9"},{"arguments":[{"kind":"number","nativeSrc":"4445:1:9","nodeType":"YulLiteral","src":"4445:1:9","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4441:3:9","nodeType":"YulIdentifier","src":"4441:3:9"},"nativeSrc":"4441:6:9","nodeType":"YulFunctionCall","src":"4441:6:9"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4397:28:9","nodeType":"YulIdentifier","src":"4397:28:9"},"nativeSrc":"4397:51:9","nodeType":"YulFunctionCall","src":"4397:51:9"}],"functionName":{"name":"not","nativeSrc":"4393:3:9","nodeType":"YulIdentifier","src":"4393:3:9"},"nativeSrc":"4393:56:9","nodeType":"YulFunctionCall","src":"4393:56:9"},"variables":[{"name":"mask","nativeSrc":"4385:4:9","nodeType":"YulTypedName","src":"4385:4:9","type":""}]},{"nativeSrc":"4458:25:9","nodeType":"YulAssignment","src":"4458:25:9","value":{"arguments":[{"name":"data","nativeSrc":"4472:4:9","nodeType":"YulIdentifier","src":"4472:4:9"},{"name":"mask","nativeSrc":"4478:4:9","nodeType":"YulIdentifier","src":"4478:4:9"}],"functionName":{"name":"and","nativeSrc":"4468:3:9","nodeType":"YulIdentifier","src":"4468:3:9"},"nativeSrc":"4468:15:9","nodeType":"YulFunctionCall","src":"4468:15:9"},"variableNames":[{"name":"result","nativeSrc":"4458:6:9","nodeType":"YulIdentifier","src":"4458:6:9"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4320:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4348:4:9","nodeType":"YulTypedName","src":"4348:4:9","type":""},{"name":"bytes","nativeSrc":"4354:5:9","nodeType":"YulTypedName","src":"4354:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4364:6:9","nodeType":"YulTypedName","src":"4364:6:9","type":""}],"src":"4320:169:9"},{"body":{"nativeSrc":"4575:214:9","nodeType":"YulBlock","src":"4575:214:9","statements":[{"nativeSrc":"4708:37:9","nodeType":"YulAssignment","src":"4708:37:9","value":{"arguments":[{"name":"data","nativeSrc":"4735:4:9","nodeType":"YulIdentifier","src":"4735:4:9"},{"name":"len","nativeSrc":"4741:3:9","nodeType":"YulIdentifier","src":"4741:3:9"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4716:18:9","nodeType":"YulIdentifier","src":"4716:18:9"},"nativeSrc":"4716:29:9","nodeType":"YulFunctionCall","src":"4716:29:9"},"variableNames":[{"name":"data","nativeSrc":"4708:4:9","nodeType":"YulIdentifier","src":"4708:4:9"}]},{"nativeSrc":"4754:29:9","nodeType":"YulAssignment","src":"4754:29:9","value":{"arguments":[{"name":"data","nativeSrc":"4765:4:9","nodeType":"YulIdentifier","src":"4765:4:9"},{"arguments":[{"kind":"number","nativeSrc":"4775:1:9","nodeType":"YulLiteral","src":"4775:1:9","type":"","value":"2"},{"name":"len","nativeSrc":"4778:3:9","nodeType":"YulIdentifier","src":"4778:3:9"}],"functionName":{"name":"mul","nativeSrc":"4771:3:9","nodeType":"YulIdentifier","src":"4771:3:9"},"nativeSrc":"4771:11:9","nodeType":"YulFunctionCall","src":"4771:11:9"}],"functionName":{"name":"or","nativeSrc":"4762:2:9","nodeType":"YulIdentifier","src":"4762:2:9"},"nativeSrc":"4762:21:9","nodeType":"YulFunctionCall","src":"4762:21:9"},"variableNames":[{"name":"used","nativeSrc":"4754:4:9","nodeType":"YulIdentifier","src":"4754:4:9"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4494:295:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4556:4:9","nodeType":"YulTypedName","src":"4556:4:9","type":""},{"name":"len","nativeSrc":"4562:3:9","nodeType":"YulTypedName","src":"4562:3:9","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4570:4:9","nodeType":"YulTypedName","src":"4570:4:9","type":""}],"src":"4494:295:9"},{"body":{"nativeSrc":"4886:1303:9","nodeType":"YulBlock","src":"4886:1303:9","statements":[{"nativeSrc":"4897:51:9","nodeType":"YulVariableDeclaration","src":"4897:51:9","value":{"arguments":[{"name":"src","nativeSrc":"4944:3:9","nodeType":"YulIdentifier","src":"4944:3:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"4911:32:9","nodeType":"YulIdentifier","src":"4911:32:9"},"nativeSrc":"4911:37:9","nodeType":"YulFunctionCall","src":"4911:37:9"},"variables":[{"name":"newLen","nativeSrc":"4901:6:9","nodeType":"YulTypedName","src":"4901:6:9","type":""}]},{"body":{"nativeSrc":"5033:22:9","nodeType":"YulBlock","src":"5033:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5035:16:9","nodeType":"YulIdentifier","src":"5035:16:9"},"nativeSrc":"5035:18:9","nodeType":"YulFunctionCall","src":"5035:18:9"},"nativeSrc":"5035:18:9","nodeType":"YulExpressionStatement","src":"5035:18:9"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5005:6:9","nodeType":"YulIdentifier","src":"5005:6:9"},{"kind":"number","nativeSrc":"5013:18:9","nodeType":"YulLiteral","src":"5013:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5002:2:9","nodeType":"YulIdentifier","src":"5002:2:9"},"nativeSrc":"5002:30:9","nodeType":"YulFunctionCall","src":"5002:30:9"},"nativeSrc":"4999:56:9","nodeType":"YulIf","src":"4999:56:9"},{"nativeSrc":"5065:52:9","nodeType":"YulVariableDeclaration","src":"5065:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5111:4:9","nodeType":"YulIdentifier","src":"5111:4:9"}],"functionName":{"name":"sload","nativeSrc":"5105:5:9","nodeType":"YulIdentifier","src":"5105:5:9"},"nativeSrc":"5105:11:9","nodeType":"YulFunctionCall","src":"5105:11:9"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5079:25:9","nodeType":"YulIdentifier","src":"5079:25:9"},"nativeSrc":"5079:38:9","nodeType":"YulFunctionCall","src":"5079:38:9"},"variables":[{"name":"oldLen","nativeSrc":"5069:6:9","nodeType":"YulTypedName","src":"5069:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5210:4:9","nodeType":"YulIdentifier","src":"5210:4:9"},{"name":"oldLen","nativeSrc":"5216:6:9","nodeType":"YulIdentifier","src":"5216:6:9"},{"name":"newLen","nativeSrc":"5224:6:9","nodeType":"YulIdentifier","src":"5224:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5164:45:9","nodeType":"YulIdentifier","src":"5164:45:9"},"nativeSrc":"5164:67:9","nodeType":"YulFunctionCall","src":"5164:67:9"},"nativeSrc":"5164:67:9","nodeType":"YulExpressionStatement","src":"5164:67:9"},{"nativeSrc":"5241:18:9","nodeType":"YulVariableDeclaration","src":"5241:18:9","value":{"kind":"number","nativeSrc":"5258:1:9","nodeType":"YulLiteral","src":"5258:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5245:9:9","nodeType":"YulTypedName","src":"5245:9:9","type":""}]},{"nativeSrc":"5269:17:9","nodeType":"YulAssignment","src":"5269:17:9","value":{"kind":"number","nativeSrc":"5282:4:9","nodeType":"YulLiteral","src":"5282:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5269:9:9","nodeType":"YulIdentifier","src":"5269:9:9"}]},{"cases":[{"body":{"nativeSrc":"5333:611:9","nodeType":"YulBlock","src":"5333:611:9","statements":[{"nativeSrc":"5347:37:9","nodeType":"YulVariableDeclaration","src":"5347:37:9","value":{"arguments":[{"name":"newLen","nativeSrc":"5366:6:9","nodeType":"YulIdentifier","src":"5366:6:9"},{"arguments":[{"kind":"number","nativeSrc":"5378:4:9","nodeType":"YulLiteral","src":"5378:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5374:3:9","nodeType":"YulIdentifier","src":"5374:3:9"},"nativeSrc":"5374:9:9","nodeType":"YulFunctionCall","src":"5374:9:9"}],"functionName":{"name":"and","nativeSrc":"5362:3:9","nodeType":"YulIdentifier","src":"5362:3:9"},"nativeSrc":"5362:22:9","nodeType":"YulFunctionCall","src":"5362:22:9"},"variables":[{"name":"loopEnd","nativeSrc":"5351:7:9","nodeType":"YulTypedName","src":"5351:7:9","type":""}]},{"nativeSrc":"5398:51:9","nodeType":"YulVariableDeclaration","src":"5398:51:9","value":{"arguments":[{"name":"slot","nativeSrc":"5444:4:9","nodeType":"YulIdentifier","src":"5444:4:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5412:31:9","nodeType":"YulIdentifier","src":"5412:31:9"},"nativeSrc":"5412:37:9","nodeType":"YulFunctionCall","src":"5412:37:9"},"variables":[{"name":"dstPtr","nativeSrc":"5402:6:9","nodeType":"YulTypedName","src":"5402:6:9","type":""}]},{"nativeSrc":"5462:10:9","nodeType":"YulVariableDeclaration","src":"5462:10:9","value":{"kind":"number","nativeSrc":"5471:1:9","nodeType":"YulLiteral","src":"5471:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5466:1:9","nodeType":"YulTypedName","src":"5466:1:9","type":""}]},{"body":{"nativeSrc":"5530:163:9","nodeType":"YulBlock","src":"5530:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5555:6:9","nodeType":"YulIdentifier","src":"5555:6:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5573:3:9","nodeType":"YulIdentifier","src":"5573:3:9"},{"name":"srcOffset","nativeSrc":"5578:9:9","nodeType":"YulIdentifier","src":"5578:9:9"}],"functionName":{"name":"add","nativeSrc":"5569:3:9","nodeType":"YulIdentifier","src":"5569:3:9"},"nativeSrc":"5569:19:9","nodeType":"YulFunctionCall","src":"5569:19:9"}],"functionName":{"name":"mload","nativeSrc":"5563:5:9","nodeType":"YulIdentifier","src":"5563:5:9"},"nativeSrc":"5563:26:9","nodeType":"YulFunctionCall","src":"5563:26:9"}],"functionName":{"name":"sstore","nativeSrc":"5548:6:9","nodeType":"YulIdentifier","src":"5548:6:9"},"nativeSrc":"5548:42:9","nodeType":"YulFunctionCall","src":"5548:42:9"},"nativeSrc":"5548:42:9","nodeType":"YulExpressionStatement","src":"5548:42:9"},{"nativeSrc":"5607:24:9","nodeType":"YulAssignment","src":"5607:24:9","value":{"arguments":[{"name":"dstPtr","nativeSrc":"5621:6:9","nodeType":"YulIdentifier","src":"5621:6:9"},{"kind":"number","nativeSrc":"5629:1:9","nodeType":"YulLiteral","src":"5629:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5617:3:9","nodeType":"YulIdentifier","src":"5617:3:9"},"nativeSrc":"5617:14:9","nodeType":"YulFunctionCall","src":"5617:14:9"},"variableNames":[{"name":"dstPtr","nativeSrc":"5607:6:9","nodeType":"YulIdentifier","src":"5607:6:9"}]},{"nativeSrc":"5648:31:9","nodeType":"YulAssignment","src":"5648:31:9","value":{"arguments":[{"name":"srcOffset","nativeSrc":"5665:9:9","nodeType":"YulIdentifier","src":"5665:9:9"},{"kind":"number","nativeSrc":"5676:2:9","nodeType":"YulLiteral","src":"5676:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5661:3:9","nodeType":"YulIdentifier","src":"5661:3:9"},"nativeSrc":"5661:18:9","nodeType":"YulFunctionCall","src":"5661:18:9"},"variableNames":[{"name":"srcOffset","nativeSrc":"5648:9:9","nodeType":"YulIdentifier","src":"5648:9:9"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5496:1:9","nodeType":"YulIdentifier","src":"5496:1:9"},{"name":"loopEnd","nativeSrc":"5499:7:9","nodeType":"YulIdentifier","src":"5499:7:9"}],"functionName":{"name":"lt","nativeSrc":"5493:2:9","nodeType":"YulIdentifier","src":"5493:2:9"},"nativeSrc":"5493:14:9","nodeType":"YulFunctionCall","src":"5493:14:9"},"nativeSrc":"5485:208:9","nodeType":"YulForLoop","post":{"nativeSrc":"5508:21:9","nodeType":"YulBlock","src":"5508:21:9","statements":[{"nativeSrc":"5510:17:9","nodeType":"YulAssignment","src":"5510:17:9","value":{"arguments":[{"name":"i","nativeSrc":"5519:1:9","nodeType":"YulIdentifier","src":"5519:1:9"},{"kind":"number","nativeSrc":"5522:4:9","nodeType":"YulLiteral","src":"5522:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5515:3:9","nodeType":"YulIdentifier","src":"5515:3:9"},"nativeSrc":"5515:12:9","nodeType":"YulFunctionCall","src":"5515:12:9"},"variableNames":[{"name":"i","nativeSrc":"5510:1:9","nodeType":"YulIdentifier","src":"5510:1:9"}]}]},"pre":{"nativeSrc":"5489:3:9","nodeType":"YulBlock","src":"5489:3:9","statements":[]},"src":"5485:208:9"},{"body":{"nativeSrc":"5729:156:9","nodeType":"YulBlock","src":"5729:156:9","statements":[{"nativeSrc":"5747:43:9","nodeType":"YulVariableDeclaration","src":"5747:43:9","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5774:3:9","nodeType":"YulIdentifier","src":"5774:3:9"},{"name":"srcOffset","nativeSrc":"5779:9:9","nodeType":"YulIdentifier","src":"5779:9:9"}],"functionName":{"name":"add","nativeSrc":"5770:3:9","nodeType":"YulIdentifier","src":"5770:3:9"},"nativeSrc":"5770:19:9","nodeType":"YulFunctionCall","src":"5770:19:9"}],"functionName":{"name":"mload","nativeSrc":"5764:5:9","nodeType":"YulIdentifier","src":"5764:5:9"},"nativeSrc":"5764:26:9","nodeType":"YulFunctionCall","src":"5764:26:9"},"variables":[{"name":"lastValue","nativeSrc":"5751:9:9","nodeType":"YulTypedName","src":"5751:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5814:6:9","nodeType":"YulIdentifier","src":"5814:6:9"},{"arguments":[{"name":"lastValue","nativeSrc":"5841:9:9","nodeType":"YulIdentifier","src":"5841:9:9"},{"arguments":[{"name":"newLen","nativeSrc":"5856:6:9","nodeType":"YulIdentifier","src":"5856:6:9"},{"kind":"number","nativeSrc":"5864:4:9","nodeType":"YulLiteral","src":"5864:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"5852:3:9","nodeType":"YulIdentifier","src":"5852:3:9"},"nativeSrc":"5852:17:9","nodeType":"YulFunctionCall","src":"5852:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5822:18:9","nodeType":"YulIdentifier","src":"5822:18:9"},"nativeSrc":"5822:48:9","nodeType":"YulFunctionCall","src":"5822:48:9"}],"functionName":{"name":"sstore","nativeSrc":"5807:6:9","nodeType":"YulIdentifier","src":"5807:6:9"},"nativeSrc":"5807:64:9","nodeType":"YulFunctionCall","src":"5807:64:9"},"nativeSrc":"5807:64:9","nodeType":"YulExpressionStatement","src":"5807:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"5712:7:9","nodeType":"YulIdentifier","src":"5712:7:9"},{"name":"newLen","nativeSrc":"5721:6:9","nodeType":"YulIdentifier","src":"5721:6:9"}],"functionName":{"name":"lt","nativeSrc":"5709:2:9","nodeType":"YulIdentifier","src":"5709:2:9"},"nativeSrc":"5709:19:9","nodeType":"YulFunctionCall","src":"5709:19:9"},"nativeSrc":"5706:179:9","nodeType":"YulIf","src":"5706:179:9"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5905:4:9","nodeType":"YulIdentifier","src":"5905:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"5919:6:9","nodeType":"YulIdentifier","src":"5919:6:9"},{"kind":"number","nativeSrc":"5927:1:9","nodeType":"YulLiteral","src":"5927:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"5915:3:9","nodeType":"YulIdentifier","src":"5915:3:9"},"nativeSrc":"5915:14:9","nodeType":"YulFunctionCall","src":"5915:14:9"},{"kind":"number","nativeSrc":"5931:1:9","nodeType":"YulLiteral","src":"5931:1:9","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5911:3:9","nodeType":"YulIdentifier","src":"5911:3:9"},"nativeSrc":"5911:22:9","nodeType":"YulFunctionCall","src":"5911:22:9"}],"functionName":{"name":"sstore","nativeSrc":"5898:6:9","nodeType":"YulIdentifier","src":"5898:6:9"},"nativeSrc":"5898:36:9","nodeType":"YulFunctionCall","src":"5898:36:9"},"nativeSrc":"5898:36:9","nodeType":"YulExpressionStatement","src":"5898:36:9"}]},"nativeSrc":"5326:618:9","nodeType":"YulCase","src":"5326:618:9","value":{"kind":"number","nativeSrc":"5331:1:9","nodeType":"YulLiteral","src":"5331:1:9","type":"","value":"1"}},{"body":{"nativeSrc":"5961:222:9","nodeType":"YulBlock","src":"5961:222:9","statements":[{"nativeSrc":"5975:14:9","nodeType":"YulVariableDeclaration","src":"5975:14:9","value":{"kind":"number","nativeSrc":"5988:1:9","nodeType":"YulLiteral","src":"5988:1:9","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5979:5:9","nodeType":"YulTypedName","src":"5979:5:9","type":""}]},{"body":{"nativeSrc":"6012:67:9","nodeType":"YulBlock","src":"6012:67:9","statements":[{"nativeSrc":"6030:35:9","nodeType":"YulAssignment","src":"6030:35:9","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6049:3:9","nodeType":"YulIdentifier","src":"6049:3:9"},{"name":"srcOffset","nativeSrc":"6054:9:9","nodeType":"YulIdentifier","src":"6054:9:9"}],"functionName":{"name":"add","nativeSrc":"6045:3:9","nodeType":"YulIdentifier","src":"6045:3:9"},"nativeSrc":"6045:19:9","nodeType":"YulFunctionCall","src":"6045:19:9"}],"functionName":{"name":"mload","nativeSrc":"6039:5:9","nodeType":"YulIdentifier","src":"6039:5:9"},"nativeSrc":"6039:26:9","nodeType":"YulFunctionCall","src":"6039:26:9"},"variableNames":[{"name":"value","nativeSrc":"6030:5:9","nodeType":"YulIdentifier","src":"6030:5:9"}]}]},"condition":{"name":"newLen","nativeSrc":"6005:6:9","nodeType":"YulIdentifier","src":"6005:6:9"},"nativeSrc":"6002:77:9","nodeType":"YulIf","src":"6002:77:9"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6099:4:9","nodeType":"YulIdentifier","src":"6099:4:9"},{"arguments":[{"name":"value","nativeSrc":"6158:5:9","nodeType":"YulIdentifier","src":"6158:5:9"},{"name":"newLen","nativeSrc":"6165:6:9","nodeType":"YulIdentifier","src":"6165:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6105:52:9","nodeType":"YulIdentifier","src":"6105:52:9"},"nativeSrc":"6105:67:9","nodeType":"YulFunctionCall","src":"6105:67:9"}],"functionName":{"name":"sstore","nativeSrc":"6092:6:9","nodeType":"YulIdentifier","src":"6092:6:9"},"nativeSrc":"6092:81:9","nodeType":"YulFunctionCall","src":"6092:81:9"},"nativeSrc":"6092:81:9","nodeType":"YulExpressionStatement","src":"6092:81:9"}]},"nativeSrc":"5953:230:9","nodeType":"YulCase","src":"5953:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5306:6:9","nodeType":"YulIdentifier","src":"5306:6:9"},{"kind":"number","nativeSrc":"5314:2:9","nodeType":"YulLiteral","src":"5314:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5303:2:9","nodeType":"YulIdentifier","src":"5303:2:9"},"nativeSrc":"5303:14:9","nodeType":"YulFunctionCall","src":"5303:14:9"},"nativeSrc":"5296:887:9","nodeType":"YulSwitch","src":"5296:887:9"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"4794:1395:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"4875:4:9","nodeType":"YulTypedName","src":"4875:4:9","type":""},{"name":"src","nativeSrc":"4881:3:9","nodeType":"YulTypedName","src":"4881:3:9","type":""}],"src":"4794:1395:9"},{"body":{"nativeSrc":"6240:81:9","nodeType":"YulBlock","src":"6240:81:9","statements":[{"nativeSrc":"6250:65:9","nodeType":"YulAssignment","src":"6250:65:9","value":{"arguments":[{"name":"value","nativeSrc":"6265:5:9","nodeType":"YulIdentifier","src":"6265:5:9"},{"kind":"number","nativeSrc":"6272:42:9","nodeType":"YulLiteral","src":"6272:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6261:3:9","nodeType":"YulIdentifier","src":"6261:3:9"},"nativeSrc":"6261:54:9","nodeType":"YulFunctionCall","src":"6261:54:9"},"variableNames":[{"name":"cleaned","nativeSrc":"6250:7:9","nodeType":"YulIdentifier","src":"6250:7:9"}]}]},"name":"cleanup_t_uint160","nativeSrc":"6195:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6222:5:9","nodeType":"YulTypedName","src":"6222:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6232:7:9","nodeType":"YulTypedName","src":"6232:7:9","type":""}],"src":"6195:126:9"},{"body":{"nativeSrc":"6372:51:9","nodeType":"YulBlock","src":"6372:51:9","statements":[{"nativeSrc":"6382:35:9","nodeType":"YulAssignment","src":"6382:35:9","value":{"arguments":[{"name":"value","nativeSrc":"6411:5:9","nodeType":"YulIdentifier","src":"6411:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"6393:17:9","nodeType":"YulIdentifier","src":"6393:17:9"},"nativeSrc":"6393:24:9","nodeType":"YulFunctionCall","src":"6393:24:9"},"variableNames":[{"name":"cleaned","nativeSrc":"6382:7:9","nodeType":"YulIdentifier","src":"6382:7:9"}]}]},"name":"cleanup_t_address","nativeSrc":"6327:96:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6354:5:9","nodeType":"YulTypedName","src":"6354:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6364:7:9","nodeType":"YulTypedName","src":"6364:7:9","type":""}],"src":"6327:96:9"},{"body":{"nativeSrc":"6494:53:9","nodeType":"YulBlock","src":"6494:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6511:3:9","nodeType":"YulIdentifier","src":"6511:3:9"},{"arguments":[{"name":"value","nativeSrc":"6534:5:9","nodeType":"YulIdentifier","src":"6534:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6516:17:9","nodeType":"YulIdentifier","src":"6516:17:9"},"nativeSrc":"6516:24:9","nodeType":"YulFunctionCall","src":"6516:24:9"}],"functionName":{"name":"mstore","nativeSrc":"6504:6:9","nodeType":"YulIdentifier","src":"6504:6:9"},"nativeSrc":"6504:37:9","nodeType":"YulFunctionCall","src":"6504:37:9"},"nativeSrc":"6504:37:9","nodeType":"YulExpressionStatement","src":"6504:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6429:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6482:5:9","nodeType":"YulTypedName","src":"6482:5:9","type":""},{"name":"pos","nativeSrc":"6489:3:9","nodeType":"YulTypedName","src":"6489:3:9","type":""}],"src":"6429:118:9"},{"body":{"nativeSrc":"6651:124:9","nodeType":"YulBlock","src":"6651:124:9","statements":[{"nativeSrc":"6661:26:9","nodeType":"YulAssignment","src":"6661:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"6673:9:9","nodeType":"YulIdentifier","src":"6673:9:9"},{"kind":"number","nativeSrc":"6684:2:9","nodeType":"YulLiteral","src":"6684:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6669:3:9","nodeType":"YulIdentifier","src":"6669:3:9"},"nativeSrc":"6669:18:9","nodeType":"YulFunctionCall","src":"6669:18:9"},"variableNames":[{"name":"tail","nativeSrc":"6661:4:9","nodeType":"YulIdentifier","src":"6661:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6741:6:9","nodeType":"YulIdentifier","src":"6741:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6754:9:9","nodeType":"YulIdentifier","src":"6754:9:9"},{"kind":"number","nativeSrc":"6765:1:9","nodeType":"YulLiteral","src":"6765:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6750:3:9","nodeType":"YulIdentifier","src":"6750:3:9"},"nativeSrc":"6750:17:9","nodeType":"YulFunctionCall","src":"6750:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6697:43:9","nodeType":"YulIdentifier","src":"6697:43:9"},"nativeSrc":"6697:71:9","nodeType":"YulFunctionCall","src":"6697:71:9"},"nativeSrc":"6697:71:9","nodeType":"YulExpressionStatement","src":"6697:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6553:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6623:9:9","nodeType":"YulTypedName","src":"6623:9:9","type":""},{"name":"value0","nativeSrc":"6635:6:9","nodeType":"YulTypedName","src":"6635:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6646:4:9","nodeType":"YulTypedName","src":"6646:4:9","type":""}],"src":"6553:222:9"},{"body":{"nativeSrc":"6809:152:9","nodeType":"YulBlock","src":"6809:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6826:1:9","nodeType":"YulLiteral","src":"6826:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6829:77:9","nodeType":"YulLiteral","src":"6829:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6819:6:9","nodeType":"YulIdentifier","src":"6819:6:9"},"nativeSrc":"6819:88:9","nodeType":"YulFunctionCall","src":"6819:88:9"},"nativeSrc":"6819:88:9","nodeType":"YulExpressionStatement","src":"6819:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6923:1:9","nodeType":"YulLiteral","src":"6923:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"6926:4:9","nodeType":"YulLiteral","src":"6926:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6916:6:9","nodeType":"YulIdentifier","src":"6916:6:9"},"nativeSrc":"6916:15:9","nodeType":"YulFunctionCall","src":"6916:15:9"},"nativeSrc":"6916:15:9","nodeType":"YulExpressionStatement","src":"6916:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6947:1:9","nodeType":"YulLiteral","src":"6947:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"6950:4:9","nodeType":"YulLiteral","src":"6950:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6940:6:9","nodeType":"YulIdentifier","src":"6940:6:9"},"nativeSrc":"6940:15:9","nodeType":"YulFunctionCall","src":"6940:15:9"},"nativeSrc":"6940:15:9","nodeType":"YulExpressionStatement","src":"6940:15:9"}]},"name":"panic_error_0x11","nativeSrc":"6781:180:9","nodeType":"YulFunctionDefinition","src":"6781:180:9"},{"body":{"nativeSrc":"7011:147:9","nodeType":"YulBlock","src":"7011:147:9","statements":[{"nativeSrc":"7021:25:9","nodeType":"YulAssignment","src":"7021:25:9","value":{"arguments":[{"name":"x","nativeSrc":"7044:1:9","nodeType":"YulIdentifier","src":"7044:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7026:17:9","nodeType":"YulIdentifier","src":"7026:17:9"},"nativeSrc":"7026:20:9","nodeType":"YulFunctionCall","src":"7026:20:9"},"variableNames":[{"name":"x","nativeSrc":"7021:1:9","nodeType":"YulIdentifier","src":"7021:1:9"}]},{"nativeSrc":"7055:25:9","nodeType":"YulAssignment","src":"7055:25:9","value":{"arguments":[{"name":"y","nativeSrc":"7078:1:9","nodeType":"YulIdentifier","src":"7078:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7060:17:9","nodeType":"YulIdentifier","src":"7060:17:9"},"nativeSrc":"7060:20:9","nodeType":"YulFunctionCall","src":"7060:20:9"},"variableNames":[{"name":"y","nativeSrc":"7055:1:9","nodeType":"YulIdentifier","src":"7055:1:9"}]},{"nativeSrc":"7089:16:9","nodeType":"YulAssignment","src":"7089:16:9","value":{"arguments":[{"name":"x","nativeSrc":"7100:1:9","nodeType":"YulIdentifier","src":"7100:1:9"},{"name":"y","nativeSrc":"7103:1:9","nodeType":"YulIdentifier","src":"7103:1:9"}],"functionName":{"name":"add","nativeSrc":"7096:3:9","nodeType":"YulIdentifier","src":"7096:3:9"},"nativeSrc":"7096:9:9","nodeType":"YulFunctionCall","src":"7096:9:9"},"variableNames":[{"name":"sum","nativeSrc":"7089:3:9","nodeType":"YulIdentifier","src":"7089:3:9"}]},{"body":{"nativeSrc":"7129:22:9","nodeType":"YulBlock","src":"7129:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7131:16:9","nodeType":"YulIdentifier","src":"7131:16:9"},"nativeSrc":"7131:18:9","nodeType":"YulFunctionCall","src":"7131:18:9"},"nativeSrc":"7131:18:9","nodeType":"YulExpressionStatement","src":"7131:18:9"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7121:1:9","nodeType":"YulIdentifier","src":"7121:1:9"},{"name":"sum","nativeSrc":"7124:3:9","nodeType":"YulIdentifier","src":"7124:3:9"}],"functionName":{"name":"gt","nativeSrc":"7118:2:9","nodeType":"YulIdentifier","src":"7118:2:9"},"nativeSrc":"7118:10:9","nodeType":"YulFunctionCall","src":"7118:10:9"},"nativeSrc":"7115:36:9","nodeType":"YulIf","src":"7115:36:9"}]},"name":"checked_add_t_uint256","nativeSrc":"6967:191:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6998:1:9","nodeType":"YulTypedName","src":"6998:1:9","type":""},{"name":"y","nativeSrc":"7001:1:9","nodeType":"YulTypedName","src":"7001:1:9","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7007:3:9","nodeType":"YulTypedName","src":"7007:3:9","type":""}],"src":"6967:191:9"},{"body":{"nativeSrc":"7229:53:9","nodeType":"YulBlock","src":"7229:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7246:3:9","nodeType":"YulIdentifier","src":"7246:3:9"},{"arguments":[{"name":"value","nativeSrc":"7269:5:9","nodeType":"YulIdentifier","src":"7269:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7251:17:9","nodeType":"YulIdentifier","src":"7251:17:9"},"nativeSrc":"7251:24:9","nodeType":"YulFunctionCall","src":"7251:24:9"}],"functionName":{"name":"mstore","nativeSrc":"7239:6:9","nodeType":"YulIdentifier","src":"7239:6:9"},"nativeSrc":"7239:37:9","nodeType":"YulFunctionCall","src":"7239:37:9"},"nativeSrc":"7239:37:9","nodeType":"YulExpressionStatement","src":"7239:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7164:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7217:5:9","nodeType":"YulTypedName","src":"7217:5:9","type":""},{"name":"pos","nativeSrc":"7224:3:9","nodeType":"YulTypedName","src":"7224:3:9","type":""}],"src":"7164:118:9"},{"body":{"nativeSrc":"7442:288:9","nodeType":"YulBlock","src":"7442:288:9","statements":[{"nativeSrc":"7452:26:9","nodeType":"YulAssignment","src":"7452:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"7464:9:9","nodeType":"YulIdentifier","src":"7464:9:9"},{"kind":"number","nativeSrc":"7475:2:9","nodeType":"YulLiteral","src":"7475:2:9","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7460:3:9","nodeType":"YulIdentifier","src":"7460:3:9"},"nativeSrc":"7460:18:9","nodeType":"YulFunctionCall","src":"7460:18:9"},"variableNames":[{"name":"tail","nativeSrc":"7452:4:9","nodeType":"YulIdentifier","src":"7452:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7532:6:9","nodeType":"YulIdentifier","src":"7532:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7545:9:9","nodeType":"YulIdentifier","src":"7545:9:9"},{"kind":"number","nativeSrc":"7556:1:9","nodeType":"YulLiteral","src":"7556:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7541:3:9","nodeType":"YulIdentifier","src":"7541:3:9"},"nativeSrc":"7541:17:9","nodeType":"YulFunctionCall","src":"7541:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7488:43:9","nodeType":"YulIdentifier","src":"7488:43:9"},"nativeSrc":"7488:71:9","nodeType":"YulFunctionCall","src":"7488:71:9"},"nativeSrc":"7488:71:9","nodeType":"YulExpressionStatement","src":"7488:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7613:6:9","nodeType":"YulIdentifier","src":"7613:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7626:9:9","nodeType":"YulIdentifier","src":"7626:9:9"},{"kind":"number","nativeSrc":"7637:2:9","nodeType":"YulLiteral","src":"7637:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7622:3:9","nodeType":"YulIdentifier","src":"7622:3:9"},"nativeSrc":"7622:18:9","nodeType":"YulFunctionCall","src":"7622:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7569:43:9","nodeType":"YulIdentifier","src":"7569:43:9"},"nativeSrc":"7569:72:9","nodeType":"YulFunctionCall","src":"7569:72:9"},"nativeSrc":"7569:72:9","nodeType":"YulExpressionStatement","src":"7569:72:9"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7695:6:9","nodeType":"YulIdentifier","src":"7695:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7708:9:9","nodeType":"YulIdentifier","src":"7708:9:9"},{"kind":"number","nativeSrc":"7719:2:9","nodeType":"YulLiteral","src":"7719:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7704:3:9","nodeType":"YulIdentifier","src":"7704:3:9"},"nativeSrc":"7704:18:9","nodeType":"YulFunctionCall","src":"7704:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7651:43:9","nodeType":"YulIdentifier","src":"7651:43:9"},"nativeSrc":"7651:72:9","nodeType":"YulFunctionCall","src":"7651:72:9"},"nativeSrc":"7651:72:9","nodeType":"YulExpressionStatement","src":"7651:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7288:442:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7398:9:9","nodeType":"YulTypedName","src":"7398:9:9","type":""},{"name":"value2","nativeSrc":"7410:6:9","nodeType":"YulTypedName","src":"7410:6:9","type":""},{"name":"value1","nativeSrc":"7418:6:9","nodeType":"YulTypedName","src":"7418:6:9","type":""},{"name":"value0","nativeSrc":"7426:6:9","nodeType":"YulTypedName","src":"7426:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7437:4:9","nodeType":"YulTypedName","src":"7437:4:9","type":""}],"src":"7288:442:9"},{"body":{"nativeSrc":"7834:124:9","nodeType":"YulBlock","src":"7834:124:9","statements":[{"nativeSrc":"7844:26:9","nodeType":"YulAssignment","src":"7844:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"7856:9:9","nodeType":"YulIdentifier","src":"7856:9:9"},{"kind":"number","nativeSrc":"7867:2:9","nodeType":"YulLiteral","src":"7867:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7852:3:9","nodeType":"YulIdentifier","src":"7852:3:9"},"nativeSrc":"7852:18:9","nodeType":"YulFunctionCall","src":"7852:18:9"},"variableNames":[{"name":"tail","nativeSrc":"7844:4:9","nodeType":"YulIdentifier","src":"7844:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7924:6:9","nodeType":"YulIdentifier","src":"7924:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"7937:9:9","nodeType":"YulIdentifier","src":"7937:9:9"},{"kind":"number","nativeSrc":"7948:1:9","nodeType":"YulLiteral","src":"7948:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7933:3:9","nodeType":"YulIdentifier","src":"7933:3:9"},"nativeSrc":"7933:17:9","nodeType":"YulFunctionCall","src":"7933:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7880:43:9","nodeType":"YulIdentifier","src":"7880:43:9"},"nativeSrc":"7880:71:9","nodeType":"YulFunctionCall","src":"7880:71:9"},"nativeSrc":"7880:71:9","nodeType":"YulExpressionStatement","src":"7880:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"7736:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7806:9:9","nodeType":"YulTypedName","src":"7806:9:9","type":""},{"name":"value0","nativeSrc":"7818:6:9","nodeType":"YulTypedName","src":"7818:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7829:4:9","nodeType":"YulTypedName","src":"7829:4:9","type":""}],"src":"7736:222:9"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001704380380620017048339818101604052810190620000379190620003df565b6040518060400160405280600681526020017f546f6b656e4200000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4200000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000681565b508060049081620000c6919062000681565b505050620000db3382620000e260201b60201c565b506200089f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001575760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200014e9190620007ad565b60405180910390fd5b6200016b600083836200016f60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001c5578060026000828254620001b89190620007f9565b925050819055506200029b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000254578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200024b9392919062000845565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002e6578060026000828254039250508190555062000333565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000392919062000882565b60405180910390a3505050565b600080fd5b6000819050919050565b620003b981620003a4565b8114620003c557600080fd5b50565b600081519050620003d981620003ae565b92915050565b600060208284031215620003f857620003f76200039f565b5b60006200040884828501620003c8565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049357607f821691505b602082108103620004a957620004a86200044b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004d4565b6200051f8683620004d4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005626200055c6200055684620003a4565b62000537565b620003a4565b9050919050565b6000819050919050565b6200057e8362000541565b620005966200058d8262000569565b848454620004e1565b825550505050565b600090565b620005ad6200059e565b620005ba81848462000573565b505050565b5b81811015620005e257620005d6600082620005a3565b600181019050620005c0565b5050565b601f8211156200063157620005fb81620004af565b6200060684620004c4565b8101602085101562000616578190505b6200062e6200062585620004c4565b830182620005bf565b50505b505050565b600082821c905092915050565b6000620006566000198460080262000636565b1980831691505092915050565b600062000671838362000643565b9150826002028217905092915050565b6200068c8262000411565b67ffffffffffffffff811115620006a857620006a76200041c565b5b620006b482546200047a565b620006c1828285620005e6565b600060209050601f831160018114620006f95760008415620006e4578287015190505b620006f0858262000663565b86555062000760565b601f1984166200070986620004af565b60005b8281101562000733578489015182556001820191506020850194506020810190506200070c565b868310156200075357848901516200074f601f89168262000643565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007958262000768565b9050919050565b620007a78162000788565b82525050565b6000602082019050620007c460008301846200079c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200080682620003a4565b91506200081383620003a4565b92508282019050808211156200082e576200082d620007ca565b5b92915050565b6200083f81620003a4565b82525050565b60006060820190506200085c60008301866200079c565b6200086b602083018562000834565b6200087a604083018462000834565b949350505050565b600060208201905062000899600083018462000834565b92915050565b610e5580620008af6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aa9565b60405180910390f35b6100d060048036038101906100cb9190610b64565b610292565b6040516100dd9190610bbf565b60405180910390f35b6100ee6102b5565b6040516100fb9190610be9565b60405180910390f35b61011e60048036038101906101199190610c04565b6102bf565b60405161012b9190610bbf565b60405180910390f35b61013c6102ee565b6040516101499190610c73565b60405180910390f35b61016c60048036038101906101679190610c8e565b6102f7565b6040516101799190610be9565b60405180910390f35b61018a61033f565b6040516101979190610aa9565b60405180910390f35b6101ba60048036038101906101b59190610b64565b6103d1565b6040516101c79190610bbf565b60405180910390f35b6101ea60048036038101906101e59190610cbb565b6103f4565b6040516101f79190610be9565b60405180910390f35b60606003805461020f90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2a565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e2858585610529565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e9818585610529565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061d565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105235781811015610513578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050a93929190610d6a565b60405180910390fd5b6105228484848403600061061d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105929190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106049190610da1565b60405180910390fd5b6106188383836107f4565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361068f5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106869190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107015760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f89190610da1565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e59190610be9565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084657806002600082825461083a9190610deb565b92505081905550610919565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108c993929190610d6a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096257806002600082825403925050819055506109af565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0c9190610be9565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a53578082015181840152602081019050610a38565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7b82610a19565b610a858185610a24565b9350610a95818560208601610a35565b610a9e81610a5f565b840191505092915050565b60006020820190508181036000830152610ac38184610a70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afb82610ad0565b9050919050565b610b0b81610af0565b8114610b1657600080fd5b50565b600081359050610b2881610b02565b92915050565b6000819050919050565b610b4181610b2e565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b60008060408385031215610b7b57610b7a610acb565b5b6000610b8985828601610b19565b9250506020610b9a85828601610b4f565b9150509250929050565b60008115159050919050565b610bb981610ba4565b82525050565b6000602082019050610bd46000830184610bb0565b92915050565b610be381610b2e565b82525050565b6000602082019050610bfe6000830184610bda565b92915050565b600080600060608486031215610c1d57610c1c610acb565b5b6000610c2b86828701610b19565b9350506020610c3c86828701610b19565b9250506040610c4d86828701610b4f565b9150509250925092565b600060ff82169050919050565b610c6d81610c57565b82525050565b6000602082019050610c886000830184610c64565b92915050565b600060208284031215610ca457610ca3610acb565b5b6000610cb284828501610b19565b91505092915050565b60008060408385031215610cd257610cd1610acb565b5b6000610ce085828601610b19565b9250506020610cf185828601610b19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4257607f821691505b602082108103610d5557610d54610cfb565b5b50919050565b610d6481610af0565b82525050565b6000606082019050610d7f6000830186610d5b565b610d8c6020830185610bda565b610d996040830184610bda565b949350505050565b6000602082019050610db66000830184610d5b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df682610b2e565b9150610e0183610b2e565b9250828201905080821115610e1957610e18610dbc565b5b9291505056fea2646970667358221220632439b95215f46f2fd859e0909efcfc5396766b7dfd21ccc7996d481b1b914e64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1704 CODESIZE SUB DUP1 PUSH3 0x1704 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E420000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544B420000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x681 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x681 JUMP JUMPDEST POP POP POP PUSH3 0xDB CALLER DUP3 PUSH3 0xE2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x89F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x157 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14E SWAP2 SWAP1 PUSH3 0x7AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x16B PUSH1 0x0 DUP4 DUP4 PUSH3 0x16F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1C5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1B8 SWAP2 SWAP1 PUSH3 0x7F9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x29B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x254 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2E6 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x333 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x392 SWAP2 SWAP1 PUSH3 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B9 DUP2 PUSH3 0x3A4 JUMP JUMPDEST DUP2 EQ PUSH3 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3D9 DUP2 PUSH3 0x3AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3F8 JUMPI PUSH3 0x3F7 PUSH3 0x39F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x408 DUP5 DUP3 DUP6 ADD PUSH3 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x493 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A9 JUMPI PUSH3 0x4A8 PUSH3 0x44B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x513 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4D4 JUMP JUMPDEST PUSH3 0x51F DUP7 DUP4 PUSH3 0x4D4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x562 PUSH3 0x55C PUSH3 0x556 DUP5 PUSH3 0x3A4 JUMP JUMPDEST PUSH3 0x537 JUMP JUMPDEST PUSH3 0x3A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x57E DUP4 PUSH3 0x541 JUMP JUMPDEST PUSH3 0x596 PUSH3 0x58D DUP3 PUSH3 0x569 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4E1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5AD PUSH3 0x59E JUMP JUMPDEST PUSH3 0x5BA DUP2 DUP5 DUP5 PUSH3 0x573 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5E2 JUMPI PUSH3 0x5D6 PUSH1 0x0 DUP3 PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x631 JUMPI PUSH3 0x5FB DUP2 PUSH3 0x4AF JUMP JUMPDEST PUSH3 0x606 DUP5 PUSH3 0x4C4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x616 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x62E PUSH3 0x625 DUP6 PUSH3 0x4C4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x656 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x636 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x671 DUP4 DUP4 PUSH3 0x643 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x68C DUP3 PUSH3 0x411 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A8 JUMPI PUSH3 0x6A7 PUSH3 0x41C JUMP JUMPDEST JUMPDEST PUSH3 0x6B4 DUP3 SLOAD PUSH3 0x47A JUMP JUMPDEST PUSH3 0x6C1 DUP3 DUP3 DUP6 PUSH3 0x5E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6F0 DUP6 DUP3 PUSH3 0x663 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x760 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x709 DUP7 PUSH3 0x4AF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x733 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x70C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x753 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x74F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x643 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x795 DUP3 PUSH3 0x768 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7A7 DUP2 PUSH3 0x788 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x79C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x806 DUP3 PUSH3 0x3A4 JUMP JUMPDEST SWAP2 POP PUSH3 0x813 DUP4 PUSH3 0x3A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x82E JUMPI PUSH3 0x82D PUSH3 0x7CA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x83F DUP2 PUSH3 0x3A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x85C PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x79C JUMP JUMPDEST PUSH3 0x86B PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x834 JUMP JUMPDEST PUSH3 0x87A PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x834 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x899 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE55 DUP1 PUSH3 0x8AF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x523 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x522 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x618 DUP4 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x846 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x962 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9AF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xA85 DUP2 DUP6 PUSH2 0xA24 JUMP JUMPDEST SWAP4 POP PUSH2 0xA95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0xA5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC3 DUP2 DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB28 DUP2 PUSH2 0xB02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP2 EQ PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5E DUP2 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB89 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9A DUP6 DUP3 DUP7 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB9 DUP2 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3C DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4D DUP7 DUP3 DUP8 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA4 JUMPI PUSH2 0xCA3 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB2 DUP5 DUP3 DUP6 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF1 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD55 JUMPI PUSH2 0xD54 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD64 DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP3 PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP4 PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0xDBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x2439B952 ISZERO DELEGATECALL PUSH16 0x2FD859E0909EFCFC5396766B7DFD21CC 0xC7 SWAP10 PUSH14 0x481B1B914E64736F6C6343000818 STOP CALLER ","sourceMap":"170:144:8:-:0;;;202:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;271:32:8::1;277:10;289:13;271:5;;;:32;;:::i;:::-;202:109:::0;170:144;;7458:208:2;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;170:144:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_690":{"entryPoint":1155,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":1565,"id":750,"parameterSlots":4,"returnSlots":0},"@_msgSender_915":{"entryPoint":1147,"id":915,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_798":{"entryPoint":1173,"id":798,"parameterSlots":3,"returnSlots":0},"@_transfer_529":{"entryPoint":1321,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":2036,"id":606,"parameterSlots":3,"returnSlots":0},"@allowance_426":{"entryPoint":1012,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":658,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":759,"id":385,"parameterSlots":1,"returnSlots":1},"@decimals_363":{"entryPoint":750,"id":363,"parameterSlots":0,"returnSlots":1},"@name_345":{"entryPoint":512,"id":345,"parameterSlots":0,"returnSlots":1},"@symbol_354":{"entryPoint":831,"id":354,"parameterSlots":0,"returnSlots":1},"@totalSupply_372":{"entryPoint":693,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":703,"id":482,"parameterSlots":3,"returnSlots":1},"@transfer_409":{"entryPoint":977,"id":409,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3259,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3076,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2916,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3419,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2992,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3034,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3172,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3434,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3187,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2585,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2596,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3563,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2800,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2980,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2768,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2862,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3159,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2613,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3370,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3516,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3323,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2763,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2655,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2818,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2872,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7360:9","nodeType":"YulBlock","src":"0:7360:9","statements":[{"body":{"nativeSrc":"66:40:9","nodeType":"YulBlock","src":"66:40:9","statements":[{"nativeSrc":"77:22:9","nodeType":"YulAssignment","src":"77:22:9","value":{"arguments":[{"name":"value","nativeSrc":"93:5:9","nodeType":"YulIdentifier","src":"93:5:9"}],"functionName":{"name":"mload","nativeSrc":"87:5:9","nodeType":"YulIdentifier","src":"87:5:9"},"nativeSrc":"87:12:9","nodeType":"YulFunctionCall","src":"87:12:9"},"variableNames":[{"name":"length","nativeSrc":"77:6:9","nodeType":"YulIdentifier","src":"77:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:9","nodeType":"YulTypedName","src":"49:5:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:9","nodeType":"YulTypedName","src":"59:6:9","type":""}],"src":"7:99:9"},{"body":{"nativeSrc":"208:73:9","nodeType":"YulBlock","src":"208:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:9","nodeType":"YulIdentifier","src":"225:3:9"},{"name":"length","nativeSrc":"230:6:9","nodeType":"YulIdentifier","src":"230:6:9"}],"functionName":{"name":"mstore","nativeSrc":"218:6:9","nodeType":"YulIdentifier","src":"218:6:9"},"nativeSrc":"218:19:9","nodeType":"YulFunctionCall","src":"218:19:9"},"nativeSrc":"218:19:9","nodeType":"YulExpressionStatement","src":"218:19:9"},{"nativeSrc":"246:29:9","nodeType":"YulAssignment","src":"246:29:9","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:9","nodeType":"YulIdentifier","src":"265:3:9"},{"kind":"number","nativeSrc":"270:4:9","nodeType":"YulLiteral","src":"270:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:9","nodeType":"YulIdentifier","src":"261:3:9"},"nativeSrc":"261:14:9","nodeType":"YulFunctionCall","src":"261:14:9"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:9","nodeType":"YulIdentifier","src":"246:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:9","nodeType":"YulTypedName","src":"180:3:9","type":""},{"name":"length","nativeSrc":"185:6:9","nodeType":"YulTypedName","src":"185:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:9","nodeType":"YulTypedName","src":"196:11:9","type":""}],"src":"112:169:9"},{"body":{"nativeSrc":"349:184:9","nodeType":"YulBlock","src":"349:184:9","statements":[{"nativeSrc":"359:10:9","nodeType":"YulVariableDeclaration","src":"359:10:9","value":{"kind":"number","nativeSrc":"368:1:9","nodeType":"YulLiteral","src":"368:1:9","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:9","nodeType":"YulTypedName","src":"363:1:9","type":""}]},{"body":{"nativeSrc":"428:63:9","nodeType":"YulBlock","src":"428:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:9","nodeType":"YulIdentifier","src":"453:3:9"},{"name":"i","nativeSrc":"458:1:9","nodeType":"YulIdentifier","src":"458:1:9"}],"functionName":{"name":"add","nativeSrc":"449:3:9","nodeType":"YulIdentifier","src":"449:3:9"},"nativeSrc":"449:11:9","nodeType":"YulFunctionCall","src":"449:11:9"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:9","nodeType":"YulIdentifier","src":"472:3:9"},{"name":"i","nativeSrc":"477:1:9","nodeType":"YulIdentifier","src":"477:1:9"}],"functionName":{"name":"add","nativeSrc":"468:3:9","nodeType":"YulIdentifier","src":"468:3:9"},"nativeSrc":"468:11:9","nodeType":"YulFunctionCall","src":"468:11:9"}],"functionName":{"name":"mload","nativeSrc":"462:5:9","nodeType":"YulIdentifier","src":"462:5:9"},"nativeSrc":"462:18:9","nodeType":"YulFunctionCall","src":"462:18:9"}],"functionName":{"name":"mstore","nativeSrc":"442:6:9","nodeType":"YulIdentifier","src":"442:6:9"},"nativeSrc":"442:39:9","nodeType":"YulFunctionCall","src":"442:39:9"},"nativeSrc":"442:39:9","nodeType":"YulExpressionStatement","src":"442:39:9"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:9","nodeType":"YulIdentifier","src":"389:1:9"},{"name":"length","nativeSrc":"392:6:9","nodeType":"YulIdentifier","src":"392:6:9"}],"functionName":{"name":"lt","nativeSrc":"386:2:9","nodeType":"YulIdentifier","src":"386:2:9"},"nativeSrc":"386:13:9","nodeType":"YulFunctionCall","src":"386:13:9"},"nativeSrc":"378:113:9","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:9","nodeType":"YulBlock","src":"400:19:9","statements":[{"nativeSrc":"402:15:9","nodeType":"YulAssignment","src":"402:15:9","value":{"arguments":[{"name":"i","nativeSrc":"411:1:9","nodeType":"YulIdentifier","src":"411:1:9"},{"kind":"number","nativeSrc":"414:2:9","nodeType":"YulLiteral","src":"414:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:9","nodeType":"YulIdentifier","src":"407:3:9"},"nativeSrc":"407:10:9","nodeType":"YulFunctionCall","src":"407:10:9"},"variableNames":[{"name":"i","nativeSrc":"402:1:9","nodeType":"YulIdentifier","src":"402:1:9"}]}]},"pre":{"nativeSrc":"382:3:9","nodeType":"YulBlock","src":"382:3:9","statements":[]},"src":"378:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:9","nodeType":"YulIdentifier","src":"511:3:9"},{"name":"length","nativeSrc":"516:6:9","nodeType":"YulIdentifier","src":"516:6:9"}],"functionName":{"name":"add","nativeSrc":"507:3:9","nodeType":"YulIdentifier","src":"507:3:9"},"nativeSrc":"507:16:9","nodeType":"YulFunctionCall","src":"507:16:9"},{"kind":"number","nativeSrc":"525:1:9","nodeType":"YulLiteral","src":"525:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:9","nodeType":"YulIdentifier","src":"500:6:9"},"nativeSrc":"500:27:9","nodeType":"YulFunctionCall","src":"500:27:9"},"nativeSrc":"500:27:9","nodeType":"YulExpressionStatement","src":"500:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:9","nodeType":"YulTypedName","src":"331:3:9","type":""},{"name":"dst","nativeSrc":"336:3:9","nodeType":"YulTypedName","src":"336:3:9","type":""},{"name":"length","nativeSrc":"341:6:9","nodeType":"YulTypedName","src":"341:6:9","type":""}],"src":"287:246:9"},{"body":{"nativeSrc":"587:54:9","nodeType":"YulBlock","src":"587:54:9","statements":[{"nativeSrc":"597:38:9","nodeType":"YulAssignment","src":"597:38:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:9","nodeType":"YulIdentifier","src":"615:5:9"},{"kind":"number","nativeSrc":"622:2:9","nodeType":"YulLiteral","src":"622:2:9","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:9","nodeType":"YulIdentifier","src":"611:3:9"},"nativeSrc":"611:14:9","nodeType":"YulFunctionCall","src":"611:14:9"},{"arguments":[{"kind":"number","nativeSrc":"631:2:9","nodeType":"YulLiteral","src":"631:2:9","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:9","nodeType":"YulIdentifier","src":"627:3:9"},"nativeSrc":"627:7:9","nodeType":"YulFunctionCall","src":"627:7:9"}],"functionName":{"name":"and","nativeSrc":"607:3:9","nodeType":"YulIdentifier","src":"607:3:9"},"nativeSrc":"607:28:9","nodeType":"YulFunctionCall","src":"607:28:9"},"variableNames":[{"name":"result","nativeSrc":"597:6:9","nodeType":"YulIdentifier","src":"597:6:9"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:9","nodeType":"YulTypedName","src":"570:5:9","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:9","nodeType":"YulTypedName","src":"580:6:9","type":""}],"src":"539:102:9"},{"body":{"nativeSrc":"739:285:9","nodeType":"YulBlock","src":"739:285:9","statements":[{"nativeSrc":"749:53:9","nodeType":"YulVariableDeclaration","src":"749:53:9","value":{"arguments":[{"name":"value","nativeSrc":"796:5:9","nodeType":"YulIdentifier","src":"796:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:9","nodeType":"YulIdentifier","src":"763:32:9"},"nativeSrc":"763:39:9","nodeType":"YulFunctionCall","src":"763:39:9"},"variables":[{"name":"length","nativeSrc":"753:6:9","nodeType":"YulTypedName","src":"753:6:9","type":""}]},{"nativeSrc":"811:78:9","nodeType":"YulAssignment","src":"811:78:9","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:9","nodeType":"YulIdentifier","src":"877:3:9"},{"name":"length","nativeSrc":"882:6:9","nodeType":"YulIdentifier","src":"882:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:9","nodeType":"YulIdentifier","src":"818:58:9"},"nativeSrc":"818:71:9","nodeType":"YulFunctionCall","src":"818:71:9"},"variableNames":[{"name":"pos","nativeSrc":"811:3:9","nodeType":"YulIdentifier","src":"811:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:9","nodeType":"YulIdentifier","src":"937:5:9"},{"kind":"number","nativeSrc":"944:4:9","nodeType":"YulLiteral","src":"944:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:9","nodeType":"YulIdentifier","src":"933:3:9"},"nativeSrc":"933:16:9","nodeType":"YulFunctionCall","src":"933:16:9"},{"name":"pos","nativeSrc":"951:3:9","nodeType":"YulIdentifier","src":"951:3:9"},{"name":"length","nativeSrc":"956:6:9","nodeType":"YulIdentifier","src":"956:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:9","nodeType":"YulIdentifier","src":"898:34:9"},"nativeSrc":"898:65:9","nodeType":"YulFunctionCall","src":"898:65:9"},"nativeSrc":"898:65:9","nodeType":"YulExpressionStatement","src":"898:65:9"},{"nativeSrc":"972:46:9","nodeType":"YulAssignment","src":"972:46:9","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:9","nodeType":"YulIdentifier","src":"983:3:9"},{"arguments":[{"name":"length","nativeSrc":"1010:6:9","nodeType":"YulIdentifier","src":"1010:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:9","nodeType":"YulIdentifier","src":"988:21:9"},"nativeSrc":"988:29:9","nodeType":"YulFunctionCall","src":"988:29:9"}],"functionName":{"name":"add","nativeSrc":"979:3:9","nodeType":"YulIdentifier","src":"979:3:9"},"nativeSrc":"979:39:9","nodeType":"YulFunctionCall","src":"979:39:9"},"variableNames":[{"name":"end","nativeSrc":"972:3:9","nodeType":"YulIdentifier","src":"972:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:9","nodeType":"YulTypedName","src":"720:5:9","type":""},{"name":"pos","nativeSrc":"727:3:9","nodeType":"YulTypedName","src":"727:3:9","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:9","nodeType":"YulTypedName","src":"735:3:9","type":""}],"src":"647:377:9"},{"body":{"nativeSrc":"1148:195:9","nodeType":"YulBlock","src":"1148:195:9","statements":[{"nativeSrc":"1158:26:9","nodeType":"YulAssignment","src":"1158:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:9","nodeType":"YulIdentifier","src":"1170:9:9"},{"kind":"number","nativeSrc":"1181:2:9","nodeType":"YulLiteral","src":"1181:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:9","nodeType":"YulIdentifier","src":"1166:3:9"},"nativeSrc":"1166:18:9","nodeType":"YulFunctionCall","src":"1166:18:9"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:9","nodeType":"YulIdentifier","src":"1158:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:9","nodeType":"YulIdentifier","src":"1205:9:9"},{"kind":"number","nativeSrc":"1216:1:9","nodeType":"YulLiteral","src":"1216:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:9","nodeType":"YulIdentifier","src":"1201:3:9"},"nativeSrc":"1201:17:9","nodeType":"YulFunctionCall","src":"1201:17:9"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:9","nodeType":"YulIdentifier","src":"1224:4:9"},{"name":"headStart","nativeSrc":"1230:9:9","nodeType":"YulIdentifier","src":"1230:9:9"}],"functionName":{"name":"sub","nativeSrc":"1220:3:9","nodeType":"YulIdentifier","src":"1220:3:9"},"nativeSrc":"1220:20:9","nodeType":"YulFunctionCall","src":"1220:20:9"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:9","nodeType":"YulIdentifier","src":"1194:6:9"},"nativeSrc":"1194:47:9","nodeType":"YulFunctionCall","src":"1194:47:9"},"nativeSrc":"1194:47:9","nodeType":"YulExpressionStatement","src":"1194:47:9"},{"nativeSrc":"1250:86:9","nodeType":"YulAssignment","src":"1250:86:9","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:9","nodeType":"YulIdentifier","src":"1322:6:9"},{"name":"tail","nativeSrc":"1331:4:9","nodeType":"YulIdentifier","src":"1331:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:9","nodeType":"YulIdentifier","src":"1258:63:9"},"nativeSrc":"1258:78:9","nodeType":"YulFunctionCall","src":"1258:78:9"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:9","nodeType":"YulIdentifier","src":"1250:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:9","nodeType":"YulTypedName","src":"1120:9:9","type":""},{"name":"value0","nativeSrc":"1132:6:9","nodeType":"YulTypedName","src":"1132:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:9","nodeType":"YulTypedName","src":"1143:4:9","type":""}],"src":"1030:313:9"},{"body":{"nativeSrc":"1389:35:9","nodeType":"YulBlock","src":"1389:35:9","statements":[{"nativeSrc":"1399:19:9","nodeType":"YulAssignment","src":"1399:19:9","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:9","nodeType":"YulLiteral","src":"1415:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:9","nodeType":"YulIdentifier","src":"1409:5:9"},"nativeSrc":"1409:9:9","nodeType":"YulFunctionCall","src":"1409:9:9"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:9","nodeType":"YulIdentifier","src":"1399:6:9"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:9","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:9","nodeType":"YulTypedName","src":"1382:6:9","type":""}],"src":"1349:75:9"},{"body":{"nativeSrc":"1519:28:9","nodeType":"YulBlock","src":"1519:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:9","nodeType":"YulLiteral","src":"1536:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:9","nodeType":"YulLiteral","src":"1539:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:9","nodeType":"YulIdentifier","src":"1529:6:9"},"nativeSrc":"1529:12:9","nodeType":"YulFunctionCall","src":"1529:12:9"},"nativeSrc":"1529:12:9","nodeType":"YulExpressionStatement","src":"1529:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:9","nodeType":"YulFunctionDefinition","src":"1430:117:9"},{"body":{"nativeSrc":"1642:28:9","nodeType":"YulBlock","src":"1642:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:9","nodeType":"YulLiteral","src":"1659:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:9","nodeType":"YulLiteral","src":"1662:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:9","nodeType":"YulIdentifier","src":"1652:6:9"},"nativeSrc":"1652:12:9","nodeType":"YulFunctionCall","src":"1652:12:9"},"nativeSrc":"1652:12:9","nodeType":"YulExpressionStatement","src":"1652:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:9","nodeType":"YulFunctionDefinition","src":"1553:117:9"},{"body":{"nativeSrc":"1721:81:9","nodeType":"YulBlock","src":"1721:81:9","statements":[{"nativeSrc":"1731:65:9","nodeType":"YulAssignment","src":"1731:65:9","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:9","nodeType":"YulIdentifier","src":"1746:5:9"},{"kind":"number","nativeSrc":"1753:42:9","nodeType":"YulLiteral","src":"1753:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:9","nodeType":"YulIdentifier","src":"1742:3:9"},"nativeSrc":"1742:54:9","nodeType":"YulFunctionCall","src":"1742:54:9"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:9","nodeType":"YulIdentifier","src":"1731:7:9"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:9","nodeType":"YulTypedName","src":"1703:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:9","nodeType":"YulTypedName","src":"1713:7:9","type":""}],"src":"1676:126:9"},{"body":{"nativeSrc":"1853:51:9","nodeType":"YulBlock","src":"1853:51:9","statements":[{"nativeSrc":"1863:35:9","nodeType":"YulAssignment","src":"1863:35:9","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:9","nodeType":"YulIdentifier","src":"1892:5:9"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:9","nodeType":"YulIdentifier","src":"1874:17:9"},"nativeSrc":"1874:24:9","nodeType":"YulFunctionCall","src":"1874:24:9"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:9","nodeType":"YulIdentifier","src":"1863:7:9"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:9","nodeType":"YulTypedName","src":"1835:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:9","nodeType":"YulTypedName","src":"1845:7:9","type":""}],"src":"1808:96:9"},{"body":{"nativeSrc":"1953:79:9","nodeType":"YulBlock","src":"1953:79:9","statements":[{"body":{"nativeSrc":"2010:16:9","nodeType":"YulBlock","src":"2010:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:9","nodeType":"YulLiteral","src":"2019:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:9","nodeType":"YulLiteral","src":"2022:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:9","nodeType":"YulIdentifier","src":"2012:6:9"},"nativeSrc":"2012:12:9","nodeType":"YulFunctionCall","src":"2012:12:9"},"nativeSrc":"2012:12:9","nodeType":"YulExpressionStatement","src":"2012:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:9","nodeType":"YulIdentifier","src":"1976:5:9"},{"arguments":[{"name":"value","nativeSrc":"2001:5:9","nodeType":"YulIdentifier","src":"2001:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:9","nodeType":"YulIdentifier","src":"1983:17:9"},"nativeSrc":"1983:24:9","nodeType":"YulFunctionCall","src":"1983:24:9"}],"functionName":{"name":"eq","nativeSrc":"1973:2:9","nodeType":"YulIdentifier","src":"1973:2:9"},"nativeSrc":"1973:35:9","nodeType":"YulFunctionCall","src":"1973:35:9"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:9","nodeType":"YulIdentifier","src":"1966:6:9"},"nativeSrc":"1966:43:9","nodeType":"YulFunctionCall","src":"1966:43:9"},"nativeSrc":"1963:63:9","nodeType":"YulIf","src":"1963:63:9"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:9","nodeType":"YulTypedName","src":"1946:5:9","type":""}],"src":"1910:122:9"},{"body":{"nativeSrc":"2090:87:9","nodeType":"YulBlock","src":"2090:87:9","statements":[{"nativeSrc":"2100:29:9","nodeType":"YulAssignment","src":"2100:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:9","nodeType":"YulIdentifier","src":"2122:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:9","nodeType":"YulIdentifier","src":"2109:12:9"},"nativeSrc":"2109:20:9","nodeType":"YulFunctionCall","src":"2109:20:9"},"variableNames":[{"name":"value","nativeSrc":"2100:5:9","nodeType":"YulIdentifier","src":"2100:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:9","nodeType":"YulIdentifier","src":"2165:5:9"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:9","nodeType":"YulIdentifier","src":"2138:26:9"},"nativeSrc":"2138:33:9","nodeType":"YulFunctionCall","src":"2138:33:9"},"nativeSrc":"2138:33:9","nodeType":"YulExpressionStatement","src":"2138:33:9"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:9","nodeType":"YulTypedName","src":"2068:6:9","type":""},{"name":"end","nativeSrc":"2076:3:9","nodeType":"YulTypedName","src":"2076:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:9","nodeType":"YulTypedName","src":"2084:5:9","type":""}],"src":"2038:139:9"},{"body":{"nativeSrc":"2228:32:9","nodeType":"YulBlock","src":"2228:32:9","statements":[{"nativeSrc":"2238:16:9","nodeType":"YulAssignment","src":"2238:16:9","value":{"name":"value","nativeSrc":"2249:5:9","nodeType":"YulIdentifier","src":"2249:5:9"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:9","nodeType":"YulIdentifier","src":"2238:7:9"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:9","nodeType":"YulTypedName","src":"2210:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:9","nodeType":"YulTypedName","src":"2220:7:9","type":""}],"src":"2183:77:9"},{"body":{"nativeSrc":"2309:79:9","nodeType":"YulBlock","src":"2309:79:9","statements":[{"body":{"nativeSrc":"2366:16:9","nodeType":"YulBlock","src":"2366:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:9","nodeType":"YulLiteral","src":"2375:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:9","nodeType":"YulLiteral","src":"2378:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:9","nodeType":"YulIdentifier","src":"2368:6:9"},"nativeSrc":"2368:12:9","nodeType":"YulFunctionCall","src":"2368:12:9"},"nativeSrc":"2368:12:9","nodeType":"YulExpressionStatement","src":"2368:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:9","nodeType":"YulIdentifier","src":"2332:5:9"},{"arguments":[{"name":"value","nativeSrc":"2357:5:9","nodeType":"YulIdentifier","src":"2357:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:9","nodeType":"YulIdentifier","src":"2339:17:9"},"nativeSrc":"2339:24:9","nodeType":"YulFunctionCall","src":"2339:24:9"}],"functionName":{"name":"eq","nativeSrc":"2329:2:9","nodeType":"YulIdentifier","src":"2329:2:9"},"nativeSrc":"2329:35:9","nodeType":"YulFunctionCall","src":"2329:35:9"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:9","nodeType":"YulIdentifier","src":"2322:6:9"},"nativeSrc":"2322:43:9","nodeType":"YulFunctionCall","src":"2322:43:9"},"nativeSrc":"2319:63:9","nodeType":"YulIf","src":"2319:63:9"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:9","nodeType":"YulTypedName","src":"2302:5:9","type":""}],"src":"2266:122:9"},{"body":{"nativeSrc":"2446:87:9","nodeType":"YulBlock","src":"2446:87:9","statements":[{"nativeSrc":"2456:29:9","nodeType":"YulAssignment","src":"2456:29:9","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:9","nodeType":"YulIdentifier","src":"2478:6:9"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:9","nodeType":"YulIdentifier","src":"2465:12:9"},"nativeSrc":"2465:20:9","nodeType":"YulFunctionCall","src":"2465:20:9"},"variableNames":[{"name":"value","nativeSrc":"2456:5:9","nodeType":"YulIdentifier","src":"2456:5:9"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:9","nodeType":"YulIdentifier","src":"2521:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:9","nodeType":"YulIdentifier","src":"2494:26:9"},"nativeSrc":"2494:33:9","nodeType":"YulFunctionCall","src":"2494:33:9"},"nativeSrc":"2494:33:9","nodeType":"YulExpressionStatement","src":"2494:33:9"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:9","nodeType":"YulTypedName","src":"2424:6:9","type":""},{"name":"end","nativeSrc":"2432:3:9","nodeType":"YulTypedName","src":"2432:3:9","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:9","nodeType":"YulTypedName","src":"2440:5:9","type":""}],"src":"2394:139:9"},{"body":{"nativeSrc":"2622:391:9","nodeType":"YulBlock","src":"2622:391:9","statements":[{"body":{"nativeSrc":"2668:83:9","nodeType":"YulBlock","src":"2668:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:9","nodeType":"YulIdentifier","src":"2670:77:9"},"nativeSrc":"2670:79:9","nodeType":"YulFunctionCall","src":"2670:79:9"},"nativeSrc":"2670:79:9","nodeType":"YulExpressionStatement","src":"2670:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:9","nodeType":"YulIdentifier","src":"2643:7:9"},{"name":"headStart","nativeSrc":"2652:9:9","nodeType":"YulIdentifier","src":"2652:9:9"}],"functionName":{"name":"sub","nativeSrc":"2639:3:9","nodeType":"YulIdentifier","src":"2639:3:9"},"nativeSrc":"2639:23:9","nodeType":"YulFunctionCall","src":"2639:23:9"},{"kind":"number","nativeSrc":"2664:2:9","nodeType":"YulLiteral","src":"2664:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:9","nodeType":"YulIdentifier","src":"2635:3:9"},"nativeSrc":"2635:32:9","nodeType":"YulFunctionCall","src":"2635:32:9"},"nativeSrc":"2632:119:9","nodeType":"YulIf","src":"2632:119:9"},{"nativeSrc":"2761:117:9","nodeType":"YulBlock","src":"2761:117:9","statements":[{"nativeSrc":"2776:15:9","nodeType":"YulVariableDeclaration","src":"2776:15:9","value":{"kind":"number","nativeSrc":"2790:1:9","nodeType":"YulLiteral","src":"2790:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:9","nodeType":"YulTypedName","src":"2780:6:9","type":""}]},{"nativeSrc":"2805:63:9","nodeType":"YulAssignment","src":"2805:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:9","nodeType":"YulIdentifier","src":"2840:9:9"},{"name":"offset","nativeSrc":"2851:6:9","nodeType":"YulIdentifier","src":"2851:6:9"}],"functionName":{"name":"add","nativeSrc":"2836:3:9","nodeType":"YulIdentifier","src":"2836:3:9"},"nativeSrc":"2836:22:9","nodeType":"YulFunctionCall","src":"2836:22:9"},{"name":"dataEnd","nativeSrc":"2860:7:9","nodeType":"YulIdentifier","src":"2860:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:9","nodeType":"YulIdentifier","src":"2815:20:9"},"nativeSrc":"2815:53:9","nodeType":"YulFunctionCall","src":"2815:53:9"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:9","nodeType":"YulIdentifier","src":"2805:6:9"}]}]},{"nativeSrc":"2888:118:9","nodeType":"YulBlock","src":"2888:118:9","statements":[{"nativeSrc":"2903:16:9","nodeType":"YulVariableDeclaration","src":"2903:16:9","value":{"kind":"number","nativeSrc":"2917:2:9","nodeType":"YulLiteral","src":"2917:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:9","nodeType":"YulTypedName","src":"2907:6:9","type":""}]},{"nativeSrc":"2933:63:9","nodeType":"YulAssignment","src":"2933:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:9","nodeType":"YulIdentifier","src":"2968:9:9"},{"name":"offset","nativeSrc":"2979:6:9","nodeType":"YulIdentifier","src":"2979:6:9"}],"functionName":{"name":"add","nativeSrc":"2964:3:9","nodeType":"YulIdentifier","src":"2964:3:9"},"nativeSrc":"2964:22:9","nodeType":"YulFunctionCall","src":"2964:22:9"},{"name":"dataEnd","nativeSrc":"2988:7:9","nodeType":"YulIdentifier","src":"2988:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:9","nodeType":"YulIdentifier","src":"2943:20:9"},"nativeSrc":"2943:53:9","nodeType":"YulFunctionCall","src":"2943:53:9"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:9","nodeType":"YulIdentifier","src":"2933:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:9","nodeType":"YulTypedName","src":"2584:9:9","type":""},{"name":"dataEnd","nativeSrc":"2595:7:9","nodeType":"YulTypedName","src":"2595:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:9","nodeType":"YulTypedName","src":"2607:6:9","type":""},{"name":"value1","nativeSrc":"2615:6:9","nodeType":"YulTypedName","src":"2615:6:9","type":""}],"src":"2539:474:9"},{"body":{"nativeSrc":"3061:48:9","nodeType":"YulBlock","src":"3061:48:9","statements":[{"nativeSrc":"3071:32:9","nodeType":"YulAssignment","src":"3071:32:9","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:9","nodeType":"YulIdentifier","src":"3096:5:9"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:9","nodeType":"YulIdentifier","src":"3089:6:9"},"nativeSrc":"3089:13:9","nodeType":"YulFunctionCall","src":"3089:13:9"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:9","nodeType":"YulIdentifier","src":"3082:6:9"},"nativeSrc":"3082:21:9","nodeType":"YulFunctionCall","src":"3082:21:9"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:9","nodeType":"YulIdentifier","src":"3071:7:9"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:9","nodeType":"YulTypedName","src":"3043:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:9","nodeType":"YulTypedName","src":"3053:7:9","type":""}],"src":"3019:90:9"},{"body":{"nativeSrc":"3174:50:9","nodeType":"YulBlock","src":"3174:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:9","nodeType":"YulIdentifier","src":"3191:3:9"},{"arguments":[{"name":"value","nativeSrc":"3211:5:9","nodeType":"YulIdentifier","src":"3211:5:9"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:9","nodeType":"YulIdentifier","src":"3196:14:9"},"nativeSrc":"3196:21:9","nodeType":"YulFunctionCall","src":"3196:21:9"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:9","nodeType":"YulIdentifier","src":"3184:6:9"},"nativeSrc":"3184:34:9","nodeType":"YulFunctionCall","src":"3184:34:9"},"nativeSrc":"3184:34:9","nodeType":"YulExpressionStatement","src":"3184:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:9","nodeType":"YulTypedName","src":"3162:5:9","type":""},{"name":"pos","nativeSrc":"3169:3:9","nodeType":"YulTypedName","src":"3169:3:9","type":""}],"src":"3115:109:9"},{"body":{"nativeSrc":"3322:118:9","nodeType":"YulBlock","src":"3322:118:9","statements":[{"nativeSrc":"3332:26:9","nodeType":"YulAssignment","src":"3332:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:9","nodeType":"YulIdentifier","src":"3344:9:9"},{"kind":"number","nativeSrc":"3355:2:9","nodeType":"YulLiteral","src":"3355:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:9","nodeType":"YulIdentifier","src":"3340:3:9"},"nativeSrc":"3340:18:9","nodeType":"YulFunctionCall","src":"3340:18:9"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:9","nodeType":"YulIdentifier","src":"3332:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:9","nodeType":"YulIdentifier","src":"3406:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:9","nodeType":"YulIdentifier","src":"3419:9:9"},{"kind":"number","nativeSrc":"3430:1:9","nodeType":"YulLiteral","src":"3430:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:9","nodeType":"YulIdentifier","src":"3415:3:9"},"nativeSrc":"3415:17:9","nodeType":"YulFunctionCall","src":"3415:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:9","nodeType":"YulIdentifier","src":"3368:37:9"},"nativeSrc":"3368:65:9","nodeType":"YulFunctionCall","src":"3368:65:9"},"nativeSrc":"3368:65:9","nodeType":"YulExpressionStatement","src":"3368:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:9","nodeType":"YulTypedName","src":"3294:9:9","type":""},{"name":"value0","nativeSrc":"3306:6:9","nodeType":"YulTypedName","src":"3306:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:9","nodeType":"YulTypedName","src":"3317:4:9","type":""}],"src":"3230:210:9"},{"body":{"nativeSrc":"3511:53:9","nodeType":"YulBlock","src":"3511:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:9","nodeType":"YulIdentifier","src":"3528:3:9"},{"arguments":[{"name":"value","nativeSrc":"3551:5:9","nodeType":"YulIdentifier","src":"3551:5:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:9","nodeType":"YulIdentifier","src":"3533:17:9"},"nativeSrc":"3533:24:9","nodeType":"YulFunctionCall","src":"3533:24:9"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:9","nodeType":"YulIdentifier","src":"3521:6:9"},"nativeSrc":"3521:37:9","nodeType":"YulFunctionCall","src":"3521:37:9"},"nativeSrc":"3521:37:9","nodeType":"YulExpressionStatement","src":"3521:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:9","nodeType":"YulTypedName","src":"3499:5:9","type":""},{"name":"pos","nativeSrc":"3506:3:9","nodeType":"YulTypedName","src":"3506:3:9","type":""}],"src":"3446:118:9"},{"body":{"nativeSrc":"3668:124:9","nodeType":"YulBlock","src":"3668:124:9","statements":[{"nativeSrc":"3678:26:9","nodeType":"YulAssignment","src":"3678:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:9","nodeType":"YulIdentifier","src":"3690:9:9"},{"kind":"number","nativeSrc":"3701:2:9","nodeType":"YulLiteral","src":"3701:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:9","nodeType":"YulIdentifier","src":"3686:3:9"},"nativeSrc":"3686:18:9","nodeType":"YulFunctionCall","src":"3686:18:9"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:9","nodeType":"YulIdentifier","src":"3678:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:9","nodeType":"YulIdentifier","src":"3758:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:9","nodeType":"YulIdentifier","src":"3771:9:9"},{"kind":"number","nativeSrc":"3782:1:9","nodeType":"YulLiteral","src":"3782:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:9","nodeType":"YulIdentifier","src":"3767:3:9"},"nativeSrc":"3767:17:9","nodeType":"YulFunctionCall","src":"3767:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:9","nodeType":"YulIdentifier","src":"3714:43:9"},"nativeSrc":"3714:71:9","nodeType":"YulFunctionCall","src":"3714:71:9"},"nativeSrc":"3714:71:9","nodeType":"YulExpressionStatement","src":"3714:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:9","nodeType":"YulTypedName","src":"3640:9:9","type":""},{"name":"value0","nativeSrc":"3652:6:9","nodeType":"YulTypedName","src":"3652:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:9","nodeType":"YulTypedName","src":"3663:4:9","type":""}],"src":"3570:222:9"},{"body":{"nativeSrc":"3898:519:9","nodeType":"YulBlock","src":"3898:519:9","statements":[{"body":{"nativeSrc":"3944:83:9","nodeType":"YulBlock","src":"3944:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:9","nodeType":"YulIdentifier","src":"3946:77:9"},"nativeSrc":"3946:79:9","nodeType":"YulFunctionCall","src":"3946:79:9"},"nativeSrc":"3946:79:9","nodeType":"YulExpressionStatement","src":"3946:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:9","nodeType":"YulIdentifier","src":"3919:7:9"},{"name":"headStart","nativeSrc":"3928:9:9","nodeType":"YulIdentifier","src":"3928:9:9"}],"functionName":{"name":"sub","nativeSrc":"3915:3:9","nodeType":"YulIdentifier","src":"3915:3:9"},"nativeSrc":"3915:23:9","nodeType":"YulFunctionCall","src":"3915:23:9"},{"kind":"number","nativeSrc":"3940:2:9","nodeType":"YulLiteral","src":"3940:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:9","nodeType":"YulIdentifier","src":"3911:3:9"},"nativeSrc":"3911:32:9","nodeType":"YulFunctionCall","src":"3911:32:9"},"nativeSrc":"3908:119:9","nodeType":"YulIf","src":"3908:119:9"},{"nativeSrc":"4037:117:9","nodeType":"YulBlock","src":"4037:117:9","statements":[{"nativeSrc":"4052:15:9","nodeType":"YulVariableDeclaration","src":"4052:15:9","value":{"kind":"number","nativeSrc":"4066:1:9","nodeType":"YulLiteral","src":"4066:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:9","nodeType":"YulTypedName","src":"4056:6:9","type":""}]},{"nativeSrc":"4081:63:9","nodeType":"YulAssignment","src":"4081:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:9","nodeType":"YulIdentifier","src":"4116:9:9"},{"name":"offset","nativeSrc":"4127:6:9","nodeType":"YulIdentifier","src":"4127:6:9"}],"functionName":{"name":"add","nativeSrc":"4112:3:9","nodeType":"YulIdentifier","src":"4112:3:9"},"nativeSrc":"4112:22:9","nodeType":"YulFunctionCall","src":"4112:22:9"},{"name":"dataEnd","nativeSrc":"4136:7:9","nodeType":"YulIdentifier","src":"4136:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:9","nodeType":"YulIdentifier","src":"4091:20:9"},"nativeSrc":"4091:53:9","nodeType":"YulFunctionCall","src":"4091:53:9"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:9","nodeType":"YulIdentifier","src":"4081:6:9"}]}]},{"nativeSrc":"4164:118:9","nodeType":"YulBlock","src":"4164:118:9","statements":[{"nativeSrc":"4179:16:9","nodeType":"YulVariableDeclaration","src":"4179:16:9","value":{"kind":"number","nativeSrc":"4193:2:9","nodeType":"YulLiteral","src":"4193:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:9","nodeType":"YulTypedName","src":"4183:6:9","type":""}]},{"nativeSrc":"4209:63:9","nodeType":"YulAssignment","src":"4209:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:9","nodeType":"YulIdentifier","src":"4244:9:9"},{"name":"offset","nativeSrc":"4255:6:9","nodeType":"YulIdentifier","src":"4255:6:9"}],"functionName":{"name":"add","nativeSrc":"4240:3:9","nodeType":"YulIdentifier","src":"4240:3:9"},"nativeSrc":"4240:22:9","nodeType":"YulFunctionCall","src":"4240:22:9"},{"name":"dataEnd","nativeSrc":"4264:7:9","nodeType":"YulIdentifier","src":"4264:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:9","nodeType":"YulIdentifier","src":"4219:20:9"},"nativeSrc":"4219:53:9","nodeType":"YulFunctionCall","src":"4219:53:9"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:9","nodeType":"YulIdentifier","src":"4209:6:9"}]}]},{"nativeSrc":"4292:118:9","nodeType":"YulBlock","src":"4292:118:9","statements":[{"nativeSrc":"4307:16:9","nodeType":"YulVariableDeclaration","src":"4307:16:9","value":{"kind":"number","nativeSrc":"4321:2:9","nodeType":"YulLiteral","src":"4321:2:9","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:9","nodeType":"YulTypedName","src":"4311:6:9","type":""}]},{"nativeSrc":"4337:63:9","nodeType":"YulAssignment","src":"4337:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:9","nodeType":"YulIdentifier","src":"4372:9:9"},{"name":"offset","nativeSrc":"4383:6:9","nodeType":"YulIdentifier","src":"4383:6:9"}],"functionName":{"name":"add","nativeSrc":"4368:3:9","nodeType":"YulIdentifier","src":"4368:3:9"},"nativeSrc":"4368:22:9","nodeType":"YulFunctionCall","src":"4368:22:9"},{"name":"dataEnd","nativeSrc":"4392:7:9","nodeType":"YulIdentifier","src":"4392:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:9","nodeType":"YulIdentifier","src":"4347:20:9"},"nativeSrc":"4347:53:9","nodeType":"YulFunctionCall","src":"4347:53:9"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:9","nodeType":"YulIdentifier","src":"4337:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:9","nodeType":"YulTypedName","src":"3852:9:9","type":""},{"name":"dataEnd","nativeSrc":"3863:7:9","nodeType":"YulTypedName","src":"3863:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:9","nodeType":"YulTypedName","src":"3875:6:9","type":""},{"name":"value1","nativeSrc":"3883:6:9","nodeType":"YulTypedName","src":"3883:6:9","type":""},{"name":"value2","nativeSrc":"3891:6:9","nodeType":"YulTypedName","src":"3891:6:9","type":""}],"src":"3798:619:9"},{"body":{"nativeSrc":"4466:43:9","nodeType":"YulBlock","src":"4466:43:9","statements":[{"nativeSrc":"4476:27:9","nodeType":"YulAssignment","src":"4476:27:9","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:9","nodeType":"YulIdentifier","src":"4491:5:9"},{"kind":"number","nativeSrc":"4498:4:9","nodeType":"YulLiteral","src":"4498:4:9","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:9","nodeType":"YulIdentifier","src":"4487:3:9"},"nativeSrc":"4487:16:9","nodeType":"YulFunctionCall","src":"4487:16:9"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:9","nodeType":"YulIdentifier","src":"4476:7:9"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:9","nodeType":"YulTypedName","src":"4448:5:9","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:9","nodeType":"YulTypedName","src":"4458:7:9","type":""}],"src":"4423:86:9"},{"body":{"nativeSrc":"4576:51:9","nodeType":"YulBlock","src":"4576:51:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:9","nodeType":"YulIdentifier","src":"4593:3:9"},{"arguments":[{"name":"value","nativeSrc":"4614:5:9","nodeType":"YulIdentifier","src":"4614:5:9"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:9","nodeType":"YulIdentifier","src":"4598:15:9"},"nativeSrc":"4598:22:9","nodeType":"YulFunctionCall","src":"4598:22:9"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:9","nodeType":"YulIdentifier","src":"4586:6:9"},"nativeSrc":"4586:35:9","nodeType":"YulFunctionCall","src":"4586:35:9"},"nativeSrc":"4586:35:9","nodeType":"YulExpressionStatement","src":"4586:35:9"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:9","nodeType":"YulTypedName","src":"4564:5:9","type":""},{"name":"pos","nativeSrc":"4571:3:9","nodeType":"YulTypedName","src":"4571:3:9","type":""}],"src":"4515:112:9"},{"body":{"nativeSrc":"4727:120:9","nodeType":"YulBlock","src":"4727:120:9","statements":[{"nativeSrc":"4737:26:9","nodeType":"YulAssignment","src":"4737:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:9","nodeType":"YulIdentifier","src":"4749:9:9"},{"kind":"number","nativeSrc":"4760:2:9","nodeType":"YulLiteral","src":"4760:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:9","nodeType":"YulIdentifier","src":"4745:3:9"},"nativeSrc":"4745:18:9","nodeType":"YulFunctionCall","src":"4745:18:9"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:9","nodeType":"YulIdentifier","src":"4737:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:9","nodeType":"YulIdentifier","src":"4813:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:9","nodeType":"YulIdentifier","src":"4826:9:9"},{"kind":"number","nativeSrc":"4837:1:9","nodeType":"YulLiteral","src":"4837:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:9","nodeType":"YulIdentifier","src":"4822:3:9"},"nativeSrc":"4822:17:9","nodeType":"YulFunctionCall","src":"4822:17:9"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:9","nodeType":"YulIdentifier","src":"4773:39:9"},"nativeSrc":"4773:67:9","nodeType":"YulFunctionCall","src":"4773:67:9"},"nativeSrc":"4773:67:9","nodeType":"YulExpressionStatement","src":"4773:67:9"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:9","nodeType":"YulTypedName","src":"4699:9:9","type":""},{"name":"value0","nativeSrc":"4711:6:9","nodeType":"YulTypedName","src":"4711:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:9","nodeType":"YulTypedName","src":"4722:4:9","type":""}],"src":"4633:214:9"},{"body":{"nativeSrc":"4919:263:9","nodeType":"YulBlock","src":"4919:263:9","statements":[{"body":{"nativeSrc":"4965:83:9","nodeType":"YulBlock","src":"4965:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4967:77:9","nodeType":"YulIdentifier","src":"4967:77:9"},"nativeSrc":"4967:79:9","nodeType":"YulFunctionCall","src":"4967:79:9"},"nativeSrc":"4967:79:9","nodeType":"YulExpressionStatement","src":"4967:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4940:7:9","nodeType":"YulIdentifier","src":"4940:7:9"},{"name":"headStart","nativeSrc":"4949:9:9","nodeType":"YulIdentifier","src":"4949:9:9"}],"functionName":{"name":"sub","nativeSrc":"4936:3:9","nodeType":"YulIdentifier","src":"4936:3:9"},"nativeSrc":"4936:23:9","nodeType":"YulFunctionCall","src":"4936:23:9"},{"kind":"number","nativeSrc":"4961:2:9","nodeType":"YulLiteral","src":"4961:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4932:3:9","nodeType":"YulIdentifier","src":"4932:3:9"},"nativeSrc":"4932:32:9","nodeType":"YulFunctionCall","src":"4932:32:9"},"nativeSrc":"4929:119:9","nodeType":"YulIf","src":"4929:119:9"},{"nativeSrc":"5058:117:9","nodeType":"YulBlock","src":"5058:117:9","statements":[{"nativeSrc":"5073:15:9","nodeType":"YulVariableDeclaration","src":"5073:15:9","value":{"kind":"number","nativeSrc":"5087:1:9","nodeType":"YulLiteral","src":"5087:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5077:6:9","nodeType":"YulTypedName","src":"5077:6:9","type":""}]},{"nativeSrc":"5102:63:9","nodeType":"YulAssignment","src":"5102:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5137:9:9","nodeType":"YulIdentifier","src":"5137:9:9"},{"name":"offset","nativeSrc":"5148:6:9","nodeType":"YulIdentifier","src":"5148:6:9"}],"functionName":{"name":"add","nativeSrc":"5133:3:9","nodeType":"YulIdentifier","src":"5133:3:9"},"nativeSrc":"5133:22:9","nodeType":"YulFunctionCall","src":"5133:22:9"},{"name":"dataEnd","nativeSrc":"5157:7:9","nodeType":"YulIdentifier","src":"5157:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5112:20:9","nodeType":"YulIdentifier","src":"5112:20:9"},"nativeSrc":"5112:53:9","nodeType":"YulFunctionCall","src":"5112:53:9"},"variableNames":[{"name":"value0","nativeSrc":"5102:6:9","nodeType":"YulIdentifier","src":"5102:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4853:329:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4889:9:9","nodeType":"YulTypedName","src":"4889:9:9","type":""},{"name":"dataEnd","nativeSrc":"4900:7:9","nodeType":"YulTypedName","src":"4900:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4912:6:9","nodeType":"YulTypedName","src":"4912:6:9","type":""}],"src":"4853:329:9"},{"body":{"nativeSrc":"5271:391:9","nodeType":"YulBlock","src":"5271:391:9","statements":[{"body":{"nativeSrc":"5317:83:9","nodeType":"YulBlock","src":"5317:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5319:77:9","nodeType":"YulIdentifier","src":"5319:77:9"},"nativeSrc":"5319:79:9","nodeType":"YulFunctionCall","src":"5319:79:9"},"nativeSrc":"5319:79:9","nodeType":"YulExpressionStatement","src":"5319:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5292:7:9","nodeType":"YulIdentifier","src":"5292:7:9"},{"name":"headStart","nativeSrc":"5301:9:9","nodeType":"YulIdentifier","src":"5301:9:9"}],"functionName":{"name":"sub","nativeSrc":"5288:3:9","nodeType":"YulIdentifier","src":"5288:3:9"},"nativeSrc":"5288:23:9","nodeType":"YulFunctionCall","src":"5288:23:9"},{"kind":"number","nativeSrc":"5313:2:9","nodeType":"YulLiteral","src":"5313:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5284:3:9","nodeType":"YulIdentifier","src":"5284:3:9"},"nativeSrc":"5284:32:9","nodeType":"YulFunctionCall","src":"5284:32:9"},"nativeSrc":"5281:119:9","nodeType":"YulIf","src":"5281:119:9"},{"nativeSrc":"5410:117:9","nodeType":"YulBlock","src":"5410:117:9","statements":[{"nativeSrc":"5425:15:9","nodeType":"YulVariableDeclaration","src":"5425:15:9","value":{"kind":"number","nativeSrc":"5439:1:9","nodeType":"YulLiteral","src":"5439:1:9","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5429:6:9","nodeType":"YulTypedName","src":"5429:6:9","type":""}]},{"nativeSrc":"5454:63:9","nodeType":"YulAssignment","src":"5454:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5489:9:9","nodeType":"YulIdentifier","src":"5489:9:9"},{"name":"offset","nativeSrc":"5500:6:9","nodeType":"YulIdentifier","src":"5500:6:9"}],"functionName":{"name":"add","nativeSrc":"5485:3:9","nodeType":"YulIdentifier","src":"5485:3:9"},"nativeSrc":"5485:22:9","nodeType":"YulFunctionCall","src":"5485:22:9"},{"name":"dataEnd","nativeSrc":"5509:7:9","nodeType":"YulIdentifier","src":"5509:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5464:20:9","nodeType":"YulIdentifier","src":"5464:20:9"},"nativeSrc":"5464:53:9","nodeType":"YulFunctionCall","src":"5464:53:9"},"variableNames":[{"name":"value0","nativeSrc":"5454:6:9","nodeType":"YulIdentifier","src":"5454:6:9"}]}]},{"nativeSrc":"5537:118:9","nodeType":"YulBlock","src":"5537:118:9","statements":[{"nativeSrc":"5552:16:9","nodeType":"YulVariableDeclaration","src":"5552:16:9","value":{"kind":"number","nativeSrc":"5566:2:9","nodeType":"YulLiteral","src":"5566:2:9","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5556:6:9","nodeType":"YulTypedName","src":"5556:6:9","type":""}]},{"nativeSrc":"5582:63:9","nodeType":"YulAssignment","src":"5582:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5617:9:9","nodeType":"YulIdentifier","src":"5617:9:9"},{"name":"offset","nativeSrc":"5628:6:9","nodeType":"YulIdentifier","src":"5628:6:9"}],"functionName":{"name":"add","nativeSrc":"5613:3:9","nodeType":"YulIdentifier","src":"5613:3:9"},"nativeSrc":"5613:22:9","nodeType":"YulFunctionCall","src":"5613:22:9"},{"name":"dataEnd","nativeSrc":"5637:7:9","nodeType":"YulIdentifier","src":"5637:7:9"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5592:20:9","nodeType":"YulIdentifier","src":"5592:20:9"},"nativeSrc":"5592:53:9","nodeType":"YulFunctionCall","src":"5592:53:9"},"variableNames":[{"name":"value1","nativeSrc":"5582:6:9","nodeType":"YulIdentifier","src":"5582:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5188:474:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5233:9:9","nodeType":"YulTypedName","src":"5233:9:9","type":""},{"name":"dataEnd","nativeSrc":"5244:7:9","nodeType":"YulTypedName","src":"5244:7:9","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5256:6:9","nodeType":"YulTypedName","src":"5256:6:9","type":""},{"name":"value1","nativeSrc":"5264:6:9","nodeType":"YulTypedName","src":"5264:6:9","type":""}],"src":"5188:474:9"},{"body":{"nativeSrc":"5696:152:9","nodeType":"YulBlock","src":"5696:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5713:1:9","nodeType":"YulLiteral","src":"5713:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"5716:77:9","nodeType":"YulLiteral","src":"5716:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5706:6:9","nodeType":"YulIdentifier","src":"5706:6:9"},"nativeSrc":"5706:88:9","nodeType":"YulFunctionCall","src":"5706:88:9"},"nativeSrc":"5706:88:9","nodeType":"YulExpressionStatement","src":"5706:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5810:1:9","nodeType":"YulLiteral","src":"5810:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"5813:4:9","nodeType":"YulLiteral","src":"5813:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5803:6:9","nodeType":"YulIdentifier","src":"5803:6:9"},"nativeSrc":"5803:15:9","nodeType":"YulFunctionCall","src":"5803:15:9"},"nativeSrc":"5803:15:9","nodeType":"YulExpressionStatement","src":"5803:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5834:1:9","nodeType":"YulLiteral","src":"5834:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"5837:4:9","nodeType":"YulLiteral","src":"5837:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5827:6:9","nodeType":"YulIdentifier","src":"5827:6:9"},"nativeSrc":"5827:15:9","nodeType":"YulFunctionCall","src":"5827:15:9"},"nativeSrc":"5827:15:9","nodeType":"YulExpressionStatement","src":"5827:15:9"}]},"name":"panic_error_0x22","nativeSrc":"5668:180:9","nodeType":"YulFunctionDefinition","src":"5668:180:9"},{"body":{"nativeSrc":"5905:269:9","nodeType":"YulBlock","src":"5905:269:9","statements":[{"nativeSrc":"5915:22:9","nodeType":"YulAssignment","src":"5915:22:9","value":{"arguments":[{"name":"data","nativeSrc":"5929:4:9","nodeType":"YulIdentifier","src":"5929:4:9"},{"kind":"number","nativeSrc":"5935:1:9","nodeType":"YulLiteral","src":"5935:1:9","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5925:3:9","nodeType":"YulIdentifier","src":"5925:3:9"},"nativeSrc":"5925:12:9","nodeType":"YulFunctionCall","src":"5925:12:9"},"variableNames":[{"name":"length","nativeSrc":"5915:6:9","nodeType":"YulIdentifier","src":"5915:6:9"}]},{"nativeSrc":"5946:38:9","nodeType":"YulVariableDeclaration","src":"5946:38:9","value":{"arguments":[{"name":"data","nativeSrc":"5976:4:9","nodeType":"YulIdentifier","src":"5976:4:9"},{"kind":"number","nativeSrc":"5982:1:9","nodeType":"YulLiteral","src":"5982:1:9","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5972:3:9","nodeType":"YulIdentifier","src":"5972:3:9"},"nativeSrc":"5972:12:9","nodeType":"YulFunctionCall","src":"5972:12:9"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5950:18:9","nodeType":"YulTypedName","src":"5950:18:9","type":""}]},{"body":{"nativeSrc":"6023:51:9","nodeType":"YulBlock","src":"6023:51:9","statements":[{"nativeSrc":"6037:27:9","nodeType":"YulAssignment","src":"6037:27:9","value":{"arguments":[{"name":"length","nativeSrc":"6051:6:9","nodeType":"YulIdentifier","src":"6051:6:9"},{"kind":"number","nativeSrc":"6059:4:9","nodeType":"YulLiteral","src":"6059:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6047:3:9","nodeType":"YulIdentifier","src":"6047:3:9"},"nativeSrc":"6047:17:9","nodeType":"YulFunctionCall","src":"6047:17:9"},"variableNames":[{"name":"length","nativeSrc":"6037:6:9","nodeType":"YulIdentifier","src":"6037:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6003:18:9","nodeType":"YulIdentifier","src":"6003:18:9"}],"functionName":{"name":"iszero","nativeSrc":"5996:6:9","nodeType":"YulIdentifier","src":"5996:6:9"},"nativeSrc":"5996:26:9","nodeType":"YulFunctionCall","src":"5996:26:9"},"nativeSrc":"5993:81:9","nodeType":"YulIf","src":"5993:81:9"},{"body":{"nativeSrc":"6126:42:9","nodeType":"YulBlock","src":"6126:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6140:16:9","nodeType":"YulIdentifier","src":"6140:16:9"},"nativeSrc":"6140:18:9","nodeType":"YulFunctionCall","src":"6140:18:9"},"nativeSrc":"6140:18:9","nodeType":"YulExpressionStatement","src":"6140:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6090:18:9","nodeType":"YulIdentifier","src":"6090:18:9"},{"arguments":[{"name":"length","nativeSrc":"6113:6:9","nodeType":"YulIdentifier","src":"6113:6:9"},{"kind":"number","nativeSrc":"6121:2:9","nodeType":"YulLiteral","src":"6121:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6110:2:9","nodeType":"YulIdentifier","src":"6110:2:9"},"nativeSrc":"6110:14:9","nodeType":"YulFunctionCall","src":"6110:14:9"}],"functionName":{"name":"eq","nativeSrc":"6087:2:9","nodeType":"YulIdentifier","src":"6087:2:9"},"nativeSrc":"6087:38:9","nodeType":"YulFunctionCall","src":"6087:38:9"},"nativeSrc":"6084:84:9","nodeType":"YulIf","src":"6084:84:9"}]},"name":"extract_byte_array_length","nativeSrc":"5854:320:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5889:4:9","nodeType":"YulTypedName","src":"5889:4:9","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5898:6:9","nodeType":"YulTypedName","src":"5898:6:9","type":""}],"src":"5854:320:9"},{"body":{"nativeSrc":"6245:53:9","nodeType":"YulBlock","src":"6245:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6262:3:9","nodeType":"YulIdentifier","src":"6262:3:9"},{"arguments":[{"name":"value","nativeSrc":"6285:5:9","nodeType":"YulIdentifier","src":"6285:5:9"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6267:17:9","nodeType":"YulIdentifier","src":"6267:17:9"},"nativeSrc":"6267:24:9","nodeType":"YulFunctionCall","src":"6267:24:9"}],"functionName":{"name":"mstore","nativeSrc":"6255:6:9","nodeType":"YulIdentifier","src":"6255:6:9"},"nativeSrc":"6255:37:9","nodeType":"YulFunctionCall","src":"6255:37:9"},"nativeSrc":"6255:37:9","nodeType":"YulExpressionStatement","src":"6255:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6180:118:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6233:5:9","nodeType":"YulTypedName","src":"6233:5:9","type":""},{"name":"pos","nativeSrc":"6240:3:9","nodeType":"YulTypedName","src":"6240:3:9","type":""}],"src":"6180:118:9"},{"body":{"nativeSrc":"6458:288:9","nodeType":"YulBlock","src":"6458:288:9","statements":[{"nativeSrc":"6468:26:9","nodeType":"YulAssignment","src":"6468:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"6480:9:9","nodeType":"YulIdentifier","src":"6480:9:9"},{"kind":"number","nativeSrc":"6491:2:9","nodeType":"YulLiteral","src":"6491:2:9","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6476:3:9","nodeType":"YulIdentifier","src":"6476:3:9"},"nativeSrc":"6476:18:9","nodeType":"YulFunctionCall","src":"6476:18:9"},"variableNames":[{"name":"tail","nativeSrc":"6468:4:9","nodeType":"YulIdentifier","src":"6468:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6548:6:9","nodeType":"YulIdentifier","src":"6548:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6561:9:9","nodeType":"YulIdentifier","src":"6561:9:9"},{"kind":"number","nativeSrc":"6572:1:9","nodeType":"YulLiteral","src":"6572:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6557:3:9","nodeType":"YulIdentifier","src":"6557:3:9"},"nativeSrc":"6557:17:9","nodeType":"YulFunctionCall","src":"6557:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6504:43:9","nodeType":"YulIdentifier","src":"6504:43:9"},"nativeSrc":"6504:71:9","nodeType":"YulFunctionCall","src":"6504:71:9"},"nativeSrc":"6504:71:9","nodeType":"YulExpressionStatement","src":"6504:71:9"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6629:6:9","nodeType":"YulIdentifier","src":"6629:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6642:9:9","nodeType":"YulIdentifier","src":"6642:9:9"},{"kind":"number","nativeSrc":"6653:2:9","nodeType":"YulLiteral","src":"6653:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6638:3:9","nodeType":"YulIdentifier","src":"6638:3:9"},"nativeSrc":"6638:18:9","nodeType":"YulFunctionCall","src":"6638:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6585:43:9","nodeType":"YulIdentifier","src":"6585:43:9"},"nativeSrc":"6585:72:9","nodeType":"YulFunctionCall","src":"6585:72:9"},"nativeSrc":"6585:72:9","nodeType":"YulExpressionStatement","src":"6585:72:9"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6711:6:9","nodeType":"YulIdentifier","src":"6711:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6724:9:9","nodeType":"YulIdentifier","src":"6724:9:9"},{"kind":"number","nativeSrc":"6735:2:9","nodeType":"YulLiteral","src":"6735:2:9","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6720:3:9","nodeType":"YulIdentifier","src":"6720:3:9"},"nativeSrc":"6720:18:9","nodeType":"YulFunctionCall","src":"6720:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6667:43:9","nodeType":"YulIdentifier","src":"6667:43:9"},"nativeSrc":"6667:72:9","nodeType":"YulFunctionCall","src":"6667:72:9"},"nativeSrc":"6667:72:9","nodeType":"YulExpressionStatement","src":"6667:72:9"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6304:442:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6414:9:9","nodeType":"YulTypedName","src":"6414:9:9","type":""},{"name":"value2","nativeSrc":"6426:6:9","nodeType":"YulTypedName","src":"6426:6:9","type":""},{"name":"value1","nativeSrc":"6434:6:9","nodeType":"YulTypedName","src":"6434:6:9","type":""},{"name":"value0","nativeSrc":"6442:6:9","nodeType":"YulTypedName","src":"6442:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6453:4:9","nodeType":"YulTypedName","src":"6453:4:9","type":""}],"src":"6304:442:9"},{"body":{"nativeSrc":"6850:124:9","nodeType":"YulBlock","src":"6850:124:9","statements":[{"nativeSrc":"6860:26:9","nodeType":"YulAssignment","src":"6860:26:9","value":{"arguments":[{"name":"headStart","nativeSrc":"6872:9:9","nodeType":"YulIdentifier","src":"6872:9:9"},{"kind":"number","nativeSrc":"6883:2:9","nodeType":"YulLiteral","src":"6883:2:9","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6868:3:9","nodeType":"YulIdentifier","src":"6868:3:9"},"nativeSrc":"6868:18:9","nodeType":"YulFunctionCall","src":"6868:18:9"},"variableNames":[{"name":"tail","nativeSrc":"6860:4:9","nodeType":"YulIdentifier","src":"6860:4:9"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6940:6:9","nodeType":"YulIdentifier","src":"6940:6:9"},{"arguments":[{"name":"headStart","nativeSrc":"6953:9:9","nodeType":"YulIdentifier","src":"6953:9:9"},{"kind":"number","nativeSrc":"6964:1:9","nodeType":"YulLiteral","src":"6964:1:9","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6949:3:9","nodeType":"YulIdentifier","src":"6949:3:9"},"nativeSrc":"6949:17:9","nodeType":"YulFunctionCall","src":"6949:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6896:43:9","nodeType":"YulIdentifier","src":"6896:43:9"},"nativeSrc":"6896:71:9","nodeType":"YulFunctionCall","src":"6896:71:9"},"nativeSrc":"6896:71:9","nodeType":"YulExpressionStatement","src":"6896:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6752:222:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6822:9:9","nodeType":"YulTypedName","src":"6822:9:9","type":""},{"name":"value0","nativeSrc":"6834:6:9","nodeType":"YulTypedName","src":"6834:6:9","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6845:4:9","nodeType":"YulTypedName","src":"6845:4:9","type":""}],"src":"6752:222:9"},{"body":{"nativeSrc":"7008:152:9","nodeType":"YulBlock","src":"7008:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7025:1:9","nodeType":"YulLiteral","src":"7025:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"7028:77:9","nodeType":"YulLiteral","src":"7028:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7018:6:9","nodeType":"YulIdentifier","src":"7018:6:9"},"nativeSrc":"7018:88:9","nodeType":"YulFunctionCall","src":"7018:88:9"},"nativeSrc":"7018:88:9","nodeType":"YulExpressionStatement","src":"7018:88:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7122:1:9","nodeType":"YulLiteral","src":"7122:1:9","type":"","value":"4"},{"kind":"number","nativeSrc":"7125:4:9","nodeType":"YulLiteral","src":"7125:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7115:6:9","nodeType":"YulIdentifier","src":"7115:6:9"},"nativeSrc":"7115:15:9","nodeType":"YulFunctionCall","src":"7115:15:9"},"nativeSrc":"7115:15:9","nodeType":"YulExpressionStatement","src":"7115:15:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7146:1:9","nodeType":"YulLiteral","src":"7146:1:9","type":"","value":"0"},{"kind":"number","nativeSrc":"7149:4:9","nodeType":"YulLiteral","src":"7149:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7139:6:9","nodeType":"YulIdentifier","src":"7139:6:9"},"nativeSrc":"7139:15:9","nodeType":"YulFunctionCall","src":"7139:15:9"},"nativeSrc":"7139:15:9","nodeType":"YulExpressionStatement","src":"7139:15:9"}]},"name":"panic_error_0x11","nativeSrc":"6980:180:9","nodeType":"YulFunctionDefinition","src":"6980:180:9"},{"body":{"nativeSrc":"7210:147:9","nodeType":"YulBlock","src":"7210:147:9","statements":[{"nativeSrc":"7220:25:9","nodeType":"YulAssignment","src":"7220:25:9","value":{"arguments":[{"name":"x","nativeSrc":"7243:1:9","nodeType":"YulIdentifier","src":"7243:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7225:17:9","nodeType":"YulIdentifier","src":"7225:17:9"},"nativeSrc":"7225:20:9","nodeType":"YulFunctionCall","src":"7225:20:9"},"variableNames":[{"name":"x","nativeSrc":"7220:1:9","nodeType":"YulIdentifier","src":"7220:1:9"}]},{"nativeSrc":"7254:25:9","nodeType":"YulAssignment","src":"7254:25:9","value":{"arguments":[{"name":"y","nativeSrc":"7277:1:9","nodeType":"YulIdentifier","src":"7277:1:9"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7259:17:9","nodeType":"YulIdentifier","src":"7259:17:9"},"nativeSrc":"7259:20:9","nodeType":"YulFunctionCall","src":"7259:20:9"},"variableNames":[{"name":"y","nativeSrc":"7254:1:9","nodeType":"YulIdentifier","src":"7254:1:9"}]},{"nativeSrc":"7288:16:9","nodeType":"YulAssignment","src":"7288:16:9","value":{"arguments":[{"name":"x","nativeSrc":"7299:1:9","nodeType":"YulIdentifier","src":"7299:1:9"},{"name":"y","nativeSrc":"7302:1:9","nodeType":"YulIdentifier","src":"7302:1:9"}],"functionName":{"name":"add","nativeSrc":"7295:3:9","nodeType":"YulIdentifier","src":"7295:3:9"},"nativeSrc":"7295:9:9","nodeType":"YulFunctionCall","src":"7295:9:9"},"variableNames":[{"name":"sum","nativeSrc":"7288:3:9","nodeType":"YulIdentifier","src":"7288:3:9"}]},{"body":{"nativeSrc":"7328:22:9","nodeType":"YulBlock","src":"7328:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7330:16:9","nodeType":"YulIdentifier","src":"7330:16:9"},"nativeSrc":"7330:18:9","nodeType":"YulFunctionCall","src":"7330:18:9"},"nativeSrc":"7330:18:9","nodeType":"YulExpressionStatement","src":"7330:18:9"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7320:1:9","nodeType":"YulIdentifier","src":"7320:1:9"},{"name":"sum","nativeSrc":"7323:3:9","nodeType":"YulIdentifier","src":"7323:3:9"}],"functionName":{"name":"gt","nativeSrc":"7317:2:9","nodeType":"YulIdentifier","src":"7317:2:9"},"nativeSrc":"7317:10:9","nodeType":"YulFunctionCall","src":"7317:10:9"},"nativeSrc":"7314:36:9","nodeType":"YulIf","src":"7314:36:9"}]},"name":"checked_add_t_uint256","nativeSrc":"7166:191:9","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7197:1:9","nodeType":"YulTypedName","src":"7197:1:9","type":""},{"name":"y","nativeSrc":"7200:1:9","nodeType":"YulTypedName","src":"7200:1:9","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7206:3:9","nodeType":"YulTypedName","src":"7206:3:9","type":""}],"src":"7166:191:9"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aa9565b60405180910390f35b6100d060048036038101906100cb9190610b64565b610292565b6040516100dd9190610bbf565b60405180910390f35b6100ee6102b5565b6040516100fb9190610be9565b60405180910390f35b61011e60048036038101906101199190610c04565b6102bf565b60405161012b9190610bbf565b60405180910390f35b61013c6102ee565b6040516101499190610c73565b60405180910390f35b61016c60048036038101906101679190610c8e565b6102f7565b6040516101799190610be9565b60405180910390f35b61018a61033f565b6040516101979190610aa9565b60405180910390f35b6101ba60048036038101906101b59190610b64565b6103d1565b6040516101c79190610bbf565b60405180910390f35b6101ea60048036038101906101e59190610cbb565b6103f4565b6040516101f79190610be9565b60405180910390f35b60606003805461020f90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2a565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e2858585610529565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e9818585610529565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061d565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105235781811015610513578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050a93929190610d6a565b60405180910390fd5b6105228484848403600061061d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105929190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106049190610da1565b60405180910390fd5b6106188383836107f4565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361068f5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106869190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107015760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f89190610da1565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e59190610be9565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084657806002600082825461083a9190610deb565b92505081905550610919565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108c993929190610d6a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096257806002600082825403925050819055506109af565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0c9190610be9565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a53578082015181840152602081019050610a38565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7b82610a19565b610a858185610a24565b9350610a95818560208601610a35565b610a9e81610a5f565b840191505092915050565b60006020820190508181036000830152610ac38184610a70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afb82610ad0565b9050919050565b610b0b81610af0565b8114610b1657600080fd5b50565b600081359050610b2881610b02565b92915050565b6000819050919050565b610b4181610b2e565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b60008060408385031215610b7b57610b7a610acb565b5b6000610b8985828601610b19565b9250506020610b9a85828601610b4f565b9150509250929050565b60008115159050919050565b610bb981610ba4565b82525050565b6000602082019050610bd46000830184610bb0565b92915050565b610be381610b2e565b82525050565b6000602082019050610bfe6000830184610bda565b92915050565b600080600060608486031215610c1d57610c1c610acb565b5b6000610c2b86828701610b19565b9350506020610c3c86828701610b19565b9250506040610c4d86828701610b4f565b9150509250925092565b600060ff82169050919050565b610c6d81610c57565b82525050565b6000602082019050610c886000830184610c64565b92915050565b600060208284031215610ca457610ca3610acb565b5b6000610cb284828501610b19565b91505092915050565b60008060408385031215610cd257610cd1610acb565b5b6000610ce085828601610b19565b9250506020610cf185828601610b19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4257607f821691505b602082108103610d5557610d54610cfb565b5b50919050565b610d6481610af0565b82525050565b6000606082019050610d7f6000830186610d5b565b610d8c6020830185610bda565b610d996040830184610bda565b949350505050565b6000602082019050610db66000830184610d5b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df682610b2e565b9150610e0183610b2e565b9250828201905080821115610e1957610e18610dbc565b5b9291505056fea2646970667358221220632439b95215f46f2fd859e0909efcfc5396766b7dfd21ccc7996d481b1b914e64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x523 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x522 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x618 DUP4 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x846 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x962 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9AF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xA85 DUP2 DUP6 PUSH2 0xA24 JUMP JUMPDEST SWAP4 POP PUSH2 0xA95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0xA5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC3 DUP2 DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB28 DUP2 PUSH2 0xB02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP2 EQ PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5E DUP2 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB89 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9A DUP6 DUP3 DUP7 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB9 DUP2 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3C DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4D DUP7 DUP3 DUP8 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA4 JUMPI PUSH2 0xCA3 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB2 DUP5 DUP3 DUP6 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF1 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD55 JUMPI PUSH2 0xD54 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD64 DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP3 PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP4 PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0xDBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x2439B952 ISZERO DELEGATECALL PUSH16 0x2FD859E0909EFCFC5396766B7DFD21CC 0xC7 SWAP10 PUSH14 0x481B1B914E64736F6C6343000818 STOP CALLER ","sourceMap":"170:144:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"733800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"343","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenB.sol\":\"TokenB\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/TokenB.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\r\\npragma solidity ^0.8.22;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract TokenB is ERC20 {\\r\\n    constructor(uint256 initialSupply) ERC20(\\\"TokenB\\\", \\\"TKB\\\") {\\r\\n        _mint(msg.sender, initialSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x36e857b8b1f7b4abb5938d6268e0e81e15d1ef0aa449f0e4486c0150090a02ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":307,"contract":"contracts/TokenB.sol:TokenB","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":313,"contract":"contracts/TokenB.sol:TokenB","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":315,"contract":"contracts/TokenB.sol:TokenB","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":317,"contract":"contracts/TokenB.sol:TokenB","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":319,"contract":"contracts/TokenB.sol:TokenB","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}