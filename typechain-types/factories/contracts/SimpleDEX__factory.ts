/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SimpleDEX, SimpleDEXInterface } from "../../contracts/SimpleDEX";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "TokenSwapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountAIn",
        type: "uint256",
      },
    ],
    name: "swapAforB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountBIn",
        type: "uint256",
      },
    ],
    name: "swapBforA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenA",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenB",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b9138038062001b91833981810160405281019062000037919062000277565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620002cf565b60405180910390fd5b620000be816200014960201b60201c565b5081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002ec565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200023f8262000212565b9050919050565b620002518162000232565b81146200025d57600080fd5b50565b600081519050620002718162000246565b92915050565b600080604083850312156200029157620002906200020d565b5b6000620002a18582860162000260565b9250506020620002b48582860162000260565b9150509250929050565b620002c98162000232565b82525050565b6000602082019050620002e66000830184620002be565b92915050565b61189580620002fc6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b146101355780639cd441da146101535780639d7de6b31461016f578063e4f1f70a1461018b578063f2fde38b146101a75761009e565b80630fc63d10146100a357806341976e09146100c15780635f64b55b146100f1578063715018a61461010f5780638014a7aa14610119575b600080fd5b6100ab6101c3565b6040516100b891906112e7565b60405180910390f35b6100db60048036038101906100d69190611345565b6101e9565b6040516100e8919061138b565b60405180910390f35b6100f96104b5565b60405161010691906112e7565b60405180910390f35b6101176104db565b005b610133600480360381019061012e91906113d2565b6104ef565b005b61013d61081b565b60405161014a919061140e565b60405180910390f35b61016d60048036038101906101689190611429565b610844565b005b61018960048036038101906101849190611429565b610a1e565b005b6101a560048036038101906101a091906113d2565b610d36565b005b6101c160048036038101906101bc9190611345565b611062565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806102945750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca906114c6565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610330919061140e565b602060405180830381865afa15801561034d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037191906114fb565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103d0919061140e565b602060405180830381865afa1580156103ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041191906114fb565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461048c5780670de0b6b3a76400008361047d9190611557565b61048791906115c8565b6104ac565b81670de0b6b3a7640000826104a19190611557565b6104ab91906115c8565b5b92505050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104e36110e8565b6104ed600061116f565b565b60008111610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052990611645565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161058f919061140e565b602060405180830381865afa1580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d091906114fb565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062f919061140e565b602060405180830381865afa15801561064c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067091906114fb565b9050600061067f848385611233565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016106e093929190611665565b6020604051808303816000875af11580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072391906116d4565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610781929190611701565b6020604051808303816000875af11580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c491906116d4565b503373ffffffffffffffffffffffffffffffffffffffff167fd5a1cd88ddd329cc1ddf861a21708efa9ef3136b88e1420c21f91ef6f95ad024858360405161080d92919061172a565b60405180910390a250505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61084c6110e8565b60008211801561085c5750600081115b61089b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108929061179f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016108fa93929190611665565b6020604051808303816000875af1158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d91906116d4565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161099d93929190611665565b6020604051808303816000875af11580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e091906116d4565b507f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b8282604051610a1292919061172a565b60405180910390a15050565b610a266110e8565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a83919061140e565b602060405180830381865afa158015610aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac491906114fb565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b23919061140e565b602060405180830381865afa158015610b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6491906114fb565b9050818411158015610b765750808311155b610bb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bac9061180b565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610c12929190611701565b6020604051808303816000875af1158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5591906116d4565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610cb3929190611701565b6020604051808303816000875af1158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf691906116d4565b507f6f0f96292ae0038c04f9b6bab30f185d9ca02c471d0983f563f2a4f674aef1378484604051610d2892919061172a565b60405180910390a150505050565b60008111610d79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7090611645565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dd6919061140e565b602060405180830381865afa158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1791906114fb565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e76919061140e565b602060405180830381865afa158015610e93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb791906114fb565b90506000610ec6848484611233565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610f2793929190611665565b6020604051808303816000875af1158015610f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6a91906116d4565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610fc8929190611701565b6020604051808303816000875af1158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b91906116d4565b503373ffffffffffffffffffffffffffffffffffffffff167fd5a1cd88ddd329cc1ddf861a21708efa9ef3136b88e1420c21f91ef6f95ad024858360405161105492919061172a565b60405180910390a250505050565b61106a6110e8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110dc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110d3919061140e565b60405180910390fd5b6110e58161116f565b50565b6110f0611260565b73ffffffffffffffffffffffffffffffffffffffff1661110e61081b565b73ffffffffffffffffffffffffffffffffffffffff161461116d57611131611260565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611164919061140e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008383611241919061182b565b828561124d9190611557565b61125791906115c8565b90509392505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112ad6112a86112a384611268565b611288565b611268565b9050919050565b60006112bf82611292565b9050919050565b60006112d1826112b4565b9050919050565b6112e1816112c6565b82525050565b60006020820190506112fc60008301846112d8565b92915050565b600080fd5b600061131282611268565b9050919050565b61132281611307565b811461132d57600080fd5b50565b60008135905061133f81611319565b92915050565b60006020828403121561135b5761135a611302565b5b600061136984828501611330565b91505092915050565b6000819050919050565b61138581611372565b82525050565b60006020820190506113a0600083018461137c565b92915050565b6113af81611372565b81146113ba57600080fd5b50565b6000813590506113cc816113a6565b92915050565b6000602082840312156113e8576113e7611302565b5b60006113f6848285016113bd565b91505092915050565b61140881611307565b82525050565b600060208201905061142360008301846113ff565b92915050565b600080604083850312156114405761143f611302565b5b600061144e858286016113bd565b925050602061145f858286016113bd565b9150509250929050565b600082825260208201905092915050565b7f496e76616c696420746f6b656e00000000000000000000000000000000000000600082015250565b60006114b0600d83611469565b91506114bb8261147a565b602082019050919050565b600060208201905081810360008301526114df816114a3565b9050919050565b6000815190506114f5816113a6565b92915050565b60006020828403121561151157611510611302565b5b600061151f848285016114e6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061156282611372565b915061156d83611372565b925082820261157b81611372565b9150828204841483151761159257611591611528565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006115d382611372565b91506115de83611372565b9250826115ee576115ed611599565b5b828204905092915050565b7f416d6f756e74206d757374206265203e20300000000000000000000000000000600082015250565b600061162f601283611469565b915061163a826115f9565b602082019050919050565b6000602082019050818103600083015261165e81611622565b9050919050565b600060608201905061167a60008301866113ff565b61168760208301856113ff565b611694604083018461137c565b949350505050565b60008115159050919050565b6116b18161169c565b81146116bc57600080fd5b50565b6000815190506116ce816116a8565b92915050565b6000602082840312156116ea576116e9611302565b5b60006116f8848285016116bf565b91505092915050565b600060408201905061171660008301856113ff565b611723602083018461137c565b9392505050565b600060408201905061173f600083018561137c565b61174c602083018461137c565b9392505050565b7f416d6f756e7473206d757374206265203e203000000000000000000000000000600082015250565b6000611789601383611469565b915061179482611753565b602082019050919050565b600060208201905081810360008301526117b88161177c565b9050919050565b7f4c6f77206c697175696469747900000000000000000000000000000000000000600082015250565b60006117f5600d83611469565b9150611800826117bf565b602082019050919050565b60006020820190508181036000830152611824816117e8565b9050919050565b600061183682611372565b915061184183611372565b925082820190508082111561185957611858611528565b5b9291505056fea26469706673582212209348fc4e56a20eb0886da5fa9db2affb0154fad10f5fe6912badaf3c51d4ec4364736f6c63430008180033";

type SimpleDEXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleDEXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleDEX__factory extends ContractFactory {
  constructor(...args: SimpleDEXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenA, _tokenB, overrides || {});
  }
  override deploy(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenA, _tokenB, overrides || {}) as Promise<
      SimpleDEX & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleDEX__factory {
    return super.connect(runner) as SimpleDEX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleDEXInterface {
    return new Interface(_abi) as SimpleDEXInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleDEX {
    return new Contract(address, _abi, runner) as unknown as SimpleDEX;
  }
}
